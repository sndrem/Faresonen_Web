{"version":3,"sources":["Components/Menu/FaresoneMenu.js","Components/ProcedureSteps/FirstSteps.js","services/altOmFotballLeagueService.js","Components/LeagueChooser/LeagueChooser.js","Views/FrontpageView.js","Components/RoundButtons/RoundButtons.js","Components/RoundList/RoundList.js","Components/RoundList/Containers/RoundListContainer.js","Components/ProcedureSteps/Steps.js","Views/MainView.js","Tools/events.js","Components/LeagueProgress/LeagueProgress.js","Data/teamColors.js","Tools/tools.js","Components/NextMatches/NextMatchInfo.js","Components/NextMatches/NextMatches.js","Components/Matches/FinishedMatchElements.js","Components/Matches/FinishedMatches.js","Components/LeagueTable/LeagueTableItem.js","Components/LeagueTable/LeagueTable.js","Components/Topscorers/Topscorers.js","Components/Topscorers/Containers/TopscorersContainer.js","Components/ProcedureSteps/RoundSteps.js","Components/Dangerzone/Dangerzone.js","services/dangerzoneService.js","Components/Dangerzone/Containers/DangerzoneContainer.js","Components/Matches/MatchInfo.js","Components/Matches/Containers/MatchInfoContainer.js","Components/Matches/Matches.js","Components/Dangerzone/Containers/MatchesContainer.js","Views/RoundView.js","Components/Dangerzone/DangerzoneSearch.js","Components/Dangerzone/DangerZoneAccumulator.js","Components/Dangerzone/DangerzoneStatistics.js","services/playerLocalStorageService.js","Views/DangerzoneView.js","Components/FantasyPl/FantasyPlayerFilter.js","Components/FantasyPl/FantasyPlayerAnchor.js","Components/FantasyPl/FantasyPlayers.js","Components/FantasyPl/Containers/FantasyContainer.js","Views/FantasyView.js","Components/PlayerStats/PlayerProfile.js","Components/PlayerStats/Containers/PlayerStatsContainer.js","Views/DetailedPlayerView.js","Tools/Abbreviations.js","Components/Feeds/MatchFeed.js","Components/Filters/DateFilter.js","Views/GigSportsView.js","databaseConfig/firebaseConfig.js","Components/Admin/LogInAdmin.js","Components/Admin/Containers/AddLeaguesContainer.js","Components/Admin/Containers/RemoveLeaguesContainer.js","services/FirebaseService.js","Components/Admin/Containers/LeaguesContainer.js","Data/premierLeagueDefaultColors.js","Components/Admin/NewColorForm.js","Components/Admin/EditColors.js","Components/Admin/Containers/ColorContainer.js","Components/Admin/NewChannelForm.js","Components/Admin/EditChannels.js","Components/Admin/Containers/ChannelContainer.js","Components/Admin/LeagueAdmin.js","Components/Admin/Containers/AdminContainer.js","Views/AdminView.js","Components/NewUser/NewUserForm.js","Components/NewUser/Containers/NewUserContainer.js","Views/NewUserView.js","Components/Accordion/AboutAccordion.js","Views/AboutView.js","Components/FantasyStats/FantasyStatsList.js","services/FantasyStatsService.js","Components/FantasyStats/Containers/FantasyStatsContainer.js","Views/FantasyStatsView.js","Views/My404NotFound.js","Components/PremierLeagueTools/TypeOfGraphicSubMenu.js","Components/PremierLeagueTools/SelectLeague.js","Components/PremierLeagueTools/Containers/SelectLeagueContainer.js","Views/PremierLeagueToolsView.js","Data/kickOfTexts.js","Components/PremierLeagueTools/LiveTeaseGenerator.js","services/altOmFotballMatchService.js","Components/PremierLeagueTools/LiveTeasePreview.js","Components/PremierLeagueTools/Containers/ProgramTeaseGeneratorContainer.js","Data/badgePaths.js","Components/PremierLeagueTools/Containers/LiveTeaseGeneratorContainer.js","Components/PremierLeagueTools/Containers/GraphicsContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["FaresoneMenu","react_default","a","createElement","className","Menu","inverted","Item","as","href","name","Dropdown","item","text","position","FirstSteps","Step","Group","active","Icon","Content","Title","Description","disabled","altOmFotballLeagueService","getAllLeagues","axios","post","max","sportId","filterImportant","getLeagueData","id","Error","concat","get","getActiveSeasonData","url","getActiveSeasonNumber","match","error","LeagueChooser","props","leagues","map","league","activeSeason","activeseason","Grid","Column","key","Card","header","description","length","columns","Message","info","Header","FrontpageView","_ref","switchLeagueName","loading","Object","objectWithoutProperties","Menu_FaresoneMenu","ProcedureSteps_FirstSteps","Components_LeagueChooser_LeagueChooser","assign","RoundButtons","now","tournamentId","seasonId","leagueName","rounds","createUrl","roundInfo","roundNo","nextRoundId","createRoundButton","arguments","undefined","createFinishedButton","moment","startdate","format","createNotFinishedButton","List","round","index","array","endDate","enddate","getNextRoundId","button","createRoundButtons","RoundList","Segment","Dimmer","Loader","Components_RoundButtons_RoundButtons","finished","Date","toISOString","RoundListContainer","_useState","useState","_useState2","slicedToArray","setRounds","_useState3","_useState4","setLoading","useEffect","getRounds","then","data","catch","Components_RoundList_RoundList","Steps","completed","ReactGA","pageview","MainView","_props$match$params","params","ProcedureSteps_Steps","centered","Containers_RoundListContainer","parseInt","Tools_events","goalInPlay","penaltyGoal","ownGoal","postponed","ended","LeagueProgress","getMatchUris","r","matches","roundHasPostponedMatches","some","m","status","events","includes","roundHasFinishedMatches","setFinished","total","setTotal","calculateRounds","promises","Promise","resolve","reject","all","filteredMatches","reduce","obj","matchData","every","confirmed","left","err","removeFinishedRounds","_ref2","Progress","color","progress","value","teamColors","Arsenal","primaryColor","secondaryColor","Bournemouth","Brighton","Burnley","Chelsea","Crystal_Palace","Everton","Huddersfield","Leicester","Liverpool","Manchester_City","Manchester_United","Newcastle","Southampton","Stoke","Swansea","Tottenham","Watford","West_Bromwich","West_Ham","tools","getChannelAndStadium","channel","this","getChannel","stadium","getStadium","referee","getReferee","getDate","datetime","toLocaleDateString","getTime","toLocaleTimeString","getTableColors","leagueId","greens","reds","getTeamColors","teamName","underscoreName","replace","colors","getPersonData","personUrl","getMultiplePersonData","players","p","player","event","getMemberships","extractPersonId","res","exec","NextMatchInfo","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","matchInfo","nextRoundNumber","date","starttime","time","spread","setState","Table","Row","Cell","Component","NextMatches","nextMatchInfo","NextMatches_NextMatchInfo","striped","HeaderCell","Body","FinishedMatchElements","_FinishedMatchElement","splitGameName","_FinishedMatchElement2","home","away","goalScorersHomeTeam","goalScorersAwayTeam","goalEvents","e","list","prevElementA","goalsTeamA","prevElementB","goalsTeamB","previousHomeScore","previousAwayScore","homeScore","awayScore","push","filter","eventType","eventtype","extendedEventType","extendedeventtype","goalWasGoalInPlay","goalWasPenalty","goalWasOwnGoal","uri","split","scorers","scorer","person1","firstname","lastname","eventTime","eventtime","forEach","s","groupedScorers","groupScorers","keys","formatIndividualGoalScorer","join","getNameOfPerson","getGoals","eventUri","_this2","filteredGoalEvents","filterGoalEvents","calculatedEvents","calculateHomeAndAwayEvents","extractPersonNames","_this$state","homeScorers","formatGoalScoreText","awayScorers","size","goalsTeamAEndtime","goalsTeamBEndtime","Divider","FinishedMatches","finishedMatchElements","Matches_FinishedMatchElements","roundNumber","LeagueTableItem","tableData","teamData","getTeamData","team","rowColor","wins","draws","losses","goalsFor","goalsAgainst","goalDifference","points","defaultProps","LeagueTable","tableColors","_ref$table","table","setLeagueName","getLeagueName","tournament","tournamentUri","tableElements","t","LeagueTable_LeagueTableItem","createLeagueTableItems","Topscorers","negative","topscorers","ts","place","value1","value2","value3","TopscorersContainer","setPlayers","slice","Components_Topscorers_Topscorers","RoundSteps","Dangerzone","dangerzoneService","getPlayersWithYellowCards","sortTeams","sort","b","localeCompare","filterPlayers","yellowCards","groupPlayers","elem","groupPlayersArrayResponse","fromObjectToArray","objects","DangerzoneContainer","yellowCardResponse","playersGrouped","Components_Dangerzone_Dangerzone","MatchInfo","matchName","startDate","startTime","Meta","@uri","MatchInfoContainer","ref","trim","refUri","_this3","formatRefereeName","Matches_MatchInfo","Matches","nextMatches","Containers_MatchInfoContainer","padded","MatchesContainer","Components_Matches_Matches","RoundView","getRound","roundId","finishedMatches","_this$setState","_this$setState2","filterFinishedMatches","defineProperty","_this$setState3","_this$props$match$par","_this$props$match$par2","_this$props$match$par3","getTable","finishedMatchesElement","Matches_FinishedMatches","ProcedureSteps_RoundSteps","Components_LeagueProgress_LeagueProgress","Containers_MatchesContainer","Components_LeagueTable_LeagueTable","Components_NextMatches_NextMatches","Containers_TopscorersContainer","Containers_DangerzoneContainer","DangerzoneSearch","formatPlayers","createTeamElements","teams","content","handleSearch","search","target","eliteserien","obosligaen","nextProps","_nextProps$players","filteredPlayers","filtered","toLowerCase","eliteserienSearchFilter","searchFilter","eliteserieElements","obosLigaenSearchFilter","obosligaElements","Form","Field","htmlFor","placeholder","onChange","DangerZoneAccumulator","getInfoMessage","onClick","showModal","icon","removeFeedEvent","removeEventFromState","removePlayer","removeEvent","findIndex","splice","prevState","sortEvents","realTime","elements","Feed","Event","Summary","User","fromNow","Like","Modal","trigger","DangerzoneStatistics","Statistic","widths","Value","Label","socketConnected","playerLocalStorageService","getFromLocalStorage","items","JSON","parse","localStorage","getItem","lastUpdated","localStoragePlayersIsEmpty","_playerLocalStorageSe","playersInLocalStorageExists","saveToLocalStorage","updatedPlayers","setItem","stringify","socket","openSocket","DangerzoneView","setupSocket","open","on","Array","isArray","_this$state$data","merged","personId","find","objectSpread","setDefaultState","getPlayers","overwrite","_data$data","hideModal","handleCancel","_JSON$parse","handleConfirm","_this$state$data2","found","indexOf","close","_this$state$data3","Confirm","cancelButton","confirmButton","onCancel","onConfirm","Dangerzone_DangerzoneStatistics","Dangerzone_DangerzoneSearch","Dangerzone_DangerZoneAccumulator","FantasyPlayerFilter","handleNameSearch","setNameFilter","handlePriceSearch","isNaN","setPriceFilter","parseFloat","handleDreamTeamFilter","setDreamTeamFilter","checked","type","step","Checkbox","label","FantasyPlayerAnchor","inDreamTeam","firstName","secondName","role","tabIndex","FantasyPlayers","handleOpen","_this$props","values","first_name","Components_FantasyPl_FantasyPlayerAnchor","second_name","in_dreamteam","image","Image","wrapped","src","photo","now_cost","total_points","selected_by_percent","news","chancee_of_playing_next_round","FantasyContainer","getTeams","filters","nameFilter","priceFilter","onlyDreamTeam","filterTeams","teamCopy","mergeName","formatPrice","first","last","price","groupTeams","teamToFind","code","team_code","groupedTeams","teamA","teamB","warning","Components_FantasyPl_FantasyPlayerFilter","FantasyPl_FantasyPlayers","FantasyView","Containers_FantasyContainer","PlayerProfile","chanceOfPlayingNextRound","cost","selectedBy","PlayerStatsContainer","playerId","setPlayer","setTeam","getTeam","teamId","goals_scored","assists","points_per_game","minutes","influence","creativity","form","bonus","mapStats","PlayerStats_PlayerProfile","chance_of_playing_next_round","DetailedPlayerView","Containers_PlayerStatsContainer","Abbreviations","getAbbreviations","abbrev","eliteserieAbbr","obosligaAbbr","Kristiansund","Molde","Lillestrøm","Sandefjord","Sarpsborg 08","Stabæk","Strømsgodset","Haugesund","Tromsø","Brann","Rosenborg","Odd","Vålerenga","Start","Ranheim","Bodø/Glimt","Aalesund","Notodden","Tromsdalen","Åsane","Florø","Jerv","Mjøndalen","HamKam","Sogndal","Strømmen","Sandnes Ulf","Nest-Sotra","Ullensaker/Kisa","Viking","Levanger","Kongsvinger","MatchFeed","getBestBetColor","bet","createBetCell","bestBet","cssColor","width","formatPercent","betsNotReadyElement","matchId","homeTeamName","awayTeamName","start","createElements","bets","_m$bets$oddsMarkets$","oddsMarkets","homeValue","drawValue","awayValue","toFixed","formatFreeText","abbrevs","homeTeamAbbrev","awayTeamAbbrev","homeTeamBet","drawBet","awayTeamBet","freeText","TextArea","autoHeight","DateFilter","handleChange","preventDefault","updateDate","GigSportsView","extractLeague","competitions","addHours","hour","add","filterMatchesByDate","toDateString","connectGamesAndBets","foundBet","connectedMatch","fetchMatches","fetch","gigDomain","response","json","updateError","fetchBets","dateFilter","message","process","document","title","feed","eliteserieBets","obosligaBets","Filters_DateFilter","Components_Feeds_MatchFeed","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","LogInAdmin","email","setEmail","pwd","setPwd","_useState5","_useState6","setError","required","autoComplete","style","display","Button","firebaseConfig","auth","signInWithEmailAndPassword","AddLeaguesContainer","addLeagues","leagueData","d","setSelectedLeagues","saveLeagues","selectedLeagues","saveSelectedLeagues","altOmFotballLeagues","fluid","multiple","selection","options","RemoveLeaguesContainer","removeLeague","dataset","data-id","FirebaseService","getLeagues","cb","database","snapshot","mapLeaguesToList","val","updateLeague","set","console","warn","log","remove","getColors","addColor","removeFirebaseSpecializedCharacters","char","removeColor","addChannel","removeChannel","getChannels","LeaguesContainer","service","processLeagues","getAltOmFotballLeagues","bind","assertThisInitialized","Containers_AddLeaguesContainer","Admin_Containers_RemoveLeaguesContainer","premierLeagueDefaultColors","NewColorForm","constructColorObject","hex","number","saveColor","forms","colorForm","checkValidity","_this$props$color","colorObject","colorKey","valid","formIsValid","handleColorChange","_this$props$color2","onSubmit","Input","react_color_lib","presetColors","resetForm","EditColors","editColor","deleteColor","fontWeight","height","backgroundColor","border","borderRadius","flexDirection","ColorContainer","processColors","setColor","selectedColor","hexColor","Admin_NewColorForm","Admin_EditColors","NewChannelForm","_ref$selectedChannel","selectedChannel","handleChangeAndValidateForm","channelForm","min","EditChannels","channels","editChannel","deleteChannel","maxHeight","overflowY","ChannelContainer","processChannels","sortChannels","channelId","Admin_NewChannelForm","Admin_EditChannels","LeagueAdmin","getMenuComponent","component","menuComponents","logOut","signOut","handleItemClick","activeItem","ligaer","Containers_LeaguesContainer","farger","Containers_ColorContainer","kanaler","Containers_ChannelContainer","menuComponent","tabular","AdminContainer","user","authListener","onAuthStateChanged","Admin_LeagueAdmin","Admin_LogInAdmin","AdminView","Container","Containers_AdminContainer","FormErrors","errors","NewUserForm","formErrors","NewUserForm_FormErrors","NewUserContainer","password","confirmedPassword","createUserWithEmailAndPassword","_this$state2","NewUser_NewUserForm","React","NewUserView","Containers_NewUserContainer","AboutAccordion","activeIndex","setActiveIndex","handleClick","titleProps","newIndex","calculateNewIndex","Accordion","AboutView","Accordion_AboutAccordion","FantasyStatsList","FantasyStatsService","getMostSelectedPlayers","limit","selectedPlayers","selectA","selectB","getMostExpensivePlayer","FantasyStatsContainer","getMostExpensivePlayers","expensivePlayers","toConsumableArray","formatErrors","FantasyStats_FantasyStatsList","FantasyStatsView","Containers_FantasyStatsContainer","My404NotFound","TypeOfGraphicSubMenu","updateActiveItem","link","SelectLeague","setSelectedLeague","selectedLeague","SelectLeagueContainer","PremierLeagueTools_SelectLeague","PremierLeagueToolsView","graphicComponent","PremierLeagueTools_TypeOfGraphicSubMenu","Containers_SelectLeagueContainer","today","tomorrow","monday","tuesday","thursday","friday","sunday","kickOfTexts","LiveTeaseGenerator","defaultChannels","allChannels","createTimes","handleOnChange","times","i","y","padTime","toString","tz","setDefault","from","mapMatches","defaultValue","AltOmFotballMatchService","getMatches","getOnlyNotDoneMatches","filterNotDoneMatches","splitNames","delimiter","getChannelName","channelFound","LiveTeasePreview","selectedMatch","matchTime","matchTimeText","homeColor","findColor","awayColor","script","altOmFotballMatchService","background","ProgramTeaseGeneratorContainer","createScript","_altOmFotballMatchSer","_altOmFotballMatchSer2","_selectedLeague$split","_selectedLeague$split2","season","Components_PremierLeagueTools_LiveTeaseGenerator","PremierLeagueTools_LiveTeasePreview","path","badges","LiveTeaseGeneratorContainer","getGenerator","colorAway","colorHome","getBadgePath","badgeFound","badge","ch","getScriptColor","formatChannels","formattingChannels","formattedChannels","tvChannels","homeTeam","formatName","awayTeam","homeBadge","awayBadge","c","leagueSelected","generator","GraphicsContainer","getTypeOfGraphicComponents","Containers_LiveTeaseGeneratorContainer","Containers_ProgramTeaseGeneratorContainer","mapLeagues","matchService","element","mappedLeagues","Views_PremierLeagueToolsView","App","initialize","es","exact","Views_FrontpageView","leagueInfo","Views_MainView","render","Views_RoundView","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Raven","config","install","ReactDOM","src_App","getElementById","URL","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.796cf657.chunk.js","sourcesContent":["import React from \"react\";\nimport {Menu, Dropdown} from \"semantic-ui-react\";\n\nconst FaresoneMenu = () => (\n  <div className=\"no-print\">\n    <Menu inverted>\n      <Menu.Item as=\"a\" href=\"#/\" name=\"home\">\n        Hjem\n      </Menu.Item>\n      <Menu.Item as=\"a\" href=\"#/dangerzone\" name=\"dangerzone\">\n        Faresonen\n      </Menu.Item>\n    \n      <Dropdown item text=\"Admin\">\n        <Dropdown.Menu>\n          <Dropdown.Item text=\"Logg inn\" as=\"a\" href=\"#/admin\" name=\"admin\" />\n          <Dropdown.Item\n            text=\"Opprett ny bruker\"\n            as=\"a\"\n            href=\"#/newuser\"\n            name=\"newuser\"\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Menu.Item position=\"right\" as=\"a\" href=\"#/about\" name=\"about\">\n        Om\n      </Menu.Item>\n    </Menu>\n  </div>\n);\n\nexport default FaresoneMenu;\n","import React from \"react\";\nimport {Icon, Step} from \"semantic-ui-react\";\n\nconst FirstSteps = () => (\n  <Step.Group>\n    <Step active>\n      <Icon name=\"soccer\" />\n      <Step.Content>\n        <Step.Title>Velg liga</Step.Title>\n        <Step.Description>\n          Hvilken liga skal du generere lefse for?\n        </Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"numbered list\" />\n      <Step.Content>\n        <Step.Title>Velg runde</Step.Title>\n        <Step.Description>Hvilken runde gjelder lefsen for?</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"print\" />\n      <Step.Content>\n        <Step.Title>Print</Step.Title>\n        <Step.Description>Ctrl + P for å printe lefsen</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"cocktail\" />\n      <Step.Content>\n        <Step.Title>Bra jobbet</Step.Title>\n        <Step.Description>Ta deg en velfortjent pause!</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default FirstSteps;\n","// @flow\nimport axios from \"axios\";\n\nexport default {\n  getAllLeagues() {\n    return axios.post(\"/leagues/all\", {\n      max: 1500,\n      sportId: 1,\n      filterImportant: \"feed\",\n    });\n  },\n  getLeagueData(id: string) {\n    if (!id) {\n      throw new Error(\n        `You must provide an ID to get league data. ${id} provided is not valid`,\n      );\n    }\n    return axios.get(`http://api.tv2.no/sport/resources/tournaments/${id}`);\n  },\n  getActiveSeasonData(url: string) {\n    if (!url) throw new Error(\"You must specify a url to get the active season\");\n    return axios.get(url);\n  },\n  getActiveSeasonNumber(url: string) {\n    try {\n      return url.match(/\\d+/gm)[1];\n    } catch (error) {\n      throw new Error(`Could not get active season number from ${url}`);\n    }\n  },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Card, Message} from \"semantic-ui-react\";\nimport altOmFotballLeagueService from \"../../services/altOmFotballLeagueService\";\n\nconst LeagueChooser = (props) => {\n  const leagues = props.leagues.map((league) => {\n    const activeSeason = altOmFotballLeagueService.getActiveSeasonNumber(\n      league.activeseason[\"@uri\"],\n    );\n    return (\n      <Grid.Column key={league.id}>\n        <Card\n          href={`#/league/${league.name}/${league.id}/${activeSeason}/`}\n          header={league.name}\n          description={`TurneringsID: ${league.id} - SesongID: ${activeSeason}`}\n        />\n      </Grid.Column>\n    );\n  });\n  return leagues.length > 0 ? (\n    <Grid columns={3}>{leagues}</Grid>\n  ) : (\n    <Message info>\n      <Message.Header>Ingen ligaer tilgjengelig</Message.Header>\n      <p>\n        Det er ingen ligaer lagt til i databasen. Dersom du er administrator kan\n        du legge til kamper\n        {\" \"}\n        <a href=\"#/admin\">her</a>\n        {\" \"}\neller få en administrator\n        til å gjøre det for deg.\n      </p>\n    </Message>\n  );\n};\n\nLeagueChooser.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default LeagueChooser;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FirstSteps from \"../Components/ProcedureSteps/FirstSteps\";\nimport LeagueChooser from \"../Components/LeagueChooser/LeagueChooser\";\n\nconst FrontpageView = ({\n  switchLeagueName,\n  leagues,\n  error,\n  loading,\n  ...props\n}) => (\n  <div>\n    <FaresoneMenu switchLeagueName={switchLeagueName} />\n    <FirstSteps />\n    {loading ? (\n      <p>Henter ligaer...</p>\n    ) : (\n      <LeagueChooser\n        leagues={leagues}\n        switchLeagueName={switchLeagueName}\n        {...props} // eslint-disable-line\n      />\n    )}\n    {error ? <p>{error}</p> : \"\"}\n  </div>\n);\n\nFrontpageView.propTypes = {\n  switchLeagueName: PropTypes.func.isRequired,\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired\n      })\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nexport default FrontpageView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { List } from \"semantic-ui-react\";\nimport \"./RoundButtons.css\";\n\nconst RoundButtons = ({ now, tournamentId, seasonId, leagueName, rounds }) => {\n  const getNextRoundId = (rounds, index) =>\n    rounds[index + 1] ? rounds[index + 1].id : -1;\n\n  const createRoundButtons = rounds =>\n    rounds.map((round, index, array) => {\n      const endDate = round.enddate;\n\n      // eslint-disable-next-line\n      round.nextRoundId = getNextRoundId(array, index);\n      const finished = endDate <= now;\n      const button = createRoundButton(round, finished);\n\n      return <List.Item key={round[\"@uri\"]}>{button}</List.Item>;\n    });\n\n  const createUrl = roundInfo =>\n    `#/league/${tournamentId}/${seasonId}/${leagueName}/round/${\n      roundInfo.roundNo\n    }/roundId/${roundInfo.id}/nextRound/${roundInfo.nextRoundId}`;\n\n  const createFinishedButton = roundInfo => (\n    <a href={createUrl(roundInfo)} className=\"round-buttons finished\">\n      {roundInfo.name}\n    </a>\n  );\n\n  const createNotFinishedButton = roundInfo => (\n    <a href={createUrl(roundInfo)} className=\"round-buttons\">\n      {roundInfo.name}\n      <span className=\"startDate\">\n        Starter: {moment(roundInfo.startdate).format(\"DD.MM.YYYY\")}\n      </span>\n    </a>\n  );\n\n  const createRoundButton = (roundInfo, finished = false) =>\n    finished\n      ? createFinishedButton(roundInfo)\n      : createNotFinishedButton(roundInfo);\n\n  if (!rounds) {\n    return (\n      <p>\n        Kan ikke hente runder for\n        {leagueName}\n      </p>\n    );\n  }\n  return <List>{createRoundButtons(rounds)}</List>;\n};\n\nRoundButtons.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  rounds: PropTypes.arrayOf(\n    PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nextRoundId: PropTypes.string,\n      roundNo: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  now: PropTypes.string.isRequired\n};\n\nexport default RoundButtons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Segment, Dimmer, Loader, Message } from \"semantic-ui-react\";\nimport RoundButtons from \"../RoundButtons/RoundButtons\";\n\nconst RoundList = ({ rounds, loading, leagueName, tournamentId, seasonId }) => {\n  if (rounds.length === 0) {\n    return (\n      <Message info>\n        Klarte ikke å hente runder. Sjekk at du er koblet til internett\n      </Message>\n    );\n  }\n  return (\n    <Segment>\n      <Dimmer active={loading}>\n        <Loader>\n          Henter runder for\n          {leagueName}\n        </Loader>\n      </Dimmer>\n      <RoundButtons\n        tournamentId={tournamentId}\n        seasonId={seasonId}\n        leagueName={leagueName}\n        finished={false}\n        rounds={rounds}\n        now={new Date().toISOString()}\n      />\n    </Segment>\n  );\n};\n\nRoundList.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  rounds: PropTypes.arrayOf(\n    PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nextRoundId: PropTypes.string,\n      roundNo: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RoundList;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport RoundList from \"../RoundList\";\n\nconst RoundListContainer = ({ tournamentId, seasonId, leagueName }) => {\n  const [rounds, setRounds] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(\n    () => {\n      getRounds(tournamentId, seasonId);\n    },\n    [tournamentId, seasonId]\n  );\n\n  const getRounds = (tournamentId, seasonId) => {\n    axios\n      .get(`/rounds/${tournamentId}/${seasonId}`)\n      .then(data => {\n        setRounds(data.data.round || []);\n        setLoading(false);\n      })\n      .catch(() => {\n        setRounds([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <RoundList\n      rounds={rounds}\n      leagueName={leagueName}\n      loading={loading}\n      tournamentId={tournamentId}\n      seasonId={seasonId}\n    />\n  );\n};\n\nRoundListContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  leagueName: PropTypes.string.isRequired\n};\n\nexport default RoundListContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Step } from \"semantic-ui-react\";\n\nconst Steps = ({ league }) => (\n  <Step.Group className=\"no-print\">\n    <Step completed>\n      <Icon name=\"checkmark\" />\n      <Step.Content>\n        <Step.Title>Liga valgt</Step.Title>\n        <Step.Description>\n          Du har valgt\n          {league}\n        </Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step active>\n      <Icon name=\"numbered list\" />\n      <Step.Content>\n        <Step.Title>Velg runde</Step.Title>\n        <Step.Description>Hvilken runde gjelder lefsen for?</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"print\" />\n      <Step.Content>\n        <Step.Title>Print</Step.Title>\n        <Step.Description>Ctrl + P for å printe lefsen</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"cocktail\" />\n      <Step.Content>\n        <Step.Title>Bra jobbet</Step.Title>\n        <Step.Description>Ta deg en velfortjent pause!</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nSteps.propTypes = {\n  league: PropTypes.string.isRequired\n};\n\nexport default Steps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactGA from \"react-ga\";\nimport { Grid } from \"semantic-ui-react\";\nimport RoundListContainer from \"../Components/RoundList/Containers/RoundListContainer\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport Steps from \"../Components/ProcedureSteps/Steps\";\n\nReactGA.pageview(\"/ligaside\");\n\nconst MainView = props => {\n  const { leagueName, tournamentId, seasonId } = props.match.params;\n  return (\n    <div>\n      <FaresoneMenu />\n      <Steps className=\"no-print\" league={leagueName} />\n      <Grid columns=\"4\" centered>\n        <Grid.Column>\n          <h2>{leagueName}</h2>\n          <RoundListContainer\n            leagueName={leagueName}\n            tournamentId={parseInt(tournamentId, 10)}\n            seasonId={parseInt(seasonId, 10)}\n          />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nMainView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }).isRequired\n};\n\nexport default MainView;\n","export default {\n  goalInPlay: [\"http://api.tv2.no/sport/resources/eventtypes/3/\"],\n  penaltyGoal: [\n    \"http://api.tv2.no/sport/resources/extendedeventtypes/304/\",\n    \"http://api.tv2.no/sport/resources/extendedeventtypes/105/\",\n    \"http://api.tv2.no/sport/resources/eventtypes/6/\",\n  ],\n  ownGoal: [\"http://api.tv2.no/sport/resources/extendedeventtypes/220/\"],\n  postponed: [\"http://api.tv2.no/sport/resources/statuses/2/\"],\n  ended: [\"http://api.tv2.no/sport/resources/statuses/1/\"],\n};\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Progress} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport events from \"../../Tools/events\";\n\nconst LeagueProgress = ({tournamentId, seasonId, leagueName}) => {\n  const removeFinishedRounds = rounds => {\n    if (!rounds) throw new Error(\"Rounds cannot be undefined\");\n\n    const promises = getMatchUris(rounds);\n\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then(data => {\n          const filteredMatches = data.reduce(\n            (obj, match) => {\n              const {match: matchData} = match.data;\n              if (\n                matchData.every(\n                  m =>\n                    m.confirmed === \"true\" || roundHasFinishedMatches(matchData)\n                )\n              ) {\n                // eslint-disable-next-line\n                obj.finished += 1;\n              } else if (roundHasPostponedMatches(matchData)) {\n                // eslint-disable-next-line\n                obj.finished += 1;\n              } else {\n                // eslint-disable-next-line\n                obj.left += 1;\n              }\n              return obj;\n            },\n            {finished: 0, left: 0}\n          );\n          resolve(filteredMatches);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  };\n\n  const getMatchUris = rounds => {\n    return rounds.map(r => axios.get(r.matches[\"@uri\"]));\n  };\n\n  const roundHasPostponedMatches = matches => {\n    return matches.some(m => {\n      let status = null;\n      if (m.status) {\n        status = m.status[\"@uri\"];\n      }\n      return events.postponed.includes(status);\n    });\n  };\n\n  const roundHasFinishedMatches = matches => {\n    return matches.some(m => {\n      let status = null;\n      if (m.status) {\n        status = m.status[\"@uri\"];\n      }\n      return events.ended.includes(status);\n    });\n  };\n\n  const [finished, setFinished] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(\n    () => {\n      getRounds(tournamentId, seasonId);\n    },\n    [tournamentId, seasonId]\n  );\n\n  const getRounds = (tournamentId, seasonId) => {\n    axios.get(`/rounds/${tournamentId}/${seasonId}`).then(data => {\n      calculateRounds(data.data.round);\n    });\n  };\n\n  const calculateRounds = rounds => {\n    removeFinishedRounds(rounds).then(({finished, left}) => {\n      setFinished(finished);\n      setTotal(finished + left);\n    });\n  };\n\n  return (\n    <Progress\n      className=\"no-print\"\n      color=\"green\"\n      progress=\"ratio\"\n      total={total}\n      value={finished}\n    >\n      Progresjon for {leagueName}\n    </Progress>\n  );\n};\n\nLeagueProgress.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired\n};\n\nexport default LeagueProgress;\n","export default {\n  Arsenal: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Bournemouth: {\n    primaryColor: \"#ce2f2f\",\n    secondaryColor: \"#000\",\n  },\n  Brighton: {\n    primaryColor: \"#0d57c7\",\n    secondaryColor: \"#fff\",\n  },\n  Burnley: {\n    primaryColor: \"#830951\",\n    secondaryColor: \"#68b6ee\",\n  },\n  Chelsea: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Crystal_Palace: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#ec111d\",\n  },\n  Everton: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Huddersfield: {\n    primaryColor: \"#3891f8\",\n    secondaryColor: \"#fff\",\n  },\n  Leicester: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Liverpool: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Manchester_City: {\n    primaryColor: \"#6ca7ec\",\n    secondaryColor: \"#fff\",\n  },\n  Manchester_United: {\n    primaryColor: \"#cd040a\",\n    secondaryColor: \"#fff\",\n  },\n  Newcastle: {\n    primaryColor: \"#000\",\n    secondaryColor: \"#fff\",\n  },\n  Southampton: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Stoke: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Swansea: {\n    primaryColor: \"#fff\",\n    secondaryColor: \"#f5ce5d\",\n  },\n  Tottenham: {\n    primaryColor: \"#fff\",\n    secondaryColor: \"#1e0769\",\n  },\n  Watford: {\n    primaryColor: \"#e2e806\",\n    secondaryColor: \"#e8060c\",\n  },\n  West_Bromwich: {\n    primaryColor: \"#063973\",\n    secondaryColor: \"#fff\",\n  },\n  West_Ham: {\n    primaryColor: \"#830951\",\n    secondaryColor: \"#68b6ee\",\n  },\n};\n","import axios from \"axios\";\nimport teamColors from \"../Data/teamColors\";\n\nconst tools = {\n  getChannelAndStadium(match) {\n    return {\n      channel: this.getChannel(match),\n      stadium: this.getStadium(match),\n      referee: this.getReferee(match),\n    };\n  },\n\n  getChannel(match) {\n    if (match.channel) {\n      return axios.get(match.channel[\"@uri\"]);\n    }\n    return null;\n  },\n\n  getStadium(match) {\n    if (match.stadium) {\n      return axios.get(match.stadium[\"@uri\"]);\n    }\n    return null;\n  },\n\n  getDate(datetime) {\n    return new Date(datetime).toLocaleDateString(\"no-NO\");\n  },\n\n  getTime(datetime) {\n    return new Date(datetime).toLocaleTimeString(\"no-NB\");\n  },\n\n  getReferee(match) {\n    if (match.referee) {\n      return {referee: axios.get(match.referee[\"@uri\"])};\n    }\n    return {\n      referee: {info: \"Dommer ikke klar\"},\n    };\n  },\n\n  getTableColors(leagueId) {\n    const data = {\n      greens: [],\n      reds: [],\n    };\n\n    switch (leagueId) {\n      case 1:\n        data.greens = [0, 1, 2];\n        data.reds = [14, 15];\n        return data;\n      case 230:\n        data.greens = [0, 1, 2, 3];\n        data.reds = [17, 18, 19];\n        return data;\n      default:\n        return data;\n    }\n  },\n\n  getTeamColors(teamName) {\n    if (!teamName) throw new Error(\"You must provide a team name\");\n    const underscoreName = teamName.replace(/\\s/g, \"_\");\n    const colors = teamColors[underscoreName];\n    if (colors) return colors;\n\n    throw new Error(\n      `Could not find matching colors for ${teamName}. Update teamColors.js with the correct team name and colors`,\n    );\n  },\n\n  getPersonData(personUrl) {\n    return axios.get(personUrl);\n  },\n\n  getMultiplePersonData(promises, events) {\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then((data) => {\n          const players = data.map((p, index) => ({\n            player: p.data,\n            event: events[index],\n          }));\n          resolve(players);\n        })\n        .catch(err => reject(err));\n    });\n  },\n\n  getMemberships(promises) {\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n  },\n\n  extractPersonId(url) {\n    const regex = /people\\/(\\d+)\\//g;\n    const res = regex.exec(url);\n    if (res && res.length > 1) return parseInt(res[1], 10);\n\n    return -1;\n  },\n};\n\nexport default tools;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport tools from \"../../Tools/tools\";\n\nclass NextMatchInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchInfo: props.matchInfo,\n      nextRoundNumber: parseInt(props.nextRoundNumber, 10) + 1,\n      stadium: \"\",\n      channel: \"\",\n      date: tools.getDate(props.matchInfo.starttime),\n      time: tools.getTime(props.matchInfo.starttime),\n    };\n\n    axios.all([tools.getChannelAndStadium(props.matchInfo)]).then(\n      axios.spread((data) => {\n        if (data.channel) {\n          data.channel.then(channel => this.setState({channel: channel.data.name}));\n        } else {\n          this.setState({\n            channel: \"Kanal ikke klar\",\n          });\n        }\n\n        if (data.stadium) {\n          data.stadium.then(stadium => this.setState({stadium: stadium.data.name}));\n        } else {\n          this.setState({\n            stadium: \"Stadion klar\",\n          });\n        }\n      }),\n    );\n  }\n\n  render() {\n    return (\n      <Table.Row>\n        <Table.Cell>{this.state.date}</Table.Cell>\n        <Table.Cell>{this.state.time}</Table.Cell>\n        <Table.Cell>\n          {this.state.nextRoundNumber}\n. runde\n        </Table.Cell>\n        <Table.Cell>{this.state.matchInfo.name}</Table.Cell>\n        <Table.Cell>{this.state.stadium}</Table.Cell>\n        <Table.Cell>{this.state.channel}</Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nNextMatchInfo.propTypes = {\n  matchInfo: PropTypes.object.isRequired,\n  nextRoundNumber: PropTypes.number.isRequired,\n};\n\nexport default NextMatchInfo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Segment, Dimmer, Loader, Message } from \"semantic-ui-react\";\nimport NextMatchInfo from \"./NextMatchInfo\";\n\nconst NextMatches = ({ matches, nextRoundNumber, loading }) => {\n  const nextMatchInfo = matches.map(m => (\n    <NextMatchInfo key={m.id} matchInfo={m} nextRoundNumber={nextRoundNumber} />\n  ));\n\n  if (nextMatchInfo.length <= 0 && !loading) {\n    return (\n      <Message className=\"no-print\" info>\n        Kamper for neste runde er ikke klar, eller så holder du på å lage lefsen\n        for sesongens siste runde.\n      </Message>\n    );\n  }\n\n  return (\n    <Segment>\n      <Dimmer active={loading}>\n        <Loader>Henter neste runde</Loader>\n      </Dimmer>\n      <h1>Neste runde</h1>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Dato</Table.HeaderCell>\n            <Table.HeaderCell>Kl.</Table.HeaderCell>\n            <Table.HeaderCell>Runde</Table.HeaderCell>\n            <Table.HeaderCell>Kamp</Table.HeaderCell>\n            <Table.HeaderCell>Arena</Table.HeaderCell>\n            <Table.HeaderCell>Kanal</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{nextMatchInfo}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nNextMatches.propTypes = {\n  matches: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  nextRoundNumber: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default NextMatches;\n","import React, {Component} from \"react\";\nimport {Divider, Message} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport goalEvents from \"../../Tools/events\";\n\nclass FinishedMatchElements extends Component {\n  static goalWasGoalInPlay(event) {\n    return goalEvents.goalInPlay.includes(event);\n  }\n\n  static goalWasPenalty(event) {\n    return goalEvents.penaltyGoal.includes(event);\n  }\n\n  static goalWasOwnGoal(event) {\n    return goalEvents.ownGoal.includes(event);\n  }\n\n  static calculateHomeAndAwayEvents(events) {\n    return events.reduce(\n      (obj, e, index, list) => {\n        const prevElementA =\n          list[index - 1] === undefined ? null : list[index - 1].goalsTeamA;\n        const prevElementB =\n          list[index - 1] === undefined ? null : list[index - 1].goalsTeamB;\n\n        const previousHomeScore =\n          prevElementA === null ? 0 : parseInt(prevElementA, 10);\n        const previousAwayScore =\n          prevElementB === null ? 0 : parseInt(prevElementB, 10);\n\n        const homeScore = parseInt(e.goalsTeamA, 10);\n        const awayScore = parseInt(e.goalsTeamB, 10);\n\n        if (homeScore > previousHomeScore) {\n          obj.home.push(e);\n        }\n\n        if (awayScore > previousAwayScore) {\n          obj.away.push(e);\n        }\n\n        return obj;\n      },\n      {home: [], away: []}\n    );\n  }\n\n  static filterGoalEvents(events) {\n    return events.filter(e => {\n      const eventType = e.eventtype[\"@uri\"];\n      const extendedEventType = e.extendedeventtype[\"@uri\"];\n      if (!eventType) return false;\n      if (!extendedEventType) return false;\n      return (\n        FinishedMatchElements.goalWasGoalInPlay(eventType) ||\n        FinishedMatchElements.goalWasPenalty(eventType) ||\n        FinishedMatchElements.goalWasPenalty(extendedEventType) ||\n        FinishedMatchElements.goalWasOwnGoal(extendedEventType)\n      );\n    });\n  }\n\n  static getNameOfPerson(uri) {\n    return axios.get(uri);\n  }\n\n  static splitGameName(name) {\n    if (name.includes(\"-\")) {\n      return name.split(\"-\");\n    }\n    if (name.includes(\",\")) {\n      return name.split(\",\");\n    }\n    if (name.includes(\";\")) {\n      return name.split(\";\");\n    }\n    return name;\n  }\n\n  static groupScorers(scorers) {\n    return scorers.reduce((obj, scorer) => {\n      if (!obj[scorer.person1[\"@uri\"]]) {\n        // eslint-disable-next-line no-param-reassign\n        obj[scorer.person1[\"@uri\"]] = [];\n        obj[scorer.person1[\"@uri\"]].push({\n          firstname: scorer.person1.firstname,\n          lastname: scorer.person1.lastname,\n          eventTime: scorer.eventtime,\n          eventType: scorer.eventtype[\"@uri\"],\n          extendedeventtype: scorer.extendedeventtype[\"@uri\"]\n        });\n      } else {\n        obj[scorer.person1[\"@uri\"]].push({\n          firstname: scorer.person1.firstname,\n          lastname: scorer.person1.lastname,\n          eventTime: scorer.eventtime,\n          eventType: scorer.eventtype[\"@uri\"],\n          extendedeventtype: scorer.extendedeventtype[\"@uri\"]\n        });\n      }\n      return obj;\n    }, {});\n  }\n\n  static formatIndividualGoalScorer(scorer) {\n    let text = `${scorer[0].lastname} (`;\n    scorer.forEach((s, index, list) => {\n      const extendedEventType = s.extendedeventtype;\n      const {eventType} = s;\n      if (\n        FinishedMatchElements.goalWasPenalty(extendedEventType) ||\n        FinishedMatchElements.goalWasPenalty(eventType)\n      ) {\n        text += \"str. \";\n      } else if (FinishedMatchElements.goalWasOwnGoal(extendedEventType)) {\n        text += \"sm. \";\n      }\n      text += index + 1 !== list.length ? `${s.eventTime}, ` : `${s.eventTime}`;\n    });\n    text += \")\";\n    return text;\n  }\n\n  static formatGoalScoreText(scorers) {\n    const groupedScorers = FinishedMatchElements.groupScorers(scorers);\n    return Object.keys(groupedScorers)\n      .map(key =>\n        FinishedMatchElements.formatIndividualGoalScorer(groupedScorers[key])\n      )\n      .join(\", \");\n  }\n\n  static extractPersonNames(events) {\n    return new Promise(resolve => {\n      const promises = [];\n      events.forEach(e => {\n        promises.push(FinishedMatchElements.getNameOfPerson(e.person1[\"@uri\"]));\n      });\n\n      axios.all(promises).then(data => {\n        events.forEach((e, index) => {\n          e.person1 = data[index].data;\n        });\n        resolve(events);\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    const [home, away] = FinishedMatchElements.splitGameName(\n      props.matchInfo.name\n    );\n    this.state = {\n      home,\n      away,\n      goalScorersHomeTeam: [],\n      goalScorersAwayTeam: []\n    };\n  }\n\n  componentDidMount() {\n    this.getGoals(this.props.matchInfo.events[\"@uri\"]);\n  }\n\n  getGoals(eventUri) {\n    axios.get(eventUri).then(data => {\n      const filteredGoalEvents = FinishedMatchElements.filterGoalEvents(\n        data.data.event\n      );\n      const calculatedEvents = FinishedMatchElements.calculateHomeAndAwayEvents(\n        filteredGoalEvents\n      );\n      FinishedMatchElements.extractPersonNames(calculatedEvents.home).then(\n        goalScorersHomeTeam => {\n          this.setState({\n            goalScorersHomeTeam\n          });\n        }\n      );\n      FinishedMatchElements.extractPersonNames(calculatedEvents.away).then(\n        goalScorersAwayTeam => {\n          this.setState({\n            goalScorersAwayTeam\n          });\n        }\n      );\n    });\n  }\n\n  render() {\n    const {home, away} = this.state;\n    const homeScorers = FinishedMatchElements.formatGoalScoreText(\n      this.state.goalScorersHomeTeam\n    );\n    const awayScorers = FinishedMatchElements.formatGoalScoreText(\n      this.state.goalScorersAwayTeam\n    );\n\n    return (\n      <div>\n        <Message size=\"small\">\n          <Message.Header>\n            {home} \n            {\" \"}\n            {this.props.matchInfo.goalsTeamAEndtime}\n            {\" \"}\n-\n            {\" \"}\n            {this.props.matchInfo.goalsTeamBEndtime} \n            {\" \"}\n            {away}\n          </Message.Header>\n          {this.props.matchInfo.goalsTeamAEndtime > 0 ? (\n            <p>\n              <b>\n                {home}\n:\n              </b> \n              {\" \"}\n              {homeScorers}\n            </p>\n          ) : (\n            \"\"\n          )}\n          {this.props.matchInfo.goalsTeamBEndtime > 0 ? (\n            <p>\n              <b>{away}</b>\n:\n              {awayScorers}\n            </p>\n          ) : (\n            \"\"\n          )}\n        </Message>\n        <Divider />\n      </div>\n    );\n  }\n}\n\nFinishedMatchElements.propTypes = {\n  matchInfo: PropTypes.shape({\n    goalsTeamAEndtime: PropTypes.string.isRequired,\n    goalsTeamBEndtime: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    events: PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired\n    })\n  }).isRequired\n};\n\nexport default FinishedMatchElements;\n","import React, { Component } from \"react\";\nimport { Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport FinishedMatchElements from \"./FinishedMatchElements\";\n\nclass FinishedMatches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches: this.props.matches\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const finishedMatchElements = this.state.matches.map(m => (\n      <FinishedMatchElements key={m.id} matchInfo={m} />\n    ));\n\n    return (\n      <Segment>\n        <Dimmer active={this.state.loading}>\n          <Loader>Henter kamper som er ferdig</Loader>\n        </Dimmer>\n        <h1>Ferdig spilt i runde {this.props.roundNumber}</h1>\n        {finishedMatchElements}\n      </Segment>\n    );\n  }\n}\n\nFinishedMatches.propTypes = {\n  matches: PropTypes.array.isRequired,\n  roundNumber: PropTypes.number.isRequired\n};\n\nexport default FinishedMatches;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport \"./LeagueTable.css\";\n\nclass LeagueTableItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.tableData,\n      teamData: \"\",\n    };\n\n    this.getTeamData(props.tableData.team[\"@uri\"]);\n  }\n\n  getTeamData(url) {\n    axios.get(url).then((data) => {\n      this.setState({teamData: data.data});\n    });\n  }\n\n  render() {\n    return (\n      <Table.Row className={this.props.rowColor}>\n        <Table.Cell>\n          {this.state.data.position}\n.\n        </Table.Cell>\n        <Table.Cell>{this.state.teamData.name}</Table.Cell>\n        <Table.Cell>{this.state.data.matches}</Table.Cell>\n        <Table.Cell>{this.state.data.wins}</Table.Cell>\n        <Table.Cell>{this.state.data.draws}</Table.Cell>\n        <Table.Cell>{this.state.data.losses}</Table.Cell>\n        <Table.Cell>{this.state.data.goalsFor}</Table.Cell>\n        <Table.Cell>{this.state.data.goalsAgainst}</Table.Cell>\n        <Table.Cell>{this.state.data.goalDifference}</Table.Cell>\n        <Table.Cell>{this.state.data.points}</Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nLeagueTableItem.defaultProps = {\n  rowColor: \"\",\n};\n\nLeagueTableItem.propTypes = {\n  tableData: PropTypes.shape({\n    team: PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  rowColor: PropTypes.string,\n};\n\nexport default LeagueTableItem;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport LeagueTableItem from \"./LeagueTableItem\";\n\nconst LeagueTable = ({ tableColors, table = [] }) => {\n  const [leagueName, setLeagueName] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(\n    () => {\n      if (table && table.length > 1) {\n        getLeagueName(table[0].tournament[\"@uri\"]);\n      }\n    },\n    [table]\n  );\n\n  const getLeagueName = tournamentUri => {\n    axios.get(tournamentUri).then(data => {\n      setLeagueName(data.data.name);\n      setLoading(false);\n    });\n  };\n\n  const createLeagueTableItems = (data, index) => {\n    if (tableColors.greens.includes(index)) {\n      return (\n        <LeagueTableItem\n          rowColor=\"green-table\"\n          key={data.id}\n          tableData={data}\n        />\n      );\n    }\n    if (tableColors.reds.includes(index)) {\n      return (\n        <LeagueTableItem rowColor=\"red-table\" key={data.id} tableData={data} />\n      );\n    }\n    return <LeagueTableItem key={data.id} tableData={data} />;\n  };\n\n  const tableElements = table.map((t, index) =>\n    createLeagueTableItems(t, index)\n  );\n\n  return (\n    <Segment className=\"print\">\n      <Dimmer active={loading}>\n        <Loader>Henter tabell</Loader>\n      </Dimmer>\n      <h1>Tabell: {leagueName}</h1>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell>Lag</Table.HeaderCell>\n            <Table.HeaderCell>K</Table.HeaderCell>\n            <Table.HeaderCell>V</Table.HeaderCell>\n            <Table.HeaderCell>U</Table.HeaderCell>\n            <Table.HeaderCell>T</Table.HeaderCell>\n            <Table.HeaderCell>+</Table.HeaderCell>\n            <Table.HeaderCell>-</Table.HeaderCell>\n            <Table.HeaderCell>+/-</Table.HeaderCell>\n            <Table.HeaderCell>P</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{tableElements}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nLeagueTable.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tableColors: PropTypes.shape({\n    greens: PropTypes.arrayOf(PropTypes.number),\n    reds: PropTypes.arrayOf(PropTypes.number)\n  }).isRequired,\n  table: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default LeagueTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Segment, Dimmer, Loader, Message } from \"semantic-ui-react\";\n\nconst Topscorers = ({ players, loading }) => {\n  if (players.length <= 0 && loading === false) {\n    return (\n      <Message negative>\n        <Message.Header>Toppscorere ikke tilgjengelig</Message.Header>\n        <p>\n          Ingen toppscorere tilgjengelig for denne ligaen. Det kan være fordi\n          ligaen ikke har startet, mål ikke er registrert på Altomfotball eller\n          serveren er nede. Prøv igjen senere.\n        </p>\n      </Message>\n    );\n  }\n\n  const topscorers = players.map(ts => (\n    <Table.Row key={ts.name}>\n      <Table.Cell>{ts.place}</Table.Cell>\n      <Table.Cell>{ts.name}</Table.Cell>\n      <Table.Cell>{ts.team}</Table.Cell>\n      <Table.Cell>{ts.value1}</Table.Cell>\n      <Table.Cell>{ts.value2}</Table.Cell>\n      <Table.Cell>{ts.value3}</Table.Cell>\n    </Table.Row>\n  ));\n\n  return (\n    <Segment>\n      <Dimmer active={loading}>\n        <Loader>Henter toppscorere</Loader>\n      </Dimmer>\n      <h1>Toppscorere</h1>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Posisjon</Table.HeaderCell>\n            <Table.HeaderCell>Navn</Table.HeaderCell>\n            <Table.HeaderCell>Lag</Table.HeaderCell>\n            <Table.HeaderCell>Mål</Table.HeaderCell>\n            <Table.HeaderCell>Kamper</Table.HeaderCell>\n            <Table.HeaderCell>Snitt</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>{topscorers}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nTopscorers.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      place: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      team: PropTypes.string.isRequired,\n      value1: PropTypes.number.isRequired,\n      value2: PropTypes.number.isRequired,\n      value3: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Topscorers;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Topscorers from \"../Topscorers\";\n\nconst TopscorersContainer = ({ tournamentId }) => {\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(\n    () => {\n      axios\n        .get(`/statistics/topscorers/${tournamentId}`)\n        .then(data => {\n          setPlayers(data.data.data.slice(0, 10));\n          setLoading(false);\n        })\n        .catch(() => setPlayers([]));\n    },\n    [tournamentId]\n  );\n\n  return <Topscorers players={players} loading={loading} />;\n};\n\nTopscorersContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired\n};\n\nexport default TopscorersContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Step } from \"semantic-ui-react\";\n\nconst RoundSteps = ({ league, round }) => (\n  <Step.Group className=\"no-print\">\n    <Step completed>\n      <Icon name=\"checkmark\" />\n      <Step.Content>\n        <Step.Title>Liga valgt</Step.Title>\n        <Step.Description>Du har valgt {league}</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed>\n      <Icon name=\"checkmark\" />\n      <Step.Content>\n        <Step.Title>Runde valgt</Step.Title>\n        <Step.Description>Du har valgt runde {round}</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step>\n      <Icon name=\"print\" />\n      <Step.Content>\n        <Step.Title>Print</Step.Title>\n        <Step.Description>Ctrl + P for å printe lefsen</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step>\n      <Icon name=\"cocktail\" />\n      <Step.Content>\n        <Step.Title>Bra jobbet</Step.Title>\n        <Step.Description>Ta deg en velfortjent pause!</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nRoundSteps.propTypes = {\n  round: PropTypes.number.isRequired,\n  league: PropTypes.string.isRequired\n};\n\nexport default RoundSteps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Segment,\n  Dimmer,\n  Loader,\n  List,\n  Message\n} from \"semantic-ui-react\";\nimport \"./Dangerzone.css\";\n\nconst Dangerzone = props => {\n  if (props.players.length <= 0 && !props.loading) {\n    return (\n      <Message info className=\"no-print\">\n        <Message.Header>Faresonen ikke tilgjengelig</Message.Header>\n        <p>\n          Det er ingen spillere i Faresonen for\n          {props.leagueName}\n          .\n        </p>\n      </Message>\n    );\n  }\n\n  return (\n    <Segment>\n      <Dimmer active={props.loading}>\n        <Loader>Henter spillere i faresonen</Loader>\n      </Dimmer>\n      <h1>Faresonen i {props.leagueName}</h1>\n      <Grid columns={4}>\n        {props.players.map(team => (\n          <Grid.Column key={team.name}>\n            <List className=\"similar-height\">\n              <List.Item>\n                <List.Content>\n                  <List.Header>{team.name}</List.Header>\n                  <List.Description>\n                    {team.players.length} spillere\n                  </List.Description>\n                  <List.List>\n                    {team.players.map(player => (\n                      <List.Item key={player.name}>\n                        <List.Icon name=\"user\" />\n                        <List.Content>\n                          <List.Header>{player.name}</List.Header>\n                          <List.Description>\n                            {player.value1}{\" \"}\n                            {player.value1 > 1 ? \"gule kort\" : \"gult kort\"}\n                            {\", \"}\n                            {team.name}\n                          </List.Description>\n                        </List.Content>\n                      </List.Item>\n                    ))}\n                  </List.List>\n                </List.Content>\n              </List.Item>\n            </List>\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Segment>\n  );\n};\n\nDangerzone.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      players: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          place: PropTypes.number.isRequired,\n          team: PropTypes.string.isRequired,\n          value1: PropTypes.number.isRequired\n        })\n      ).isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Dangerzone;\n","import axios from \"axios\";\n\nconst dangerzoneService = {\n  getPlayersWithYellowCards(tournamentId) {\n    if (!tournamentId) {\n      throw new Error(\n        \"TournamentID is not defined. Please provide a tournamentId\"\n      );\n    }\n    return new Promise((resolve, reject) => {\n      axios\n        .get(`/statistics/yellowcards/${tournamentId}`)\n        .then(data => {\n          resolve({data: data.data});\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n\n  sortTeams(players) {\n    return players.sort((a, b) => a.name.localeCompare(b.name));\n  },\n\n  filterPlayers(players) {\n    return Object.keys(players)\n      .map(team => ({\n        name: team,\n        players: players[team].players.filter(player => {\n          const yellowCards = player.value1;\n          if (yellowCards === 3 || (yellowCards % 2 !== 0 && yellowCards > 2)) {\n            return true;\n          }\n          return false;\n        })\n      }))\n      .filter(team => team.players.length > 0);\n  },\n\n  groupPlayers(players) {\n    return players.reduce((obj, elem) => {\n      if (!obj[elem.team]) {\n        // eslint-disable-next-line no-param-reassign\n        obj[elem.team] = {\n          players: []\n        };\n      }\n\n      if (obj[elem.team]) {\n        obj[elem.team].players.push(elem);\n      }\n      return obj;\n    }, {});\n  },\n\n  groupPlayersArrayResponse(players) {\n    return this.fromObjectToArray(this.groupPlayers(players));\n  },\n\n  fromObjectToArray(objects) {\n    const list = [];\n    Object.keys(objects).forEach(key => {\n      list.push({team: key, players: objects[key].players});\n    });\n    return list;\n  }\n};\n\nexport default dangerzoneService;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dangerzone from \"../Dangerzone\";\nimport dangerzoneService from \"../../../services/dangerzoneService\";\n\nclass DangerzoneContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getPlayersWithYellowCards(this.props.tournamentId);\n  }\n\n  getPlayersWithYellowCards(tournamentId) {\n    dangerzoneService.getPlayersWithYellowCards(tournamentId).then(data => {\n      const {data: yellowCardResponse} = data.data;\n      if (data.length <= 0) {\n        this.setState({\n          players: [],\n          loading: false\n        });\n        return;\n      }\n      let playersGrouped = dangerzoneService.groupPlayers(yellowCardResponse);\n      playersGrouped = dangerzoneService.filterPlayers(playersGrouped);\n      playersGrouped = dangerzoneService.sortTeams(playersGrouped);\n      this.setState({\n        players: playersGrouped,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {players, loading} = this.state;\n    return (\n      <Dangerzone\n        players={players}\n        leagueName={this.props.leagueName}\n        loading={loading}\n      />\n    );\n  }\n}\n\nDangerzoneContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired,\n  leagueName: PropTypes.string.isRequired\n};\n\nexport default DangerzoneContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"semantic-ui-react\";\nimport \"moment/locale/nb\";\nimport events from \"../../Tools/events\";\n\nconst MatchInfo = ({\n  status,\n  matchName,\n  stadium,\n  startDate,\n  startTime,\n  channel,\n  referee\n}) => {\n  let header = \"\";\n  if (status && events.postponed.includes(status[\"@uri\"])) {\n    header = (\n      <Item.Header>\n        UTSATT: {matchName}, {stadium}\n      </Item.Header>\n    );\n  } else {\n    header = (\n      <Item.Header>\n        {matchName}, {stadium}\n      </Item.Header>\n    );\n  }\n  return (\n    <Item>\n      <Item.Content>\n        {header}\n        <Item.Meta>\n          {startDate} - Avspark kl.\n          {startTime} på {channel}\n        </Item.Meta>\n        {referee && (\n          <Item.Meta className=\"float-right\">\n            Dommer:\n            {referee}\n          </Item.Meta>\n        )}\n      </Item.Content>\n    </Item>\n  );\n};\n\nMatchInfo.propTypes = {\n  status: PropTypes.shape({\n    \"@uri\": PropTypes.string\n  }),\n  matchName: PropTypes.string.isRequired,\n  stadium: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  channel: PropTypes.string.isRequired,\n  referee: PropTypes.string.isRequired\n};\n\nMatchInfo.defaultProps = {\n  status: {\n    \"@uri\": \"\"\n  }\n};\n\nexport default MatchInfo;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport MatchInfo from \"../MatchInfo\";\nimport tools from \"../../../Tools/tools\";\n\nclass MatchInfoContainer extends Component {\n  static formatRefereeName(ref) {\n    if (ref.firstname && ref.lastname) {\n      return `${ref.firstname} ${ref.lastname}`.trim();\n    }\n    if (ref.firstname) {\n      return `${ref.firstname}`.trim();\n    }\n    if (ref.lastname) {\n      return `${ref.lastname}`.trim();\n    }\n    throw new Error(\"Referee must have either firstname or lastname property\");\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchName: props.match.name,\n      channel: \"\",\n      stadium: \"\",\n      startDate: moment(props.match.starttime, \"YYYY-MM-DDTHH:mm:ssZZ\").format(\n        \"DD/MM YYYY\"\n      ),\n      startTime: tools.getTime(props.match.starttime),\n      referee: \"\",\n      status: props.match.status\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.referee) {\n      this.getReferee(this.props.match.referee[\"@uri\"]);\n    }\n    axios.all([tools.getChannelAndStadium(this.props.match)]).then(\n      axios.spread(data => {\n        if (data.channel) {\n          data.channel.then(channel =>\n            this.setState({channel: channel.data.name})\n          );\n        } else {\n          this.setState({\n            channel: \"Kanal ikke klar\"\n          });\n        }\n\n        if (data.stadium) {\n          data.stadium.then(stadium =>\n            this.setState({stadium: stadium.data.name})\n          );\n        } else {\n          this.setState({\n            stadium: \"Stadion ikke klar\"\n          });\n        }\n      })\n    );\n  }\n\n  getReferee(refUri) {\n    axios.get(refUri).then(data => {\n      this.setState({\n        referee: MatchInfoContainer.formatRefereeName(data.data)\n      });\n    });\n  }\n\n  render() {\n    return (\n      <MatchInfo\n        status={this.state.status}\n        matchName={this.state.matchName}\n        channel={this.state.channel}\n        stadium={this.state.stadium}\n        startDate={this.state.startDate}\n        startTime={this.state.startTime}\n        referee={this.state.referee}\n      />\n    );\n  }\n}\n\nMatchInfoContainer.propTypes = {\n  match: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    starttime: PropTypes.string.isRequired,\n    referee: PropTypes.shape({\"@uri\": PropTypes.string.isRequired}),\n    status: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n  }).isRequired\n};\nexport default MatchInfoContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Divider, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport MatchInfoContainer from \"./Containers/MatchInfoContainer\";\nimport events from \"../../Tools/events\";\nimport \"./Matches.css\";\n\nconst Matches = ({ matches, loading, leagueName, roundNumber }) => {\n  const sorted = matches.sort(\n    (a, b) => new Date(a.starttime) - new Date(b.starttime)\n  );\n  const nextMatches = sorted.map(m => {\n    let className = \"\";\n\n    if (m.status && events.postponed.includes(m.status[\"@uri\"])) {\n      className = \"postponed no-print\";\n    } else if (!!m.confirmed === true) {\n      className = \"finished no-print\";\n    }\n    return (\n      <List.Item className={className} key={m.id}>\n        <MatchInfoContainer match={m} />\n        <Divider />\n      </List.Item>\n    );\n  });\n  return (\n    <Segment className=\"print\" padded=\"very\">\n      <Dimmer size=\"medium\" active={loading}>\n        <Loader>Henter kamper</Loader>\n      </Dimmer>\n      <h1>\n        {leagueName} -{roundNumber}. Runde\n      </h1>\n      <List>{nextMatches}</List>\n    </Segment>\n  );\n};\n\nMatches.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  roundNumber: PropTypes.number.isRequired,\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      hometeam: PropTypes.shape({ \"@uri\": PropTypes.string.isRequired })\n        .isRequired,\n      awayteam: PropTypes.shape({ \"@uri\": PropTypes.string.isRequired })\n        .isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Matches;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Matches from \"../../Matches/Matches\";\n\nconst MatchesContainer = ({leagueName, roundNumber, matches, loading}) => (\n  <Matches\n    className=\"print\"\n    leagueName={leagueName}\n    roundNumber={roundNumber}\n    matches={matches}\n    loading={loading}\n  />\n);\n\nMatchesContainer.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  roundNumber: PropTypes.number.isRequired,\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      hometeam: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n        .isRequired,\n      awayteam: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n        .isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default MatchesContainer;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Message} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport LeagueProgress from \"../Components/LeagueProgress/LeagueProgress\";\nimport NextMatches from \"../Components/NextMatches/NextMatches\";\nimport FinishedMatches from \"../Components/Matches/FinishedMatches\";\nimport LeagueTable from \"../Components/LeagueTable/LeagueTable\";\nimport TopscorersContainer from \"../Components/Topscorers/Containers/TopscorersContainer\";\nimport RoundSteps from \"../Components/ProcedureSteps/RoundSteps\";\nimport DangerzoneContainer from \"../Components/Dangerzone/Containers/DangerzoneContainer\";\nimport tools from \"../Tools/tools\";\nimport \"../print.css\";\nimport MatchesContainer from \"../Components/Dangerzone/Containers/MatchesContainer\";\n\nclass RoundView extends Component {\n  static filterFinishedMatches(matches) {\n    return matches\n      .filter(m => !!m.confirmed === true)\n      .sort((a, b) => a.starttime >= b.starttime);\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params: {leagueName, roundNumber, tournamentId, seasonId}\n      }\n    } = this.props;\n    this.state = {\n      leagueName,\n      roundNumber: parseInt(roundNumber, 10),\n      tournamentId: parseInt(tournamentId, 10),\n      seasonId: parseInt(seasonId, 10),\n      matches: [],\n      nextMatches: [],\n      finishedMatches: [],\n      table: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    let {\n      match: {\n        params: {roundId, nextRoundId}\n      }\n    } = this.props;\n    const {\n      match: {\n        params: {tournamentId, seasonId}\n      }\n    } = this.props;\n    roundId = parseInt(roundId, 10);\n    nextRoundId = parseInt(nextRoundId, 10);\n    this.getRound(roundId, \"matches\");\n    this.getTable(tournamentId, seasonId);\n    if (nextRoundId > 0) {\n      this.getRound(nextRoundId, \"nextMatches\");\n    }\n  }\n\n  getTable(tournamentId, seasonId) {\n    axios\n      .get(`/table/${tournamentId}/${seasonId}`)\n      .then(data => {\n        this.setState({table: data.data.item});\n      })\n      .catch(() => this.setState({table: []}));\n  }\n\n  getRound = (roundId, key) => {\n    axios\n      .get(`/rounds/${roundId}`)\n      .then(data => {\n        let matches = [];\n        matches = data.data.match.sort((a, b) => a.starttime >= b.starttime);\n\n        let finishedMatches = [];\n        finishedMatches = RoundView.filterFinishedMatches(matches);\n        if (key === \"matches\") {\n          this.setState({\n            [key]: matches,\n            finishedMatches,\n            loading: false\n          });\n        } else {\n          this.setState({\n            [key]: matches,\n            loading: false\n          });\n        }\n      })\n      .catch(() =>\n        this.setState({\n          [key]: [],\n          finishedMatches: [],\n          loading: false\n        })\n      );\n  };\n\n  render() {\n    let finishedMatchesElement = null;\n    const {\n      finishedMatches,\n      loading,\n      roundNumber,\n      leagueName,\n      tournamentId,\n      seasonId,\n      matches,\n      nextMatches,\n      table\n    } = this.state;\n    const {switchLeagueName} = this.props;\n    if (finishedMatches.length > 0 && !loading) {\n      finishedMatchesElement = (\n        <FinishedMatches\n          className=\"print\"\n          matches={finishedMatches}\n          roundNumber={roundNumber}\n        />\n      );\n    } else {\n      finishedMatchesElement = (\n        <Message className=\"no-print\" info>\n          <Message.Header>Ferdig spilte kamper</Message.Header>\n          Det er ikke spilt noen kamper denne runden\n        </Message>\n      );\n    }\n\n    return (\n      <div>\n        <FaresoneMenu switchLeagueName={switchLeagueName} />\n\n        <RoundSteps\n          className=\"no-print\"\n          round={roundNumber}\n          league={leagueName}\n        />\n\n        <LeagueProgress\n          leagueName={leagueName}\n          tournamentId={tournamentId}\n          seasonId={seasonId}\n        />\n\n        <MatchesContainer\n          className=\"print\"\n          leagueName={leagueName}\n          roundNumber={roundNumber}\n          matches={matches}\n          loading={loading}\n        />\n\n        {finishedMatchesElement}\n\n        <LeagueTable\n          className=\"print\"\n          leagueName={leagueName}\n          table={table}\n          tableColors={tools.getTableColors(tournamentId)}\n        />\n\n        <NextMatches\n          className=\"print\"\n          matches={nextMatches}\n          nextRoundNumber={roundNumber}\n          loading={loading}\n        />\n\n        <TopscorersContainer className=\"print\" tournamentId={tournamentId} />\n\n        <DangerzoneContainer\n          className=\"print\"\n          leagueName={leagueName}\n          tournamentId={parseInt(tournamentId, 10)}\n        />\n      </div>\n    );\n  }\n}\n\nRoundView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }).isRequired,\n  switchLeagueName: PropTypes.func.isRequired\n};\n\nexport default RoundView;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Form, List, Message} from \"semantic-ui-react\";\n\nclass DangerzoneSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: []\n      },\n      search: \"\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {eliteserien, obosligaen} = nextProps.players;\n    this.setState({\n      data: {\n        eliteserien,\n        obosligaen\n      }\n    });\n  }\n\n  formatPlayers = players => (\n    <List.List>\n      <List.Item>\n        {players.map(p => (\n          <List.Content key={p.name}>\n            <List.Description>\n              {p.name} -{p.value1} gule kort\n            </List.Description>\n          </List.Content>\n        ))}\n      </List.Item>\n    </List.List>\n  );\n\n  createTeamElements = teams => {\n    if (teams.length <= 0) {\n      return (\n        <Message\n          info\n          header=\"Ingen spillere i faresonen\"\n          content=\"Ingen spillere i faresonen. Spillere i faresonen har partall gule kort.\"\n        />\n      );\n    }\n    return teams.map(team => {\n      if (team.players.length === 0) {\n        return \"\";\n      }\n      return (\n        <List.Item key={team.team}>\n          <List.Header>{team.team}</List.Header>\n          <List.Description>\n            {team.players.length >= 2\n              ? `${team.players.length} spillere`\n              : `${team.players.length} spiller`}\n          </List.Description>\n          {this.formatPlayers(team.players)}\n        </List.Item>\n      );\n    });\n  };\n\n  handleSearch = event => {\n    const {value: search} = event.target;\n    this.setState({search});\n  };\n\n  searchFilter(search, leagueId) {\n    if (this.state.data[leagueId] === undefined) {\n      throw new Error(\n        `Wrong leagueId for ${leagueId}. Valid id's are ${Object.keys(\n          this.state.data\n        ).join(\",\")}`\n      );\n    }\n    const filteredPlayers = [];\n    this.state.data[leagueId].forEach(team => {\n      const filtered = team.players.filter(p =>\n        p.name.toLowerCase().includes(search.toLowerCase())\n      );\n      filteredPlayers.push({team: team.team, players: filtered});\n    });\n    return filteredPlayers;\n  }\n\n  render() {\n    const eliteserienSearchFilter = this.searchFilter(\n      this.state.search,\n      \"eliteserien\"\n    );\n    const eliteserieElements = this.createTeamElements(eliteserienSearchFilter);\n\n    const obosLigaenSearchFilter = this.searchFilter(\n      this.state.search,\n      \"obosligaen\"\n    );\n    const obosligaElements = this.createTeamElements(obosLigaenSearchFilter);\n\n    return (\n      <div>\n        <Grid columns={1}>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"playerSearch\">Søk etter spiller</label>\n              <input\n                id=\"playerSearch\"\n                placeholder=\"Fornavn/etternavn\"\n                onChange={this.handleSearch}\n              />\n            </Form.Field>\n          </Form>\n        </Grid>\n        <Grid columns={2}>\n          <Grid.Column>\n            <h1>Eliteserien</h1>\n            <List>{eliteserieElements}</List>\n          </Grid.Column>\n          <Grid.Column>\n            <h1>OBOSligaen</h1>\n            <List>{obosligaElements}</List>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nDangerzoneSearch.propTypes = {\n  players: PropTypes.shape({\n    eliteserien: PropTypes.arrayOf(\n      PropTypes.shape({\n        team: PropTypes.string.isRequired,\n        players: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            value1: PropTypes.number.isRequired\n          })\n        ).isRequired\n      })\n    ).isRequired,\n    obosligaen: PropTypes.arrayOf(\n      PropTypes.shape({\n        team: PropTypes.string.isRequired,\n        players: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            value1: PropTypes.number.isRequired\n          })\n        ).isRequired\n      })\n    )\n  }).isRequired\n};\n\nexport default DangerzoneSearch;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {Feed, Icon, Message, Modal, Header} from \"semantic-ui-react\";\nimport tools from \"../../Tools/tools\";\nimport \"./DangerzoneAccumulator.css\";\n\nclass DangerZoneAccumulator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        events: []\n      }\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const players = [];\n    nextProps.events.forEach(p => {\n      const uri = p.person1[\"@uri\"];\n      players.push(tools.getPersonData(uri));\n    });\n    tools.getMultiplePersonData(players, nextProps.events).then(data => {\n      this.setState({\n        data: {\n          events: data\n        }\n      });\n    });\n  }\n\n  getInfoMessage = () => (\n    <Message\n      info\n      onClick={this.showModal}\n      icon=\"info\"\n      header=\"Informasjon\"\n      content=\"Trykk her for mer informasjon om hvordan denne tjenesten virker.\"\n    />\n  );\n\n  removeFeedEvent = event => {\n    this.removeEventFromState(event);\n    this.props.removePlayer(event.player, \"eliteserien\");\n    this.props.removePlayer(event.player, \"obosligaen\");\n    this.props.removeEvent(event);\n  };\n\n  removeEventFromState = event => {\n    if (!event.player) {\n      throw new Error(\n        \"Event does not have player and player id information. Cannot remove element from state\"\n      );\n    }\n    const index = this.state.data.events.findIndex(\n      e => e.player.id === event.player.id\n    );\n    if (index < 0) return false;\n    this.state.data.events.splice(index, 1);\n    this.setState(prevState => ({\n      data: {\n        events: prevState.data.events\n      }\n    }));\n    return null;\n  };\n\n  sortEvents = events =>\n    events.sort((a, b) => a.event.realTime <= b.event.realTime);\n\n  render() {\n    let {events} = this.state.data;\n    events = this.sortEvents(events);\n\n    let elements = null;\n    if (events.length === 0) {\n      elements = (\n        <Message\n          info\n          header=\"Ingen gule kort registrert\"\n          content=\"Det er ikke registrert noen gule kort. Når de blir registrert dukker de opp her, dersom den registrerte finnes i faresonen fra før.\"\n        />\n      );\n    } else {\n      elements = events.map(p => (\n        <Feed.Event\n          className=\"event-hover fadeInLeft\"\n          onClick={() => this.removeFeedEvent(p)}\n          key={p.player.id}\n        >\n          <Feed.Content>\n            <Feed.Summary>\n              <Feed.User>\n                {p.player.firstname} {p.player.lastname}\n              </Feed.User>{\" \"}\n              må stå over neste kamp\n              <Feed.Date>{moment(p.event.realTime).fromNow()}</Feed.Date>\n            </Feed.Summary>\n            <Feed.Meta>\n              <Feed.Like>\n                <Icon name=\"clock\" />\n                Registrert:{\" \"}\n                {moment(p.event.realTime).format(\"DD-MM-YYYY HH:mm\")}\n              </Feed.Like>\n            </Feed.Meta>\n          </Feed.Content>\n        </Feed.Event>\n      ));\n    }\n    return (\n      <div>\n        <Modal trigger={this.getInfoMessage()}>\n          <Modal.Header>Informasjon om Faresonen</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Header>Hvordan virker det?</Header>\n              <p>\n                Når du åpner siden du er på nå opprettes det en kobling til\n                AltomFotball. Hvert 5 sekund sjekker serveren om det har kommet\n                gule kort. Hvis det har kommet gule kort og spilleren som har\n                fått gult kort allerede er i faresonen dukker han opp i listen\n                under. Ved å klikke på navnet i listen blir spilleren markert\n                som ferdig og dukker ikke opp i listen igjen.\n              </p>\n            </Modal.Description>\n          </Modal.Content>\n        </Modal>\n        <Feed>{elements}</Feed>\n      </div>\n    );\n  }\n}\nDangerZoneAccumulator.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      person1: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired\n      })\n    })\n  ).isRequired,\n  removeEvent: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired\n};\n\nexport default DangerZoneAccumulator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Statistic} from \"semantic-ui-react\";\n\nconst socketConnected = (connected = false) => {\n  if (connected) {\n    return (\n      <Statistic>\n        <Statistic.Value>\n          <i className=\"green server icon\" />\n        </Statistic.Value>\n        <Statistic.Label>Tilkoblet server</Statistic.Label>\n      </Statistic>\n    );\n  }\n  return (\n    <Statistic>\n      <Statistic.Value>\n        <i className=\"red server icon\" />\n      </Statistic.Value>\n      <Statistic.Label>Frakoblet server</Statistic.Label>\n    </Statistic>\n  );\n};\n\nconst DangerzoneStatistics = props => (\n  <Statistic.Group widths=\"three\">\n    {socketConnected(props.socketConnected)}\n    <Statistic>\n      <Statistic.Value>{props.eliteserien}</Statistic.Value>\n      <Statistic.Label>Eliteserie-spillere</Statistic.Label>\n    </Statistic>\n    <Statistic>\n      <Statistic.Value>{props.obosligaen}</Statistic.Value>\n      <Statistic.Label>OBOSliga-spillere</Statistic.Label>\n    </Statistic>\n  </Statistic.Group>\n);\n\nDangerzoneStatistics.propTypes = {\n  socketConnected: PropTypes.bool.isRequired,\n  eliteserien: PropTypes.number.isRequired,\n  obosligaen: PropTypes.number.isRequired,\n};\nexport default DangerzoneStatistics;\n","const playerLocalStorageService = {\n  getFromLocalStorage(key) {\n    const items = JSON.parse(localStorage.getItem(key));\n    if (items) return items;\n\n    return {\n      eliteserien: [],\n      obosligaen: [],\n      lastUpdated: new Date(),\n    };\n  },\n\n  localStoragePlayersIsEmpty() {\n    const {\n      eliteserien,\n      obosligaen,\n    } = playerLocalStorageService.getFromLocalStorage(\"players\");\n    return eliteserien.length <= 0 && obosligaen.length <= 0;\n  },\n\n  playersInLocalStorageExists() {\n    return localStorage.getItem(\"players\") !== null;\n  },\n\n  saveToLocalStorage(players) {\n    const updatedPlayers = players;\n    updatedPlayers.lastUpdated = new Date();\n    localStorage.setItem(\"players\", JSON.stringify(updatedPlayers));\n  },\n};\n\nexport default playerLocalStorageService;\n","import React, {Component} from \"react\";\nimport {\n  Message,\n  Grid,\n  Dimmer,\n  Loader,\n  Segment,\n  Confirm\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport openSocket from \"socket.io-client\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport DangerzoneSearch from \"../Components/Dangerzone/DangerzoneSearch\";\nimport DangerZoneAccumulator from \"../Components/Dangerzone/DangerZoneAccumulator\";\nimport dangerzoneService from \"../services/dangerzoneService\";\nimport DangerzoneStatistics from \"../Components/Dangerzone/DangerzoneStatistics\";\nimport playerLocalStorageService from \"../services/playerLocalStorageService\";\nimport tools from \"../Tools/tools\";\nimport \"./DangerzoneView.css\";\n\nconst socket = openSocket();\n\nclass DangerzoneView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: [],\n        events: []\n      },\n      loading: true,\n      open: false,\n      socketConnected: false,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n    if (\n      !playerLocalStorageService.playersInLocalStorageExists() ||\n      playerLocalStorageService.localStoragePlayersIsEmpty()\n    ) {\n      this.getPlayers(true);\n    } else {\n      this.showModal();\n    }\n  }\n\n  componentWillUnmount() {\n    socket.close();\n  }\n\n  setupSocket = () => {\n    socket.open();\n    socket.on(\"connect\", () => {\n      this.setState({socketConnected: true});\n    });\n\n    socket.on(\"disconnect\", () => {\n      this.setState({socketConnected: false});\n    });\n\n    socket.on(\"data\", data => {\n      this.setState({socketConnected: true});\n      if (!data.events) return;\n      if (!Array.isArray(data.events)) {\n        data.events = [data.events]; // eslint-disable-line\n      }\n      const {eliteserien, obosligaen} = this.state.data;\n      const merged = eliteserien.concat(obosligaen);\n\n      const events = data.events.filter(event => {\n        if (event && event.person1) {\n          const personId = tools.extractPersonId(event.person1[\"@uri\"]);\n          if (personId > -1) {\n            const found = merged.find(p => p.id === personId);\n            if (found) {\n              return true;\n            }\n          }\n        }\n        return false;\n      });\n      this.setState(prevState => ({\n        data: {\n          ...prevState.data,\n          events\n        }\n      }));\n    });\n  };\n\n  setDefaultState = (eliteserien, obosligaen) => {\n    this.setState({\n      loading: false,\n      data: {\n        eliteserien,\n        obosligaen,\n        events: []\n      }\n    });\n  };\n\n  getPlayers = (overwrite = false) =>\n    axios\n      .get(\"/statistics/allDangerzonePlayers\")\n      .then(data => {\n        const {eliteserien, obosligaen} = data.data;\n        if (overwrite) {\n          playerLocalStorageService.saveToLocalStorage({\n            eliteserien,\n            obosligaen\n          });\n          this.setDefaultState(eliteserien, obosligaen);\n        }\n        this.setDefaultState(eliteserien, obosligaen);\n      })\n      .catch(() => {\n        const {data} = this.state;\n        this.setState({\n          data: {\n            ...data\n          },\n          loading: false,\n          error:\n            \"Kunne ikke hente spillere i faresonen. Er du koblet til internett?\"\n        });\n      });\n\n  showModal = () => {\n    this.setState({open: true});\n  };\n\n  hideModal = () => {\n    this.setState({open: false});\n  };\n\n  handleCancel = () => {\n    const {eliteserien, obosligaen} = JSON.parse(\n      localStorage.getItem(\"players\")\n    );\n    this.setState({\n      data: {\n        eliteserien,\n        obosligaen,\n        events: []\n      },\n      loading: false\n    });\n    this.hideModal();\n  };\n\n  handleConfirm = () => {\n    this.getPlayers(true);\n    this.hideModal();\n  };\n\n  formatPlayers = () => {\n    const {eliteserien, obosligaen} = this.state.data;\n    return {\n      eliteserien: dangerzoneService.groupPlayersArrayResponse(eliteserien),\n      obosligaen: dangerzoneService.groupPlayersArrayResponse(obosligaen)\n    };\n  };\n\n  removePlayer = (player, leagueId) => {\n    const {eliteserien} = this.state.data;\n    const found = eliteserien.find(p => p.id === parseInt(player.id, 10));\n    if (found) {\n      const {data} = this.state;\n      const index = data[leagueId].indexOf(found);\n      data[leagueId].splice(index, 1);\n      playerLocalStorageService.saveToLocalStorage(data);\n    }\n  };\n\n  removeEvent = event => {\n    const {data} = this.state;\n    const index = data.events.indexOf(event.event);\n    data.events.splice(index, 1);\n    this.setState({\n      data: {\n        events: data.events,\n        ...data\n      }\n    });\n  };\n\n  render() {\n    const {eliteserien, obosligaen, events} = this.state.data;\n    const {lastUpdated} = playerLocalStorageService.getFromLocalStorage(\n      \"players\"\n    );\n    const players = this.formatPlayers();\n    const {socketConnected, error, open, loading} = this.state;\n\n    return (\n      <div>\n        <FaresoneMenu />\n        <Grid columns={1}>\n          <Grid.Column>\n            <Segment>\n              <Dimmer active={loading}>\n                <Loader>Henter spiller for Eliteserien og OBOS-ligaen</Loader>\n              </Dimmer>\n              <Confirm\n                open={open}\n                header={`Sist oppdatert: ${moment(lastUpdated).fromNow()}`}\n                content=\"Det er allerede lastet ned spillere for faresonen. Ønsker du å laste ned oppdaterte spillere?\"\n                cancelButton=\"Nææh, dropp det\"\n                confirmButton=\"Ja, kjør på!\"\n                onCancel={this.handleCancel}\n                onConfirm={this.handleConfirm}\n              />\n              {error ? (\n                <Message info>{error}</Message>\n              ) : (\n                <DangerzoneStatistics\n                  eliteserien={eliteserien.length}\n                  obosligaen={obosligaen.length}\n                  socketConnected={socketConnected}\n                />\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid>\n        <Grid centered columns={2}>\n          <Grid.Column>\n            <DangerzoneSearch players={players} getPlayers={this.getPlayers} />\n          </Grid.Column>\n          <Grid.Column>\n            <DangerZoneAccumulator\n              events={events}\n              removePlayer={this.removePlayer}\n              removeEvent={this.removeEvent}\n            />\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DangerzoneView;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Segment, Form, Checkbox} from \"semantic-ui-react\";\nimport \"./FantasyPlayerFilter.css\";\n\nclass FantasyPlayerFilter extends Component {\n  handleNameSearch = search =>\n    this.props.setNameFilter(search.target.value.trim().toLowerCase());\n\n  handlePriceSearch = search => {\n    const {value} = search.target;\n    if (isNaN(value) || !value) this.props.setPriceFilter(-1);\n    else {\n      this.props.setPriceFilter(parseFloat(value, 10));\n    }\n  };\n\n  handleDreamTeamFilter = (event, data) => {\n    this.props.setDreamTeamFilter(data.checked);\n  };\n\n  render() {\n    return (\n      <Segment>\n        <p className=\"special\">\n          Her kan du filtrere spillere ved å søke etter fornavn/etternavn eller\n          filtrere på pris.\n        </p>\n        <Form>\n          <Form.Field>\n            <label htmlFor=\"freetext\">Søk fritekst</label>\n            <input\n              id=\"freetext\"\n              placeholder=\"Søk etter navn\"\n              onChange={this.handleNameSearch}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"priceFilter\">Filtrer på pris i pund (£)</label>\n            <input\n              id=\"priceFilter\"\n              type=\"number\"\n              step={0.1}\n              onChange={this.handlePriceSearch}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox\n              label=\"Vis kun Dream Team\"\n              onChange={this.handleDreamTeamFilter}\n            />\n          </Form.Field>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nFantasyPlayerFilter.propTypes = {\n  setPriceFilter: PropTypes.func.isRequired,\n  setNameFilter: PropTypes.func.isRequired,\n  setDreamTeamFilter: PropTypes.func.isRequired\n};\n\nexport default FantasyPlayerFilter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon} from \"semantic-ui-react\";\nimport \"./FantasyPlayerAnchor.css\";\n\nconst FantasyPlayerAnchor = ({\n  inDreamTeam,\n  firstName,\n  secondName,\n  onClick\n}) => (\n  <a className=\"playerAnchor\" role=\"button\" onClick={onClick} tabIndex={0}>\n    {inDreamTeam ? <Icon name=\"star\" color=\"yellow\" /> : \"\"}\n    {firstName} \n    {\" \"}\n    {secondName}\n    {\" \"}\n-\n    {\" \"}\n  </a>\n);\n\nFantasyPlayerAnchor.propTypes = {\n  inDreamTeam: PropTypes.bool.isRequired,\n  firstName: PropTypes.string.isRequired,\n  secondName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default FantasyPlayerAnchor;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Header,\n  Segment,\n  Dimmer,\n  Loader,\n  Modal,\n  Image,\n  Icon,\n} from \"semantic-ui-react\";\nimport FantasyPlayerAnchor from \"./FantasyPlayerAnchor\";\n\nclass FantasyPlayers extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  handleOpen = () => {\n  };\n\n  render() {\n    const {loading, teams} = this.props;\n    return (\n      <Segment>\n        <Dimmer active={loading}>\n          <Loader>Henter Fantasy-spillere</Loader>\n        </Dimmer>\n\n        <Header as=\"h1\">Fantasy PL</Header>\n        <Grid columns={4}>\n          {Object.keys(teams).map((key) => {\n            if (teams[key].players.length === 0) {\n              return \"\";\n            }\n            return (\n              <Grid.Column key={key}>\n                <Header as=\"h3\">{teams[key].name}</Header>\n                {Object.values(teams[key].players)\n                  .sort((a, b) => a.first_name.localeCompare(b.first_name))\n                  .map(player => (\n                    <div key={player.id}>\n                      <Modal\n                        trigger={(\n                          <FantasyPlayerAnchor\n                            onClick={this.handleOpen}\n                            firstName={player.first_name}\n                            secondName={player.second_name}\n                            inDreamTeam={player.in_dreamteam}\n                          />\n)}\n                      >\n                        <Modal.Header>\n                          {player.first_name}\n                          {\" \"}\n                          {player.second_name}\n                          {\" \"}\n                          {player.in_dreamteam ? (\n                            <Icon name=\"star\" color=\"yellow\" />\n                          ) : (\n                            \"\"\n                          )}\n                        </Modal.Header>\n                        <Modal.Content image>\n                          <Image\n                            wrapped\n                            size=\"medium\"\n                            src={`http://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p${player.photo.replace(\n                              \"jpg\",\n                              \"png\",\n                            )}`}\n                          />\n                          <Modal.Description>\n                            <div>\n                              <p>\n                                <b>Pris: </b>\n£\n                                {player.now_cost / 10}\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Poeng: </b>\n                                {player.total_points}\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Valgt av: </b>\n                                {player.selected_by_percent}\n%\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Skader: </b>\n                                {player.news\n                                  ? `${player.news}`\n                                  : \"Ingen skader.\"}\n                              </p>\n                              {player.chancee_of_playing_next_round ? (\n                                <p>\n                                  <b>Sjanse for å spille neste runde:</b>\n                                  {\" \"}\n                                  {player.chancee_of_playing_next_round}\n%\n                                </p>\n                              ) : (\n                                \"\"\n                              )}\n                              <a href={`#/fantasy/player/${player.id}`}>\n                                Mer info\n                              </a>\n                            </div>\n                          </Modal.Description>\n                        </Modal.Content>\n                      </Modal>\n\n                      <span>\n£\n                        {player.now_cost / 10}\n                      </span>\n                    </div>\n                  ))}\n              </Grid.Column>\n            );\n          })}\n        </Grid>\n      </Segment>\n    );\n  }\n}\nFantasyPlayers.propTypes = {\n  teams: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      players: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          first_name: PropTypes.string.isRequired,\n          second_name: PropTypes.string.isRequired,\n          now_cost: PropTypes.number.isRequired,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default FantasyPlayers;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {Segment, Message} from \"semantic-ui-react\";\nimport FantasyPlayerFilter from \"../FantasyPlayerFilter\";\nimport FantasyPlayers from \"../FantasyPlayers\";\n\nclass FantasyContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        teams: []\n      },\n      filters: {\n        priceFilter: -1,\n        nameFilter: \"\",\n        onlyDreamTeam: false\n      },\n      loading: true,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .all([this.getPlayers(), this.getTeams()])\n      .then(data => {\n        const players = data[0].data;\n        const teams = data[1].data;\n        let groupedTeams = this.groupTeams(players, teams);\n        groupedTeams = Object.values(groupedTeams)\n          .map(team => team)\n          .sort((teamA, teamB) => teamA.name.localeCompare(teamB.name));\n        this.setState({\n          data: {\n            teams: groupedTeams\n          },\n          loading: false,\n          error: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error:\n            \"Det oppsto dessverre et problem ved henting av spillere. Det kan være fordi PL-Fantasy oppdateres eller fordi du ikke er koblet til internett.\",\n          loading: false\n        });\n      });\n  }\n\n  getPlayers = () => axios.get(\"/fantasy/players\");\n\n  getTeams = () => axios.get(\"/fantasy/teams\");\n\n  setNameFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        nameFilter: filter\n      }\n    }));\n  };\n\n  setPriceFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        priceFilter: filter\n      }\n    }));\n  };\n\n  setDreamTeamFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        onlyDreamTeam: filter\n      }\n    }));\n  };\n\n  filterTeams = (teams, filters) => {\n    if (\n      !filters.nameFilter &&\n      filters.priceFilter < 0 &&\n      !filters.onlyDreamTeam\n    )\n      return teams;\n    // Dette er kanskje en veldig rar løsning på filtreringen, men jeg er bakfull og gidder ikke se mer på det nå. Det\n    // virker enn så lenge... 08.04.18\n    const filtered = teams.map(team => {\n      const teamCopy = Object.assign({}, team);\n      const filteredPlayers = teamCopy.players.filter(player => {\n        if (filters.onlyDreamTeam) {\n          return player.in_dreamteam;\n        }\n        if (filters.priceFilter <= 0) {\n          return this.mergeName(player.first_name, player.second_name)\n            .toLowerCase()\n            .includes(filters.nameFilter);\n        }\n        if (filters.priceFilter > 0 && !filters.nameFilter) {\n          return this.formatPrice(player.now_cost) >= filters.priceFilter;\n        }\n        if (filters.onlyDreamTeam) {\n          return player.in_dreamteam;\n        }\n        return (\n          this.mergeName(player.first_name, player.second_name)\n            .toLowerCase()\n            .includes(filters.nameFilter) &&\n          this.formatPrice(player.now_cost) >= filters.priceFilter\n        );\n      });\n      teamCopy.players = filteredPlayers;\n      return teamCopy;\n    });\n    return filtered;\n  };\n\n  mergeName = (first, last) => `${first} ${last}`;\n\n  formatPrice = price => price / 10;\n\n  groupTeams = (players, teams) =>\n    players.reduce((obj, player) => {\n      const team = teams.find(\n        teamToFind => teamToFind.code === player.team_code\n      );\n      if (obj[player.team_code]) {\n        // eslint-disable-next-line\n        player.team = team;\n        obj[player.team_code].players.push(player);\n      } else {\n        // eslint-disable-next-line\n        obj[player.team_code] = {\n          name: team.name,\n          players: []\n        };\n      }\n      return obj;\n    }, {});\n\n  render() {\n    const teams = this.filterTeams(this.state.data.teams, this.state.filters);\n    return (\n      <div>\n        {this.state.error ? (\n          <Segment>\n            <Message warning>{this.state.error}</Message>\n          </Segment>\n        ) : (\n          \"\"\n        )}\n        <FantasyPlayerFilter\n          setNameFilter={this.setNameFilter}\n          setPriceFilter={this.setPriceFilter}\n          setDreamTeamFilter={this.setDreamTeamFilter}\n        />\n        <FantasyPlayers teams={teams} loading={this.state.loading} />\n      </div>\n    );\n  }\n}\nexport default FantasyContainer;\n","import React from \"react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FantasyContainer from \"../Components/FantasyPl/Containers/FantasyContainer\";\n\nconst FantasyView = () => (\n  <div>\n    <FaresoneMenu />\n    <FantasyContainer />\n  </div>\n);\nexport default FantasyView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\n\nconst PlayerProfile = ({\n  name,\n  news,\n  photo,\n  chanceOfPlayingNextRound,\n  inDreamTeam,\n  cost,\n  selectedBy,\n  points,\n  teamName\n}) => (\n  <div>\n    <Card>\n      <Image\n        src={\n          photo\n            ? `http://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p${photo.replace(\n                \"jpg\",\n                \"png\"\n              )}`\n            : \"\"\n        }\n      />\n      <Card.Content>\n        <Card.Header>\n          {name}, {teamName}{\" \"}\n          {inDreamTeam ? <Icon name=\"star\" color=\"yellow\" /> : \"\"}\n        </Card.Header>\n        <div>\n          <Card.Description>\n            <b>Pris: </b>\n            £\n            {cost / 10}\n          </Card.Description>\n          <Card.Description>\n            <b>Poeng: </b>\n            {points}\n          </Card.Description>\n          <Card.Description>\n            <b>Valgt av: </b>\n            {selectedBy}\n            %\n          </Card.Description>\n          <Card.Description>\n            <b>Skader: </b>\n            {news ? `${news}` : \"Ingen skader.\"}\n          </Card.Description>\n          {chanceOfPlayingNextRound ? (\n            <Card.Description>\n              <b>Sjanse for å spille neste runde:</b> {chanceOfPlayingNextRound}\n              %\n            </Card.Description>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Card.Content>\n    </Card>\n  </div>\n);\nPlayerProfile.propTypes = {\n  name: PropTypes.string,\n  teamName: PropTypes.string,\n  news: PropTypes.string,\n  photo: PropTypes.string,\n  chanceOfPlayingNextRound: PropTypes.number,\n  inDreamTeam: PropTypes.bool,\n  cost: PropTypes.number,\n  selectedBy: PropTypes.string,\n  points: PropTypes.number\n};\n\nPlayerProfile.defaultProps = {\n  name: \"\",\n  news: \"\",\n  photo: \"\",\n  chanceOfPlayingNextRound: -1,\n  inDreamTeam: false,\n  cost: -1,\n  selectedBy: \"\",\n  points: -1,\n  teamName: \"\"\n};\nexport default PlayerProfile;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Grid, Statistic, Segment } from \"semantic-ui-react\";\nimport FaresoneMenu from \"../../Menu/FaresoneMenu\";\nimport PlayerProfile from \"../PlayerProfile\";\n\nconst PlayerStatsContainer = ({ playerId }) => {\n  const [player, setPlayer] = useState({});\n  const [team, setTeam] = useState({});\n\n  useEffect(\n    () => {\n      axios.get(`/fantasy/player/${playerId}`).then(data => {\n        const player = data.data;\n        if (player.team_code) {\n          getTeam(player.team_code);\n        }\n        setPlayer(player);\n      });\n    },\n    [playerId]\n  );\n\n  // TODO Fetch team based on team code\n  const getTeam = teamId => {\n    axios.get(`/fantasy/team/${teamId}`).then(data => {\n      setTeam(data.data);\n    });\n  };\n\n  const mapStats = player => [\n    { key: \"goals\", label: \"Mål\", value: player.goals_scored },\n    { key: \"assists\", label: \"Assists\", value: player.assists },\n    {\n      key: \"pointsPerGame\",\n      label: \"Poeng per kamp\",\n      value: player.points_per_game\n    },\n    { key: \"minPlayed\", label: \"Min. spilt\", value: player.minutes },\n    { key: \"influence\", label: \"Påvirkning\", value: player.influence },\n    { key: \"creativity\", label: \"Kreativitet\", value: player.creativity },\n    { key: \"form\", label: \"Form\", value: player.form },\n    { key: \"bonus\", label: \"Bonus\", value: player.bonus }\n  ];\n\n  const items = mapStats(player);\n  return (\n    <div>\n      <FaresoneMenu />\n      <Grid columns={2}>\n        <Grid.Column>\n          <PlayerProfile\n            name={`${player.first_name} ${player.second_name}`}\n            teamName={team.name}\n            news={player.news}\n            photo={player.photo}\n            chanceOfPlayingNextRound={player.chance_of_playing_next_round}\n            inDreamTeam={player.in_dreamteam}\n            points={player.total_points}\n            selectedBy={player.selected_by_percent}\n            cost={player.now_cost}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Segment>\n            <Statistic.Group widths={2} items={items} />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nPlayerStatsContainer.propTypes = {\n  playerId: PropTypes.string.isRequired\n};\n\nexport default PlayerStatsContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlayerStatsContainer from \"../Components/PlayerStats/Containers/PlayerStatsContainer\";\n\nconst DetailedPlayerView = ({\n  match: {\n    params: {playerId}\n  }\n}) => <PlayerStatsContainer playerId={playerId} />;\n\nDetailedPlayerView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      playerId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default DetailedPlayerView;\n","class Abbreviations {\n  constructor() {\n    this.eliteserieAbbr = {\n      Kristiansund: \"KBK\",\n      Molde: \"MFK\",\n      Lillestrøm: \"LSK\",\n      Sandefjord: \"SAN\",\n      \"Sarpsborg 08\": \"S08\",\n      Stabæk: \"STB\",\n      Strømsgodset: \"SIF\",\n      Haugesund: \"FKH\",\n      Tromsø: \"TIL\",\n      Brann: \"BRA\",\n      Rosenborg: \"RBK\",\n      Odd: \"ODD\",\n      Vålerenga: \"VIF\",\n      Start: \"STA\",\n      Ranheim: \"RAN\",\n      \"Bodø/Glimt\": \"B/G\",\n    };\n\n    this.obosligaAbbr = {\n      Aalesund: \"AaFK\",\n      Notodden: \"NOT\",\n      Tromsdalen: \"TRO\",\n      Åsane: \"ÅSA\",\n      Florø: \"FLO\",\n      Jerv: \"JER\",\n      Mjøndalen: \"MJØ\",\n      HamKam: \"HAM\",\n      Sogndal: \"SOG\",\n      Strømmen: \"STR\",\n      \"Sandnes Ulf\": \"ULF\",\n      \"Nest-Sotra\": \"NEST\",\n      \"Ullensaker/Kisa\": \"UKI\",\n      Viking: \"VIK\",\n      Levanger: \"LEV\",\n      Kongsvinger: \"KON\",\n    };\n  }\n\n  getAbbreviations = (name, league) => {\n    if (league.toLowerCase() === \"eliteserien\") {\n      const abbrev = this.eliteserieAbbr[name];\n      if (abbrev) return abbrev;\n\n      throw new Error(`Could not find abbreviation for ${name}`);\n    } else if (league.toLowerCase() === \"obosligaen\") {\n      const abbrev = this.obosligaAbbr[name];\n      if (abbrev) return abbrev;\n\n      throw new Error(`Could not find abbreviation for ${name}`);\n    }\n\n    throw new Error(\n      `${league} is an invalid league. Use Eliteserien or Obosligaen`,\n    );\n  };\n}\n\nexport default Abbreviations;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Header,\n  Table,\n  Segment,\n  Dimmer,\n  Loader,\n  TextArea,\n  Grid\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport \"moment/locale/nb\";\nimport Abbreviations from \"../../Tools/Abbreviations\";\nimport \"./MatchFeed.css\";\n\nclass MatchFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        matches: [],\n        freeText: \"\"\n      },\n      loading: true\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState(\n      {\n        data: {\n          matches: nextProps.matches\n        },\n        loading: false\n      },\n      () => {\n        this.formatFreeText(this.props.league);\n      }\n    );\n  }\n\n  getBestBetColor = bet => {\n    if (bet === null) {\n      return \"\";\n    }\n    return bet ? \"green\" : \"red\";\n  };\n\n  createBetCell = (bet, bestBet = null) => {\n    const cssColor = this.getBestBetColor(bestBet);\n    if (bet) {\n      return (\n        <Table.Cell className={cssColor} width={3}>\n          {this.formatPercent(bet)}\n        </Table.Cell>\n      );\n    }\n    return <Table.Cell>-</Table.Cell>;\n  };\n\n  betsNotReadyElement = match => (\n    <Table.Row key={match.matchId}>\n      <Table.Cell>\n        {match.homeTeamName} -{match.awayTeamName}\n      </Table.Cell>\n      <Table.Cell width={5}>\n        {moment(match.start).format(\"dddd DD. MMMM HH:mm\")}\n      </Table.Cell>\n      {this.createBetCell()}\n      {this.createBetCell()}\n      {this.createBetCell()}\n    </Table.Row>\n  );\n\n  createElements = matches => {\n    if (!matches) return [];\n\n    return matches.map(m => {\n      if (!m.bets) return this.betsNotReadyElement(m);\n\n      const {homeValue, drawValue, awayValue} = m.bets.oddsMarkets[0];\n      return (\n        <Table.Row key={m.matchId}>\n          <Table.Cell>\n            {m.homeTeamName} -{m.awayTeamName}\n          </Table.Cell>\n          <Table.Cell width={5}>\n            {moment(m.start).format(\"dddd DD. MMMM HH:mm\")}\n          </Table.Cell>\n          {this.createBetCell(homeValue, homeValue > awayValue)}\n          {this.createBetCell(drawValue)}\n          {this.createBetCell(awayValue, awayValue > homeValue)}\n        </Table.Row>\n      );\n    });\n  };\n\n  formatPercent = value => `${(value * 100).toFixed(1)} %`;\n\n  formatFreeText = league => {\n    if (this.state.data.matches.length > 0) {\n      const abbrevs = new Abbreviations();\n      const text = this.state.data.matches\n        .map(m => {\n          if (!m.bets) return \"\";\n\n          const homeTeamAbbrev = abbrevs.getAbbreviations(\n            m.homeTeamName,\n            league\n          );\n          const awayTeamAbbrev = abbrevs.getAbbreviations(\n            m.awayTeamName,\n            league\n          );\n\n          const homeTeamBet = this.formatPercent(\n            m.bets.oddsMarkets[0].homeValue\n          );\n\n          const drawBet = this.formatPercent(m.bets.oddsMarkets[0].drawValue);\n\n          const awayTeamBet = this.formatPercent(\n            m.bets.oddsMarkets[0].awayValue\n          );\n\n          return `${homeTeamAbbrev} - ${awayTeamAbbrev}\\nH: ${homeTeamBet} U: ${drawBet} B: ${awayTeamBet}`;\n        })\n        .join(\"\\n\\n\");\n      this.setState(prevState => ({\n        data: {\n          freeText: text,\n          matches: prevState.data.matches\n        }\n      }));\n    } else {\n      this.setState(prevState => ({\n        data: {\n          freeText: \"\",\n          matches: prevState.data.matches\n        }\n      }));\n    }\n  };\n\n  render() {\n    const elements = this.createElements(this.state.data.matches);\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Segment>\n            <Dimmer active={this.state.loading}>\n              <Loader>\n                Henter kamper for\n                {this.props.league}\n              </Loader>\n            </Dimmer>\n\n            <Header as=\"h3\">{this.props.league}</Header>\n\n            <Table striped>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Kamp</Table.HeaderCell>\n                  <Table.HeaderCell>Dato/Kl.</Table.HeaderCell>\n                  <Table.HeaderCell>Hjemme</Table.HeaderCell>\n                  <Table.HeaderCell>Uavgjort</Table.HeaderCell>\n                  <Table.HeaderCell>Borte</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>{elements}</Table.Body>\n            </Table>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Fritekst til stolpe</Header>\n          <span>Her dukker bare kamper som begynner kl. 18.00 opp.</span>\n          <TextArea\n            className=\"wide-text\"\n            autoHeight\n            value={this.state.data.freeText}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nMatchFeed.propTypes = {\n  league: PropTypes.string.isRequired,\n  matches: PropTypes.array.isRequired\n};\nexport default MatchFeed;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass DateFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        date: moment(new Date()).format(\"YYYY-MM-DD\")\n      }\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.updateDate(new Date(event.target.value));\n    this.setState({data: {date: event.target.value}});\n  };\n\n  render() {\n    return (\n      <div>\n        <p>\n          <label htmlFor=\"date\">Velg dato</label>\n        </p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"datefilter\"\n          value={this.state.data.date}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\nDateFilter.propTypes = {\n  updateDate: PropTypes.func.isRequired\n};\nexport default DateFilter;\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\nimport {\n  Header,\n  Segment,\n  Loader,\n  Dimmer,\n  Divider,\n  Message\n} from \"semantic-ui-react\";\nimport MatchFeed from \"../Components/Feeds/MatchFeed\";\nimport DateFilter from \"../Components/Filters/DateFilter\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\n\nclass GigSportsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: []\n      },\n      dateFilter: new Date(),\n      loading: true,\n      error: \"\"\n    };\n    this.gigDomain = process.env.REACT_APP_GIG_SPORTS_DOMAIN;\n  }\n\n  componentDidMount() {\n    document.title = \"Odds\";\n    Promise.all([this.fetchMatches(), this.fetchBets()])\n      .then(values => {\n        const eliteserien = this.extractLeague(values, 0);\n        const obosligaen = this.addHours(this.extractLeague(values, 1), 2);\n\n        const bets = values[1].feed;\n        const eliteserieBets = this.connectGamesAndBets(eliteserien, bets);\n        const obosligaBets = this.connectGamesAndBets(obosligaen, bets);\n        this.setState({\n          data: {\n            eliteserien: eliteserieBets,\n            obosligaen: obosligaBets\n          },\n          loading: false\n        });\n      })\n      .catch(() => {\n        this.updateError(\"Kunne ikke hente odds. Er du koblet til internett?\");\n      });\n  }\n\n  extractLeague = (values, index) => {\n    try {\n      return values[0].competitions[index].matches;\n    } catch (err) {\n      this.setState({\n        error:\n          \"Det var problemer med henting av data. Mest sannsynlig finnes det ikke kamper fra Gigsports.\"\n      });\n      return [];\n    }\n  };\n\n  addHours = (matches, hour) => {\n    if (matches) {\n      return matches.map(match => ({\n        ...match,\n        start: moment(match.start)\n          .add(hour, \"hours\")\n          .format()\n      }));\n    }\n    return [];\n  };\n\n  filterMatchesByDate = (matches, date = new Date()) =>\n    matches.filter(match => {\n      const matchDay = new Date(match.start).toDateString();\n      return matchDay === date.toDateString();\n    });\n\n  connectGamesAndBets = (matches, bets) => {\n    if (!matches) return [];\n    return matches.map(match => {\n      const foundBet = bets.find(bet => bet.matchId === match.matchId);\n      const connectedMatch = {\n        bets: null\n      };\n      connectedMatch.bets = foundBet;\n      return connectedMatch;\n    });\n  };\n\n  fetchMatches = () =>\n    fetch(\n      `${\n        this.gigDomain\n      }Customers/TV2/MatchFeed?apiKey=a1476rz9nz3wh0x5denb8ij54cxo47yr`\n    )\n      .then(response => response.json())\n      .catch(() =>\n        this.updateError(\n          \"Kunne ikke hente kamper fra GIG Sports. Er du koblet til internett?\"\n        )\n      );\n\n  fetchBets = () =>\n    fetch(\n      `${\n        this.gigDomain\n      }Customers/Tv2/OddsFeed/Pregame?apiKey=a1476rz9nz3wh0x5denb8ij54cxo47yr`\n    )\n      .then(response => response.json())\n      .catch(() =>\n        this.updateError(\n          \"Kunne ikke hente odds fra GIG Sports. Er du koblet til internett?\"\n        )\n      );\n\n  updateDate = date => this.setState({dateFilter: date});\n\n  updateError = message =>\n    this.setState(prevState => ({\n      ...prevState,\n      error: message,\n      loading: false\n    }));\n\n  render() {\n    let {eliteserien, obosligaen} = this.state.data;\n    eliteserien = this.filterMatchesByDate(eliteserien, this.state.dateFilter);\n    obosligaen = this.filterMatchesByDate(obosligaen, this.state.dateFilter);\n    return (\n      <div>\n        <FaresoneMenu />\n        <Segment>\n          <Dimmer active={this.state.loading}>\n            <Loader>Henter kamper</Loader>\n          </Dimmer>\n          {this.state.error ? (\n            <Message info>{this.state.error}</Message>\n          ) : (\n            <Header as=\"h1\">Odds</Header>\n          )}\n          <DateFilter updateDate={this.updateDate} />\n          <Divider />\n          <MatchFeed matches={eliteserien} league=\"Eliteserien\" />\n          <MatchFeed matches={obosligaen} league=\"Obosligaen\" />\n        </Segment>\n      </div>\n    );\n  }\n}\nexport default GigSportsView;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, {useState} from \"react\";\nimport {Form, Button} from \"semantic-ui-react\";\nimport firebaseConfig from \"../../databaseConfig/firebaseConfig\";\n\nconst LogInAdmin = () => {\n  const [email, setEmail] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleEmailChange = e => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const handlePwdChange = e => {\n    e.preventDefault();\n    setPwd(e.target.value);\n  };\n\n  const signIn = e => {\n    e.preventDefault();\n    firebaseConfig\n      .auth()\n      .signInWithEmailAndPassword(email, pwd)\n      .catch(() => {\n        setError(\"Brukernavn eller passord er feil.\");\n      });\n  };\n\n  return (\n    <Form>\n      <Form.Field>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          required\n          onChange={handleEmailChange}\n          autoComplete=\"email\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"pwd\">Passord</label>\n        <input\n          placeholder=\"Passord\"\n          type=\"password\"\n          name=\"pwd\"\n          value={pwd}\n          onChange={handlePwdChange}\n          autoComplete=\"password\"\n        />\n      </Form.Field>\n      {error ? <span style={{display: \"block\"}}>{error}</span> : \"\"}\n      <Button onClick={signIn} type=\"submit\">\n        Logg inn\n      </Button>\n    </Form>\n  );\n};\nexport default LogInAdmin;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button, Segment, Header, Dropdown,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\n\nclass AddLeaguesContainer extends Component {\n  addLeagues = (e, {value: values}) => {\n    // Get values and return promises for each\n    const promises = values.map(value => altOmFotballLeagueService.getLeagueData(value));\n    // Fetch data about each league\n    axios.all(promises).then((data) => {\n      const leagueData = data.map(d => d.data);\n      this.props.setSelectedLeagues(leagueData);\n    });\n  };\n\n  saveLeagues = () => {\n    const leagues = {};\n    this.props.selectedLeagues.forEach((league) => {\n      leagues[league.id] = league;\n    });\n\n    this.props.saveSelectedLeagues(leagues);\n  };\n\n  render() {\n    const {selectedLeagues, altOmFotballLeagues} = this.props;\n    return (\n      <Segment>\n        <Header as=\"h2\">Legg til ligaer</Header>\n        <Dropdown\n          placeholder=\"Velg ligaer\"\n          fluid\n          multiple\n          search\n          selection\n          onChange={this.addLeagues}\n          options={altOmFotballLeagues.map(league => ({\n            name: league.name,\n            text: league.name,\n            value: parseFloat(league.id),\n          }))}\n        />\n        <Button\n          disabled={selectedLeagues.length === 0}\n          onClick={this.saveLeagues}\n        >\n          Lagre kamper til database\n        </Button>\n      </Segment>\n    );\n  }\n}\nAddLeaguesContainer.propTypes = {\n  selectedLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  altOmFotballLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setSelectedLeagues: PropTypes.func.isRequired,\n  saveSelectedLeagues: PropTypes.func.isRequired,\n};\nexport default AddLeaguesContainer;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Segment, Header, Card, Dimmer, Loader,\n} from \"semantic-ui-react\";\nimport \"./RemoveLeaguesContainer.css\";\n\nclass RemoveLeaguesContainer extends Component {\n  removeLeague = (event) => {\n    const {id} = event.target.dataset;\n    this.props.removeLeague(id);\n  };\n\n  render() {\n    const {leagues, loading} = this.props;\n    if (leagues.length === 0) {\n      return \"\";\n    }\n    return (\n      <Segment>\n        <Dimmer active={loading}>\n          <Loader>Henter ligaer</Loader>\n        </Dimmer>\n        <Header as=\"h2\">Fjern ligaer</Header>\n        <Card.Group>\n          {leagues.map(league => (\n            <Card key={league.id}>\n              <Card.Content>\n                <Card.Header>{league.name}</Card.Header>\n                <Card.Meta>\nID:\n                  {league.id}\n                </Card.Meta>\n                <Card.Meta>\n                  Aktiv sesong:\n                  {\" \"}\n                  <a href={league.activeseason[\"@uri\"]}>\n                    {league.activeseason[\"@uri\"]}\n                  </a>\n                </Card.Meta>\n                <Card.Description\n                  className=\"remove-league\"\n                  data-id={league.id}\n                  onClick={this.removeLeague}\n                >\n                  Klikk her for å fjerne ligaen\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      </Segment>\n    );\n  }\n}\nRemoveLeaguesContainer.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired,\n      }).isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  removeLeague: PropTypes.func.isRequired,\n};\nexport default RemoveLeaguesContainer;\n","import firebaseConfig from \"../databaseConfig/firebaseConfig\";\n\nclass FirebaseService {\n  constructor() {\n    this.database = firebaseConfig.database();\n  }\n\n  getLeagues = cb => {\n    const leagueRef = this.database.ref(\"leagues\");\n    leagueRef.on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  updateLeague = ({name, seasonId, tournamentId}) => {\n    const leagueName = name.toLowerCase();\n    this.database.ref(`leagues/${leagueName}`).set({\n      name,\n      active: true,\n      seasonId,\n      tournamentId\n    });\n  };\n\n  saveLeagues = leagues => {\n    Object.keys(leagues).forEach(key => {\n      this.database.ref(`leagues/${key}`).set(leagues[key], error => {\n        if (!error) {\n          console.log(\"League savings went okay\"); // eslint-disable-line\n        } else {\n          console.warn(\"There was an error saving the leagues to the database\"); // eslint-disable-line\n          console.warn(error); // eslint-disable-line\n        }\n      });\n    });\n  };\n\n  removeLeague = id => {\n    this.database.ref(`leagues/${id}`).remove();\n  };\n\n  getColors = cb => {\n    const colorRef = this.database.ref(\"colors\");\n    colorRef.on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  addColor = (id, color) =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`colors/${this.removeFirebaseSpecializedCharacters(id, \"#\")}`)\n        .set(color, error => {\n          if (!error) {\n            resolve({message: `${color.text} lagret til databasen`});\n          } else {\n            reject(\n              new Error({\n                message: `${color.text} kunne ikke bli lagret i databasen.`,\n                error\n              })\n            );\n          }\n        });\n    });\n\n  removeFirebaseSpecializedCharacters = (ref, char) => ref.replace(char, \"\");\n\n  removeColor = key =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`colors/${this.removeFirebaseSpecializedCharacters(key, \"#\")}`)\n        .remove()\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n\n  addChannel = channel =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`channels/${channel.value}`)\n        .set(channel)\n        .then(() => resolve({message: \"Kanal lagret i database\"}))\n        .catch(error =>\n          reject(\n            new Error({message: \"Kanal kunne ikke lagres i databasen\", error})\n          )\n        );\n    });\n\n  removeChannel = key =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`channels/${key}`)\n        .remove()\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n\n  getChannels = cb => {\n    this.database.ref(\"channels\").on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  mapLeaguesToList = data => {\n    if (!data) return [];\n    return Object.keys(data).map(key => data[key]);\n  };\n}\n\nexport default FirebaseService;\n","import React, {Component} from \"react\";\nimport AddLeaguesContainer from \"./AddLeaguesContainer\";\nimport RemoveLeaguesContainer from \"./RemoveLeaguesContainer\";\nimport FirebaseService from \"../../../services/FirebaseService\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\n\nclass LeaguesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      altOmFotballLeagues: [],\n      leagues: [],\n      selectedLeagues: [],\n      loading: true,\n    };\n    this.service = new FirebaseService();\n    this.getAltOmFotballLeagues = this.getAltOmFotballLeagues.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAltOmFotballLeagues();\n    this.getLeagues();\n  }\n\n  getLeagues = () => {\n    this.service.getLeagues(this.processLeagues);\n  };\n\n  getAltOmFotballLeagues = () => {\n    altOmFotballLeagueService.getAllLeagues().then((data) => {\n      this.setState({altOmFotballLeagues: data.data.tournament});\n    });\n  };\n\n  setSelectedLeagues = selectedLeagues => this.setState({selectedLeagues});\n\n  saveSelectedLeagues = (selectedLeagues) => {\n    this.service.saveLeagues(selectedLeagues);\n  };\n\n  removeLeague = id => this.service.removeLeague(id);\n\n  processLeagues = (leagues) => {\n    this.setState({leagues, loading: false});\n  };\n\n  render() {\n    const {\n      leagues,\n      selectedLeagues,\n      altOmFotballLeagues,\n      loading,\n    } = this.state;\n    return (\n      <div>\n        <AddLeaguesContainer\n          altOmFotballLeagues={altOmFotballLeagues}\n          selectedLeagues={selectedLeagues}\n          setSelectedLeagues={this.setSelectedLeagues}\n          saveSelectedLeagues={this.saveSelectedLeagues}\n        />\n        <RemoveLeaguesContainer\n          leagues={leagues}\n          loading={loading}\n          removeLeague={this.removeLeague}\n        />\n      </div>\n    );\n  }\n}\nexport default LeaguesContainer;\n","export default [\"#e90052\", \"#38003c\", \"#00FF87\", \"#eaff04\", \"#04f5ff\", \"#fff\"];\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form, Button, Message} from \"semantic-ui-react\";\nimport {SketchPicker} from \"react-color\";\n\nimport premierLeagueDefaultColors from \"../../Data/premierLeagueDefaultColors\";\n\nclass NewColorForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveColor = this.saveColor.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  constructColorObject = (name, hex, number) => ({\n    color: name,\n    key: name,\n    text: name,\n    value: number,\n    hex\n  });\n\n  saveColor = e => {\n    e.preventDefault();\n    const form = document.forms.colorForm;\n    if (form.checkValidity()) {\n      const {\n        color: {key, hex, value}\n      } = this.props;\n      const colorObject = this.constructColorObject(key, hex, value);\n      const colorKey = hex.replace(\"#\", \"\");\n      this.props.saveColor(colorKey, colorObject);\n    }\n  };\n\n  handleChange = (e, {name, value}) => {\n    const valid = this.formIsValid();\n    this.props.handleChange(name, value, valid);\n  };\n\n  handleColorChange = color => {\n    const valid = this.formIsValid();\n    this.props.handleColorChange(color.hex, valid);\n  };\n\n  formIsValid = () => document.forms.colorForm.checkValidity();\n\n  render() {\n    const {\n      color: {key, value, hex},\n      error,\n      valid\n    } = this.props;\n\n    return (\n      <div>\n        {error ? (\n          <Message warning>\n            <Message.Header>Lagring av farge feilet</Message.Header>\n            <p>{error.message}</p>\n          </Message>\n        ) : (\n          \"\"\n        )}\n        <Form name=\"colorForm\" onSubmit={this.saveColor}>\n          <Form.Field>\n            <label htmlFor=\"key\">Navn på farge</label>\n            <Form.Input\n              placeholder=\"Navn på farge\"\n              required\n              name=\"key\"\n              onChange={this.handleChange}\n              value={key}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"value\">Numerisk verdi (mappet mot grafikk)</label>\n            <Form.Input\n              type=\"number\"\n              required\n              name=\"value\"\n              value={value}\n              onChange={this.handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"hex\">Farge</label>\n            <SketchPicker\n              presetColors={premierLeagueDefaultColors}\n              onChange={this.handleColorChange}\n              color={hex}\n            />\n          </Form.Field>\n          <Button color=\"green\" disabled={!valid} type=\"submit\">\n            Lagre farge\n          </Button>\n          <Button color=\"teal\" onClick={this.props.resetForm}>\n            Resett form\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\nNewColorForm.propTypes = {\n  saveColor: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    hex: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string.isRequired\n  }),\n  valid: PropTypes.bool.isRequired,\n  resetForm: PropTypes.func.isRequired\n};\n\nNewColorForm.defaultProps = {\n  error: undefined\n};\nexport default NewColorForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Icon} from \"semantic-ui-react\";\n\nconst EditColors = ({\n  colors, loading, editColor, deleteColor,\n}) => {\n  if (loading) {\n    return <p>Henter kanaler...</p>;\n  }\n  return (\n    <Grid columns={2}>\n      {colors\n        .sort((a, b) => parseInt(a.value, 10) >= parseInt(b.value, 10))\n        .map(color => (\n          <Grid.Column key={color.hex}>\n            <p style={{fontWeight: \"bold\"}}>{color.text}</p>\n            <div\n              style={{\n                width: \"50px\",\n                height: \"50px\",\n                backgroundColor: `${color.hex}`,\n                border: \"1px solid lightgray\",\n                borderRadius: \"5px\",\n              }}\n            />\n            <p>\n              {color.hex}\n              <br />\n                ID:\n              {\" \"}\n              {color.value}\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <span\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => {\n                  editColor(color);\n                }}\n              >\n                <Icon name=\"edit\" />\nRediger\n              </span>\n              <span\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => deleteColor(color.hex)}\n              >\n                <Icon name=\"delete\" />\nFjern\n              </span>\n            </div>\n          </Grid.Column>\n        ))}\n    </Grid>\n  );\n};\n\nEditColors.propTypes = {\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  editColor: PropTypes.func.isRequired,\n  deleteColor: PropTypes.func.isRequired,\n};\nexport default EditColors;\n","import React, {Component} from \"react\";\nimport {Grid, Header} from \"semantic-ui-react\";\nimport NewColorForm from \"../NewColorForm\";\nimport EditColors from \"../EditColors\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ColorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      selectedColor: {\n        key: \"\",\n        value: \"0\",\n        hex: \"FFFFFF\"\n      },\n      loading: true,\n      valid: false\n    };\n    this.service = new FirebaseService();\n    this.saveColor = this.saveColor.bind(this);\n  }\n\n  componentDidMount() {\n    this.getColors();\n  }\n\n  getColors = () => {\n    this.service.getColors(this.processColors);\n  };\n\n  setColor = color => this.setState({selectedColor: color});\n\n  saveColor = (key, color) => {\n    if (!key) throw new Error(\"Cannot save color without a key\");\n    if (!color) throw new Error(\"Cant save an empty color object\");\n    return new Promise((resolve, reject) => {\n      this.service\n        .addColor(key, color)\n        .then(data => {\n          resolve(data);\n          this.resetForm();\n        })\n        .catch(error => reject(error));\n    });\n  };\n\n  deleteColor = key => {\n    if (!key) throw new Error(\"Cannot delete color without a key\");\n    return new Promise((resolve, reject) => {\n      this.service\n        .removeColor(key)\n        .then(data => {\n          resolve(data);\n          this.resetForm();\n        })\n        .catch(error => reject(error));\n    });\n  };\n\n  resetForm = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      selectedColor: {\n        key: \"\",\n        value: \"0\",\n        hex: \"FFFFFF\"\n      }\n    }));\n  };\n\n  editColor = color => {\n    this.setState({selectedColor: color});\n  };\n\n  processColors = colors => this.setState({colors, loading: false});\n\n  handleChange = (name, value, valid) => {\n    this.setState(prevState => ({\n      ...prevState,\n      valid,\n      selectedColor: {\n        ...prevState.selectedColor,\n        [name]: value\n      }\n    }));\n  };\n\n  handleColorChange = (hexColor, valid) => {\n    this.setState(prevState => ({\n      ...prevState,\n      valid,\n      selectedColor: {\n        ...prevState.selectedColor,\n        hex: hexColor\n      }\n    }));\n  };\n\n  render() {\n    const {colors, selectedColor, loading, valid} = this.state;\n\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Header as=\"h3\">Legg til ny farge</Header>\n          <NewColorForm\n            handleChange={this.handleChange}\n            handleColorChange={this.handleColorChange}\n            color={selectedColor}\n            saveColor={this.saveColor}\n            valid={valid}\n            resetForm={this.resetForm}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Rediger farger</Header>\n          <EditColors\n            colors={colors}\n            loading={loading}\n            editColor={this.editColor}\n            deleteColor={this.deleteColor}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nexport default ColorContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form, Button, Message} from \"semantic-ui-react\";\n\nconst NewChannelForm = ({\n  selectedChannel: {name, value},\n  valid,\n  message,\n  addChannel,\n  handleChange\n}) => {\n  const handleChangeAndValidateForm = (e, {name, value}) => {\n    const valid = document.forms.channelForm.checkValidity();\n    handleChange(name, value, valid);\n  };\n\n  return (\n    <div>\n      {message ? (\n        <Message info>\n          <Message.Header>Lagring av kanal</Message.Header>\n          <p>{message}</p>\n        </Message>\n      ) : (\n        \"\"\n      )}\n      <Form name=\"channelForm\" onSubmit={addChannel}>\n        <Form.Field>\n          <label htmlFor=\"name\">Kanalnavn</label>\n          <Form.Input\n            placeholder=\"TV 2\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeAndValidateForm}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"value\">Numerisk verdi</label>\n          <Form.Input\n            type=\"number\"\n            min=\"1\"\n            required\n            name=\"value\"\n            value={value}\n            onChange={handleChangeAndValidateForm}\n          />\n        </Form.Field>\n\n        <Button color=\"green\" disabled={!valid} type=\"submit\">\n          Lagre/endre kanal\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nNewChannelForm.propTypes = {\n  selectedChannel: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  addChannel: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired\n};\n\nexport default NewChannelForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Icon} from \"semantic-ui-react\";\n\nconst EditChannels = ({\n  channels, loading, editChannel, deleteChannel,\n}) => (loading ? (\n  <p>Henter kanaler...</p>\n) : (\n  <Grid\n    style={{\n      maxHeight: \"400px\",\n      overflowY: \"scroll\",\n    }}\n    columns={2}\n  >\n    {channels.map(channel => (\n      <Grid.Column key={channel.value}>\n        <p>\n          <b>{channel.name}</b>\n          {\" \"}\n(\n          {channel.value}\n)\n        </p>\n        <div>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              editChannel(channel);\n            }}\n          >\n            <Icon name=\"edit\" />\n                Rediger\n          </span>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => deleteChannel(channel.value)}\n          >\n            <Icon name=\"delete\" />\n                Fjern\n          </span>\n        </div>\n      </Grid.Column>\n    ))}\n  </Grid>\n));\n\nEditChannels.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  editChannel: PropTypes.func.isRequired,\n  deleteChannel: PropTypes.func.isRequired,\n};\nexport default EditChannels;\n","import React, {Component} from \"react\";\nimport {Grid, Header} from \"semantic-ui-react\";\nimport NewChannelForm from \"../NewChannelForm\";\nimport EditChannels from \"../EditChannels\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ChannelContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: [],\n      selectedChannel: {\n        name: \"\",\n        value: \"1\"\n      },\n      valid: false,\n      loading: true,\n      message: \"\"\n    };\n    this.service = new FirebaseService();\n\n    this.addChannel = this.addChannel.bind(this);\n    this.deleteChannel = this.deleteChannel.bind(this);\n    this.editChannel = this.editChannel.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getChannels();\n  }\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  processChannels = channels =>\n    this.setState(prevState => ({\n      ...prevState,\n      channels: this.sortChannels(channels),\n      loading: false\n    }));\n\n  sortChannels = channels =>\n    channels.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  addChannel = () => {\n    this.service.addChannel(this.state.selectedChannel).then(data => {\n      this.setState({message: data.message});\n      this.resetForm();\n    });\n  };\n\n  handleChange = (name, value, valid) =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel: {\n        ...prevState.selectedChannel,\n        [name]: value\n      },\n      valid\n    }));\n\n  resetForm = () =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel: {\n        name: \"\",\n        value: \"1\"\n      },\n      valid: false\n    }));\n\n  editChannel = selectedChannel =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel,\n      valid: true\n    }));\n\n  deleteChannel = channelId => {\n    if (!channelId) throw new Error(\"Cannot delete a channel without a key\");\n    this.service.removeChannel(channelId);\n  };\n\n  render() {\n    const {selectedChannel, valid, message, channels, loading} = this.state;\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Header as=\"h3\">Legg til kanal</Header>\n          <NewChannelForm\n            selectedChannel={selectedChannel}\n            handleChange={this.handleChange}\n            addChannel={this.addChannel}\n            resetForm={this.resetForm}\n            valid={valid}\n            message={message}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Rediger kanaler</Header>\n          <EditChannels\n            channels={channels}\n            editChannel={this.editChannel}\n            deleteChannel={this.deleteChannel}\n            loading={loading}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nexport default ChannelContainer;\n","import React, {Component} from \"react\";\nimport {Button, Segment, Divider, Menu} from \"semantic-ui-react\";\nimport firebaseConfig from \"../../databaseConfig/firebaseConfig\";\nimport LeaguesContainer from \"./Containers/LeaguesContainer\";\nimport ColorContainer from \"./Containers/ColorContainer\";\nimport ChannelContainer from \"./Containers/ChannelContainer\";\n\nclass LeagueAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"ligaer\",\n      menuComponents: {\n        ligaer: <LeaguesContainer />,\n        farger: <ColorContainer />,\n        kanaler: <ChannelContainer />\n      }\n    };\n    this.logOut = this.logOut.bind(this);\n  }\n\n  getMenuComponent = name => {\n    const component = this.state.menuComponents[name];\n    if (!component) throw new Error(`Menu component not found for id: ${name}`);\n    return component;\n  };\n\n  logOut = e => {\n    e.preventDefault();\n    firebaseConfig.auth().signOut();\n  };\n\n  handleItemClick = (e, {name}) => this.setState({activeItem: name});\n\n  render() {\n    const {activeItem} = this.state;\n    const menuComponent = this.getMenuComponent(activeItem);\n    return (\n      <Segment>\n        <p>Dette er admin-sidene til Faresonen.</p>\n        <Menu tabular>\n          <Menu.Item\n            name=\"ligaer\"\n            active={activeItem === \"ligaer\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"farger\"\n            active={activeItem === \"farger\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"kanaler\"\n            active={activeItem === \"kanaler\"}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n        <Button onClick={this.logOut}>Logg ut</Button>\n        <Divider />\n        {menuComponent}\n      </Segment>\n    );\n  }\n}\nexport default LeagueAdmin;\n","import React, {Component} from \"react\";\nimport firebaseConfig from \"../../../databaseConfig/firebaseConfig\";\nimport LogInAdmin from \"../LogInAdmin\";\nimport LeagueAdmin from \"../LeagueAdmin\";\n\nclass AdminContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  // Authentication listener\n  authListener() {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({user});\n      } else {\n        this.setState({user: null});\n      }\n    });\n  }\n\n  render() {\n    return !this.state.user ? <LogInAdmin /> : <LeagueAdmin />;\n  }\n}\nexport default AdminContainer;\n","import React from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport AdminContainer from \"../Components/Admin/Containers/AdminContainer\";\n\nconst AdminView = () => (\n  <Container>\n    <FaresoneMenu />\n    <h1>Admin</h1>\n    <AdminContainer />\n  </Container>\n);\nexport default AdminView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Header, Form, Button} from \"semantic-ui-react\";\n\nconst FormErrors = ({errors}) => (\n  <ul>\n    {errors.map((error, index) => (\n      <li key={index}>{error}</li> // eslint-disable-line\n    ))}\n  </ul>\n);\nFormErrors.propTypes = {\n  errors: PropTypes.array.isRequired\n};\n\nconst NewUserForm = ({onChange, onSubmit, formErrors}) => (\n  <div>\n    <Header as=\"h3\">Opprett en ny bruker her</Header>\n\n    <Form onSubmit={onSubmit}>\n      <Form.Field>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          required\n          type=\"email\"\n          name=\"email\"\n          onChange={onChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"password\">Passord</label>\n        <input\n          id=\"password\"\n          required\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"confirmPassword\">Bekreft passord</label>\n        <input\n          id=\"confirmPassword\"\n          required\n          type=\"password\"\n          name=\"confirmedPassword\"\n          onChange={onChange}\n        />\n      </Form.Field>\n\n      <Button type=\"submit\">Opprett bruker</Button>\n      {formErrors.length > 0 ? <FormErrors errors={formErrors} /> : \"\"}\n    </Form>\n  </div>\n);\n\nNewUserForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.array.isRequired\n};\n\nexport default NewUserForm;\n","import React from \"react\";\nimport {Message} from \"semantic-ui-react\";\nimport NewUserForm from \"../NewUserForm\";\nimport firebaseConfig from \"../../../databaseConfig/firebaseConfig\";\n\nclass NewUserContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmedPassword: \"\",\n      formErrors: [],\n      info: \"\"\n    };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const {email, password, confirmedPassword} = this.state;\n    const errors = [];\n    if (password !== confirmedPassword) {\n      errors.push(\"Passordene matcher ikke\");\n    } else {\n      firebaseConfig\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(() => {})\n        .catch(error => {\n          const {message} = error;\n          errors.push(message);\n        });\n      this.setState({formErrors: errors});\n    }\n  };\n\n  onChange = event => {\n    event.preventDefault();\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  render() {\n    const {formErrors, info} = this.state;\n    return (\n      <div>\n        {info !== \"\" ? (\n          <Message>\n            <Message.Header>Informasjon</Message.Header>\n            <p>{info}</p>\n          </Message>\n        ) : (\n          \"\"\n        )}\n        <NewUserForm\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          formErrors={formErrors}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NewUserContainer;\n","import React from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport NewUserContainer from \"../Components/NewUser/Containers/NewUserContainer\";\n\nconst NewUserView = () => (\n  <Container>\n    <FaresoneMenu />\n    <NewUserContainer />\n  </Container>\n);\n\nexport default NewUserView;\n","import React, {useState} from \"react\";\nimport {Accordion, Icon} from \"semantic-ui-react\";\n\nconst AboutAccordion = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleClick = (e, titleProps) => {\n    const {index} = titleProps;\n    const newIndex = calculateNewIndex(index, activeIndex);\n\n    setActiveIndex(newIndex);\n  };\n\n  const calculateNewIndex = (index, activeIndex) =>\n    activeIndex === index ? -1 : index;\n\n  return (\n    <Accordion>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Motivasjon\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        <p>\n          Motivasjonen til denne applikasjonen var å bli kvitt repeterende og\n          kjedelig arbeid i forbindelse med forberedelser til FotballXtra.\n        </p>\n        <p>\n          Ideen bak har hele tiden vært og få generert lefsen til FotballXtra\n          med færrest mulige klikk. Fra første versjon av faresone-generatoren\n          så dagens lys som Java-applikasjon i 2014 er dagens versjon oppdatert\n          til å være web-basert. Det betyr at ny funksjonalitet kan komme ut\n          fortere og alt man trenger er en nettleser for tilgang.\n        </p>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Kan det legges til flere ligaer?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        <p>\n          Ja, det kan legges til flere ligaer. Alt man trenger er liga-id og\n          sesong-id fra \n          {\" \"}\n          <a href=\"http://www.altomfotball.no\">altomfotball.no</a>\n          . Foreløpig må det gjøres via Sindre Moldeklev, men i fremtiden kan\n          det være det kan bli gjort av deg som bruker.\n        </p>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Hvordan fungerer det?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        <p>\n          Dataene hentes direkte fra samme kilde som Homla og andre systemer i\n          TV 2. Vi kan dermed være sikre på at det vi bruker på luft også er det\n          vi ser på sidene her.\n        </p>\n\n        <p>\n          For Faresone-komponenten for bruk på sending så hentes de spillerne\n          som er i faresonen ned og lagret i nettleseren. Dermed får man besjed\n          dersom\n        </p>\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default AboutAccordion;\n","import React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport AboutAccordion from \"../Components/Accordion/AboutAccordion\";\n\nconst AboutView = () => (\n  <div>\n    <FaresoneMenu />\n    <Header as=\"h1\">Om</Header>\n    <AboutAccordion />\n  </div>\n);\n\nexport default AboutView;\n","import React from \"react\";\nimport {Header, List} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst FantasyStatsList = props => (\n  <div>\n    <Header as=\"h2\">{props.header}</Header>\n    <List items={props.players} />\n  </div>\n);\n\nFantasyStatsList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.string).isRequired,\n  header: PropTypes.string.isRequired,\n};\n\nexport default FantasyStatsList;\n","import axios from \"axios\";\n\nconst FantasyStatsService = {\n  getMostSelectedPlayers(limit) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/fantasy/players\")\n        .then(data => {\n          const selectedPlayers = data.data\n            .sort((a, b) => {\n              const selectA = parseFloat(a.selected_by_percent);\n              const selectB = parseFloat(b.selected_by_percent);\n              if (selectA > selectB) return -1;\n              if (selectA === selectB) return 0;\n              if (selectA < selectB) return 1;\n              throw new Error(\n                \"Could not compute sorting order for most selected players\"\n              );\n            })\n            .filter(player => player.selected_by_percent !== \"0.0\")\n            .slice(0, limit);\n          resolve(selectedPlayers);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n\n  getMostExpensivePlayer(limit) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/fantasy/players\")\n        .then(data => {\n          const selectedPlayers = data.data\n            .sort((a, b) => {\n              if (a.now_cost > b.now_cost) return -1;\n              if (a.now_cost === b.now_cost) return 0;\n              if (a.now_cost < b.now_cost) return 1;\n              throw new Error(\n                \"Could not compute sorting order for most expensive players\"\n              );\n            })\n            .slice(0, limit);\n          resolve(selectedPlayers);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n};\n\nexport default FantasyStatsService;\n","import React, {Component} from \"react\";\nimport {Message, Segment, Grid} from \"semantic-ui-react\";\nimport FantasyStatsList from \"../FantasyStatsList\";\nimport FantasyStatsService from \"../../../services/FantasyStatsService\";\n\nclass FantasyStatsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        selectedPlayers: [],\n        expensivePlayers: []\n      },\n      errors: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMostSelectedPlayers(10);\n    this.getMostExpensivePlayers(10);\n  }\n\n  getMostExpensivePlayers = limit => {\n    FantasyStatsService.getMostExpensivePlayer(limit)\n      .then(data =>\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            expensivePlayers: data\n          }\n        }))\n      )\n      .catch(() => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            expensivePlayers: []\n          },\n          loading: false,\n          errors: [\n            ...prevState.errors,\n            \"Kunne ikke hente de dyreste spillerne. Er du koblet til internett?\"\n          ]\n        }));\n      });\n  };\n\n  getMostSelectedPlayers = limit => {\n    FantasyStatsService.getMostSelectedPlayers(limit)\n      .then(data => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            selectedPlayers: data\n          }\n        }));\n      })\n      .catch(() => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            selectedPlayers: []\n          },\n          loading: false,\n          errors: [\n            ...prevState.errors,\n            \"Kunne ikke hente de mest valgte spillerne. Er du koblet til internett?\"\n          ]\n        }));\n      });\n  };\n\n  formatErrors = errors => (\n    <Message info>\n      <ul>\n        {errors.map(error => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </Message>\n  );\n\n  render() {\n    const {\n      data: {selectedPlayers, expensivePlayers},\n      errors\n    } = this.state;\n    if (errors.length > 0) {\n      return this.formatErrors(errors);\n    }\n\n    return (\n      <Segment>\n        <Grid columns={4}>\n          <Grid.Column>\n            <FantasyStatsList\n              players={selectedPlayers.map(\n                player =>\n                  `${player.selected_by_percent}% - ${player.first_name} ${\n                    player.second_name\n                  }`\n              )}\n              header=\"Mest valgte spillere\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <FantasyStatsList\n              players={expensivePlayers.map(\n                player =>\n                  `£${(player.now_cost / 10).toFixed(1)} mill. - ${\n                    player.first_name\n                  } ${player.second_name}`\n              )}\n              header=\"Dyreste spillere\"\n            />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    );\n  }\n}\nexport default FantasyStatsContainer;\n","import React from \"react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FantasyStatsContainer from \"../Components/FantasyStats/Containers/FantasyStatsContainer\";\n\nconst FantasyStatsView = () => (\n  <div>\n    <FaresoneMenu />\n    <FantasyStatsContainer />\n  </div>\n);\nexport default FantasyStatsView;\n","import React from \"react\";\n\nconst My404NotFound = () => <p>Siden finnes ikke</p>;\nexport default My404NotFound;\n","import React, {Component} from \"react\";\nimport {Menu} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nclass TypeOfGraphicSubMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  handleItemClick = (event, props) => {\n    this.props.updateActiveItem(props.name);\n  };\n\n  render() {\n    const {activeItem} = this.props;\n    return (\n      <Menu>\n        <Menu.Item\n          name=\"liveinfo\"\n          active={activeItem === \"liveinfo\"}\n          onClick={this.handleItemClick}\n          link\n        >\n          Liveinfo\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"S18Teasesuper\"\n          active={activeItem === \"S18Teasesuper\"}\n          onClick={this.handleItemClick}\n          link\n        >\n          S18 - Teasesuper\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nTypeOfGraphicSubMenu.propTypes = {\n  activeItem: PropTypes.string.isRequired,\n  updateActiveItem: PropTypes.func.isRequired,\n};\n\nexport default TypeOfGraphicSubMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Dropdown} from \"semantic-ui-react\";\n\nconst SelectLeague = ({leagues, setSelectedLeague, selectedLeague}) => (\n  <Dropdown\n    fluid\n    search\n    selection\n    options={leagues}\n    onChange={(e, {value}) => setSelectedLeague(value)}\n    placeholder=\"Velg liga/turnering\"\n    value={selectedLeague}\n  />\n);\n\nSelectLeague.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default SelectLeague;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectLeague from \"../SelectLeague\";\n\nconst SelectLeagueContainer = ({\n  setSelectedLeague,\n  selectedLeague,\n  leagues\n}) => (\n  <SelectLeague\n    leagues={leagues}\n    setSelectedLeague={setSelectedLeague}\n    selectedLeague={selectedLeague}\n  />\n);\nSelectLeagueContainer.propTypes = {\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired,\n  leagues: PropTypes.array.isRequired\n};\nexport default SelectLeagueContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport TypeOfGraphicSubMenu from \"../Components/PremierLeagueTools/TypeOfGraphicSubMenu\";\nimport SelectLeagueContainer from \"../Components/PremierLeagueTools/Containers/SelectLeagueContainer\";\n\nconst PremierLeagueToolsView = ({\n  leagues,\n  updateActiveItem,\n  activeItem,\n  setSelectedLeague,\n  selectedLeague,\n  graphicComponent\n}) => (\n  <div>\n    <FaresoneMenu />\n    <TypeOfGraphicSubMenu\n      updateActiveItem={updateActiveItem}\n      activeItem={activeItem}\n    />\n    <SelectLeagueContainer\n      leagues={leagues}\n      setSelectedLeague={setSelectedLeague}\n      selectedLeague={selectedLeague}\n    />\n    {graphicComponent}\n  </div>\n);\nPremierLeagueToolsView.propTypes = {\n  activeItem: PropTypes.string.isRequired,\n  updateActiveItem: PropTypes.func.isRequired,\n  graphicComponent: PropTypes.node.isRequired,\n  leagues: PropTypes.array.isRequired,\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired\n};\nexport default PremierLeagueToolsView;\n","const today = \"Avspark kl. \";\nconst tomorrow = \"I morgen fra kl. \";\nconst monday = \"Mandag fra kl. \";\nconst tuesday = \"Tirsdag fra kl. \";\nconst wednesday = \"Onsdag fra kl. \";\nconst thursday = \"Torsdag fra kl. \";\nconst friday = \"Fredag fra kl. \";\nconst saturday = \"Lørdag fra kl. \";\nconst sunday = \"Søndag fra kl. \";\nexport default [\n  {\n    key: today,\n    value: today,\n    text: today,\n  },\n  {\n    key: tomorrow,\n    value: tomorrow,\n    text: tomorrow,\n  },\n\n  {\n    key: monday,\n    value: monday,\n    text: monday,\n  },\n  {\n    key: tuesday,\n    value: tuesday,\n    text: tuesday,\n  },\n  {\n    key: wednesday,\n    value: wednesday,\n    text: wednesday,\n  },\n  {\n    key: thursday,\n    value: thursday,\n    text: thursday,\n  },\n  {\n    key: friday,\n    value: friday,\n    text: friday,\n  },\n  {\n    key: saturday,\n    value: saturday,\n    text: saturday,\n  },\n  {\n    key: sunday,\n    value: sunday,\n    text: sunday,\n  },\n];\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message, Dropdown } from \"semantic-ui-react\";\nimport moment from \"moment-timezone\";\nimport kickOfTexts from \"../../Data/kickOfTexts\";\nimport \"./LiveTeaseGenerator.css\";\n\nconst LiveTeaseGenerator = ({\n  handleChange,\n  loading,\n  matches,\n  colors,\n  defaultChannels,\n  allChannels\n}) => {\n  useEffect(() => {\n    createTimes();\n  }, []);\n\n  const handleOnChange = (event, props) => handleChange(props);\n\n  const createTimes = () => {\n    const hours = 24;\n    const minutes = 15;\n    const times = [];\n    // eslint-disable-next-line\n    for (let i = 0; i < hours; i++) {\n      for (let y = 0; y < 60; y += minutes) {\n        const time = `${padTime(i)}.${padTime(y)}`;\n        times.push({\n          key: time,\n          value: time,\n          text: time\n        });\n      }\n    }\n    return times;\n  };\n\n  const padTime = time => (time < 10 ? `0${time}` : time.toString());\n\n  const mapMatches = matches => {\n    moment.tz.setDefault(\"Europe/Oslo\");\n\n    return matches.map(match => ({\n      key: match[\"@uri\"],\n      value: match.name,\n      text: `${match.name} - ${moment(match.starttime).from(\n        moment()\n      )} - ${moment(match.starttime).format(\"DD.MM.YYYY [Kl.] HH:mm\")}`\n    }));\n  };\n\n  const mapChannels = channels =>\n    channels.map(channel => ({\n      key: channel.value,\n      value: parseInt(channel.value, 10),\n      text: channel.name\n    }));\n\n  return (\n    <div>\n      <Message info>\n        Obs obs, pass på og alltid dobbeltsjekke scriptet før du bruker det på\n        sending\n      </Message>\n      <Dropdown\n        className=\"dropdown\"\n        placeholder=\"Velg kamp\"\n        fluid\n        search\n        selection\n        loading={loading}\n        options={mapMatches(matches)}\n        onChange={handleOnChange}\n        name=\"selectedMatch\"\n      />\n      <Dropdown\n        className=\"dropdown\"\n        placeholder=\"Velg avsparkstekst\"\n        search\n        selection\n        options={kickOfTexts}\n        onChange={handleOnChange}\n        name=\"matchTimeText\"\n      />\n      <Dropdown\n        className=\"dropdown\"\n        placeholder=\"Velg klokkeslett\"\n        search\n        selection\n        options={createTimes()}\n        onChange={handleOnChange}\n        name=\"matchTime\"\n      />\n      {colors.length > 0 ? (\n        <div>\n          <Dropdown\n            className=\"dropdown\"\n            placeholder=\"Velg farge hjemmelag\"\n            search\n            selection\n            options={colors}\n            onChange={handleOnChange}\n            name=\"colorHome\"\n          />\n\n          <Dropdown\n            className=\"dropdown\"\n            placeholder=\"Velg farge bortelag\"\n            search\n            options={colors}\n            selection\n            onChange={handleOnChange}\n            name=\"colorAway\"\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <Dropdown\n        className=\"dropdown\"\n        placeholder=\"Velg kanal\"\n        fluid\n        search\n        selection\n        multiple\n        defaultValue={defaultChannels}\n        onChange={handleChange}\n        options={mapChannels(allChannels)}\n        name=\"channels\"\n      />\n    </div>\n  );\n};\n\nLiveTeaseGenerator.propTypes = {\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      starttime: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  defaultChannels: PropTypes.arrayOf(PropTypes.number).isRequired,\n  allChannels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      hex: PropTypes.string.isRequired,\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  )\n};\n\nLiveTeaseGenerator.defaultProps = {\n  colors: []\n};\n\nexport default LiveTeaseGenerator;\n","import axios from \"axios\";\n\nclass AltOmFotballMatchService {\n  static getMatches = (tournamentId, seasonId) =>\n    new Promise((resolve, reject) => {\n      axios\n        .get(`/matches/${tournamentId}/${seasonId}`)\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n\n  static getOnlyNotDoneMatches = (tournamentId, seasonId) => {\n    // const self = this.a; // eslint-disable-line\n    return new Promise((resolve, reject) => {\n      axios\n        .get(`/matches/${tournamentId}/${seasonId}`)\n        .then(data => {\n          if (data.data.match) {\n            const filtered = this.filterNotDoneMatches(data.data.match);\n            resolve(filtered);\n          } else {\n            resolve([]);\n          }\n        })\n        .catch(err => reject(err));\n    });\n  };\n\n  static filterNotDoneMatches = matches =>\n    matches.filter(match => match.confirmed !== \"true\");\n\n  static splitNames = (name, delimiter) => {\n    if (name) return name.split(delimiter);\n    return name;\n  };\n\n  static getChannelName = (allChannels, channelId) => {\n    if (!allChannels) throw new Error(\"Please provide a list of channels\");\n    if (allChannels.length === 0) return \"Laster... \";\n    if (!channelId) throw new Error(\"Please provide a channelId\");\n\n    const channelFound = allChannels.find(\n      channel => parseInt(channel.value, 10) === channelId\n    );\n    if (!channelFound)\n      return `Kanal for ID: ${channelId} ble ikke funnet. Du kan legge til en kanal med den ID'en i admin-menyen`;\n\n    return channelFound.name;\n  };\n}\n\nexport default AltOmFotballMatchService;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextArea, Grid, Header, Segment } from \"semantic-ui-react\";\nimport altOmFotballMatchService from \"../../services/altOmFotballMatchService\";\n\nconst LiveTeasePreview = ({\n  allChannels,\n  selectedMatch,\n  matchTime,\n  matchTimeText,\n  channels,\n  homeColor,\n  findColor,\n  awayColor,\n  script\n}) => (\n  <Segment>\n    <Header as=\"h3\">Preview</Header>\n    <Grid columns={2}>\n      <Grid.Column>\n        {selectedMatch ? <p>Kamp valgt: {selectedMatch}</p> : \"\"}\n        {matchTimeText && matchTime ? (\n          <p>\n            Fritekst: {matchTimeText} {matchTime}\n          </p>\n        ) : (\n          \"\"\n        )}\n        {channels && channels.length > 0 ? (\n          <p>\n            Kanal(er):{\" \"}\n            {channels\n              .map(channel =>\n                altOmFotballMatchService.getChannelName(allChannels, channel)\n              )\n              .join(\",\")}\n          </p>\n        ) : (\n          \"\"\n        )}\n        {homeColor && (\n          <p>\n            Farge hjemmelag:{\" \"}\n            <span style={{ background: findColor(homeColor).hex }}>\n              {findColor(homeColor).text}\n            </span>\n          </p>\n        )}\n\n        {awayColor && (\n          <p>\n            Farge bortelag:{\" \"}\n            <span style={{ background: findColor(awayColor).hex }}>\n              {findColor(awayColor).text}\n            </span>\n          </p>\n        )}\n      </Grid.Column>\n      <Grid.Column>\n        <TextArea\n          style={{ width: \"100%\", color: \"#298aef\" }}\n          autoHeight\n          value={script}\n        />\n      </Grid.Column>\n    </Grid>\n  </Segment>\n);\n\nLiveTeasePreview.propTypes = {\n  selectedMatch: PropTypes.string.isRequired,\n  matchTimeText: PropTypes.string.isRequired,\n  matchTime: PropTypes.string.isRequired,\n  channels: PropTypes.arrayOf(PropTypes.number).isRequired,\n  findColor: PropTypes.func,\n  allChannels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  script: PropTypes.string.isRequired,\n  awayColor: PropTypes.string,\n  homeColor: PropTypes.string\n};\n\nLiveTeasePreview.defaultProps = {\n  awayColor: null,\n  homeColor: null,\n  findColor: () => {}\n};\n\nexport default LiveTeasePreview;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Segment, Message} from \"semantic-ui-react\";\nimport LiveTeaseGenerator from \"../LiveTeaseGenerator\";\nimport altOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\nimport LiveTeasePreview from \"../LiveTeasePreview\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ProgramTeaseGeneratorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        matches: [],\n        channels: [5],\n        allChannels: [],\n        matchTimeText: \"\",\n        matchTime: \"\",\n        selectedMatch: \"\"\n      },\n      loading: false\n    };\n    this.service = new FirebaseService();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMatches();\n    this.getChannels();\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const {selectedLeague} = props;\n    if (selectedLeague) {\n      const [id, season] = selectedLeague.split(\"-\");\n      this.getMatches(id, season);\n    }\n  }\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  getMatches = (tournamentId, seasonId) => {\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data\n      },\n      loading: true\n    }));\n    if (!tournamentId || !seasonId) {\n      return;\n    }\n    altOmFotballMatchService\n      .getOnlyNotDoneMatches(tournamentId, seasonId)\n      .then(data => {\n        this.setState(prevState => ({\n          ...prevState,\n          data: {\n            ...prevState.data,\n            matches: data\n          },\n          loading: false\n        }));\n      })\n      .catch(() => {\n        this.setState(prevState => ({\n          ...prevState,\n          error: \"Kunne ikke hente kamper fra AltomFotball\",\n          loading: false\n        }));\n      });\n  };\n\n  createScript = () => {\n    const {data} = this.state;\n    const [home, away] = altOmFotballMatchService.splitNames(\n      data.selectedMatch,\n      \"-\"\n    );\n    const channel = data.channels[0] ? data.channels[0] : \"INGEN KANAL VALGT\";\n    return `Super S18 ${channel}\n${data.matchTimeText || \"Tekst ikke valgt\"}\n${data.matchTime || \"Tid ikke valgt\"}\nPremier League\n${home || \"Hjemmelag ikke valgt\"} - ${away ||\n      \"Bortelag ikke valgt\"}<00:01-00:15`;\n  };\n\n  handleChange = ({value, name}) =>\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data,\n        [name]: value\n      }\n    }));\n\n  processChannels = allChannels =>\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data,\n        allChannels\n      }\n    }));\n\n  render() {\n    const script = this.createScript();\n    const {\n      matches,\n      channels,\n      selectedMatch,\n      matchTimeText,\n      matchTime,\n      allChannels\n    } = this.state.data;\n    if (this.state.loading) {\n      return <p>Henter kamper...</p>;\n    }\n    if (matches.length === 0 && !this.state.loading) {\n      return (\n        <Message info>\n          <Message.Header>Info</Message.Header>\n          Ingen kamper tilgjengelig\n        </Message>\n      );\n    }\n    return (\n      <Segment>\n        <LiveTeaseGenerator\n          matches={matches}\n          defaultChannels={channels}\n          allChannels={allChannels}\n          handleChange={this.handleChange}\n          loading={this.state.loading}\n        />\n        <LiveTeasePreview\n          selectedMatch={selectedMatch}\n          matchTimeText={matchTimeText}\n          matchTime={matchTime}\n          channels={channels}\n          allChannels={allChannels}\n          script={script}\n        />\n      </Segment>\n    );\n  }\n}\n\nProgramTeaseGeneratorContainer.propTypes = {\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default ProgramTeaseGeneratorContainer;\n","const path = \"IMAGE*Onair/Sport/Fotball/Premier_League/2016/Badges/Highres/\";\nconst badges = [\n  {\n    team: \"ARSENAL\",\n    path: `${path}ARSENAL`,\n  },\n\n  {\n    team: \"BOURNEMOUTH\",\n    path: `${path}BOURNEMOUTH`,\n  },\n\n  {\n    team: \"BRIGHTON\",\n    path: `${path}Brighton`,\n  },\n\n  {\n    team: \"BURNLEY\",\n    path: `${path}BURNLEY`,\n  },\n\n  {\n    team: \"CHELSEA\",\n    path: `${path}CHELSEA`,\n  },\n\n  {\n    team: \"CRYSTAL PALACE\",\n    path: `${path}CRYSTAL_PALACE`,\n  },\n\n  {\n    team: \"EVERTON\",\n    path: `${path}EVERTON`,\n  },\n\n  {\n    team: \"Huddersfield\",\n    path: `${path}Huddersfield`,\n  },\n\n  {\n    team: \"HULL\",\n    path: `${path}HULL`,\n  },\n\n  {\n    team: \"LEICESTER\",\n    path: `${path}LEICESTER`,\n  },\n\n  {\n    team: \"LIVERPOOL\",\n    path: `${path}LIVERPOOL`,\n  },\n\n  {\n    team: \"MANCHESTER CITY\",\n    path: `${path}MAN_CITY`,\n  },\n\n  {\n    team: \"MANCHESTER UNITED\",\n    path: `${path}MAN_UTD`,\n  },\n\n  {\n    team: \"MIDDLESBROUGH\",\n    path: `${path}MIDDLESBROUGH`,\n  },\n\n  {\n    team: \"Newcastle\",\n    path: `${path}Newcastle`,\n  },\n\n  {\n    team: \"SOUTHAMPTON\",\n    path: `${path}SOUTHAMPTON`,\n  },\n\n  {\n    team: \"STOKE\",\n    path: `${path}STOKE`,\n  },\n\n  {\n    team: \"SUNDERLAND\",\n    path: `${path}SUNDERLAND`,\n  },\n\n  {\n    team: \"SWANSEA\",\n    path: `${path}SWANSEA`,\n  },\n\n  {\n    team: \"TOTTENHAM\",\n    path: `${path}TOTTENHAM`,\n  },\n\n  {\n    team: \"WATFORD\",\n    path: `${path}WATFORD`,\n  },\n\n  {\n    team: \"WEST BROMWICH\",\n    path: `${path}WEST_BROM`,\n  },\n  {\n    team: \"WOLVERHAMPTON\",\n    path: `${path}WOLVERHAMPTON`,\n  },\n  {\n    team: \"FULHAM\",\n    path: `${path}FULHAM`,\n  },\n  {\n    team: \"CARDIFF\",\n    path: `${path}CARDIFF`,\n  },\n\n  {\n    team: \"WEST HAM\",\n    path: `${path}WEST_HAM`,\n  },\n];\n\nexport default badges;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Message, Segment} from \"semantic-ui-react\";\nimport LiveTeaseGenerator from \"../LiveTeaseGenerator\";\nimport LiveTeasePreview from \"../LiveTeasePreview\";\nimport badges from \"../../../Data/badgePaths\";\nimport altOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass LiveTeaseGeneratorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {match: []},\n      selectedMatch: \"\",\n      matchTimeText: \"\",\n      matchTime: \"\",\n      channels: [5, 10],\n      allChannels: [],\n      colorHome: \"\",\n      colorAway: \"\",\n      colors: [],\n      script: \"\",\n      loading: false,\n      error: \"\",\n      leagueSelected: {\n        tournamentId: \"\",\n        seasonId: \"\"\n      }\n    };\n    this.service = new FirebaseService();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLeagues();\n    this.getChannels();\n    this.getColors();\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const {selectedLeague} = props;\n    if (selectedLeague) {\n      const [id, season] = selectedLeague.split(\"-\");\n      this.getLeagues(id, season);\n    }\n  }\n\n  getColors = () => {\n    this.service.getColors(colors => {\n      this.setState({colors});\n    });\n  };\n\n  getLeagues = (tournamentId, seasonId) => {\n    if (!tournamentId || !seasonId) {\n      return;\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data\n      },\n      loading: true\n    }));\n    this.getMatches(tournamentId, seasonId);\n  };\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  getMatches = (tournamentId, seasonId) => {\n    altOmFotballMatchService\n      .getOnlyNotDoneMatches(tournamentId, seasonId)\n      .then(data => {\n        this.setState({\n          data: {match: data},\n          loading: false,\n          error: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          data: {},\n          loading: false,\n          error:\n            \"Det var et problem ved henting av kamper. Sjekk at du er koblet til internett\"\n        });\n      });\n  };\n\n  getGenerator = (matches, script) => (\n    <Segment>\n      <LiveTeaseGenerator\n        matches={matches}\n        handleChange={this.handleChange}\n        defaultChannels={this.state.channels}\n        loading={this.state.loading}\n        colors={this.state.colors}\n        allChannels={this.state.allChannels}\n      />\n      <LiveTeasePreview\n        selectedMatch={this.state.selectedMatch}\n        matchTimeText={this.state.matchTimeText}\n        matchTime={this.state.matchTime}\n        channels={this.state.channels}\n        allChannels={this.state.allChannels}\n        script={script}\n        awayColor={this.state.colorAway}\n        homeColor={this.state.colorHome}\n        findColor={this.findColor}\n      />\n    </Segment>\n  );\n\n  getBadgePath = team => {\n    const badgeFound = badges.find(\n      badge => badge.team.toLowerCase() === team.toLowerCase()\n    );\n    if (badgeFound) return badgeFound;\n    return {path: \"IKKE RIKTIG BADGE\"};\n    // throw new Error(`Could not find badge for ${team}`);\n  };\n\n  getChannelName = channel => {\n    const found = this.state.allChannels.find(ch => ch.value === channel);\n    if (found) return found.name;\n    throw new Error(`Could not find a channel number for ${channel}`);\n  };\n\n  getScriptColor = colorKey => this.findColor(this.state[colorKey]).value;\n\n  formatChannels = (formattingChannels, text) => {\n    let formattedChannels = [...formattingChannels];\n    if (formattingChannels.length === 0) return \"INGEN KANALER VALGT\";\n    // If only one channel is chosen, add a 0 to end of channel list because of how iNews script works\n    if (formattedChannels.length === 1) formattedChannels.push(0);\n\n    // If text is not equal to {avspark kl.} then remove all channels, except first, and add 0 to end of channel list\n    if (!text.includes(\"Avspark kl.\")) {\n      formattedChannels = [formattingChannels[0], 0];\n    }\n    return formattedChannels.join(\"\\n\");\n  };\n\n  createScript = () => {\n    const {\n      selectedMatch: match,\n      matchTimeText: text,\n      matchTime: time,\n      channels: tvChannels\n    } = this.state;\n    if (!match) return \"\";\n\n    // TODO Refactor this check for if we can split the match string in two pieces\n    if (match.split(\"-\").length < 2) return match;\n    const teams = match.split(\"-\");\n    const homeTeam = this.formatName(teams[0]);\n    const awayTeam = this.formatName(teams[1]);\n    const homeBadge = this.getBadgePath(homeTeam);\n    const awayBadge = this.getBadgePath(awayTeam);\n\n    return `*SUPER Kamp_Promo_v2 ${homeTeam}\n${homeBadge.path}\n${this.getScriptColor(\"colorHome\")}\n${awayTeam}\n${awayBadge.path}\n${this.getScriptColor(\"colorAway\")}\n${text.trim()} ${time.trim()}\n${this.formatChannels(tvChannels, text.trim())}\nPREMIER LEAGUE <00:02-00:15`;\n  };\n\n  formatName = name => name.replace(\"_\", \"\");\n\n  findColor = value => {\n    const color = this.state.colors.find(c => c.value === value);\n    if (color) return color;\n    return {text: \"FARGE IKKE FUNNET\", hex: \"\", value: \"FARGE IKKE FUNNET\"};\n  };\n\n  handleChange = ({name, value}) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  processChannels = allChannels => this.setState({allChannels});\n\n  render() {\n    if (this.state.loading) {\n      return <p>Henter kamper...</p>;\n    }\n    if (this.state.data.match.length === 0 && !this.state.loading) {\n      return (\n        <Message info>\n          <Message.Header>Info</Message.Header>\n          Ingen kamper tilgjengelig\n        </Message>\n      );\n    }\n    if (this.state.error) {\n      return <Message warning>{this.state.error}</Message>;\n    }\n\n    let {match: matches} = this.state.data;\n    if (!matches) {\n      matches = [];\n    }\n\n    const script = this.createScript();\n    const generator = this.getGenerator(matches, script);\n    return <Segment>{generator}</Segment>;\n  }\n}\nLiveTeaseGeneratorContainer.propTypes = {\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default LiveTeaseGeneratorContainer;\n","import React, {Component} from \"react\";\nimport PremierLeagueToolsView from \"../../../Views/PremierLeagueToolsView\";\nimport ProgramTeaseGeneratorContainer from \"./ProgramTeaseGeneratorContainer\";\nimport LiveTeaseGeneratorContainer from \"./LiveTeaseGeneratorContainer\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\nimport AltOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\n\nclass GraphicsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeItem: \"liveinfo\",\n      selectedLeague: \"\",\n      leagues: []\n    };\n    this.getTypeOfGraphicComponents = this.getTypeOfGraphicComponents.bind(\n      this\n    );\n    this.service = altOmFotballLeagueService;\n    this.matchService = AltOmFotballMatchService;\n    this.mapLeagues = this.mapLeagues.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLeagues();\n  }\n\n  getTypeOfGraphicComponents = type => {\n    switch (type.toLowerCase()) {\n      case \"liveinfo\":\n        return (\n          <LiveTeaseGeneratorContainer\n            selectedLeague={this.state.selectedLeague}\n          />\n        );\n      case \"s18teasesuper\":\n        return (\n          <ProgramTeaseGeneratorContainer\n            selectedLeague={this.state.selectedLeague}\n          />\n        );\n      default:\n        return <p>Lol</p>;\n    }\n  };\n\n  setSelectedLeague = selectedLeague => {\n    this.setState({selectedLeague});\n  };\n\n  getLeagues() {\n    this.service.getAllLeagues().then(data => {\n      this.setState({leagues: data.data.tournament});\n    });\n  }\n\n  updateActiveItem = item => {\n    this.setState({activeItem: item});\n  };\n\n  mapLeagues = leagues =>\n    leagues.map(league => ({\n      key: league.id + league.name,\n      value: `${league.id}-${this.service.getActiveSeasonNumber(\n        league.activeseason[\"@uri\"]\n      )}`,\n      text: league.name\n    }));\n\n  render() {\n    const element = this.getTypeOfGraphicComponents(this.state.activeItem);\n    const mappedLeagues = this.mapLeagues(this.state.leagues);\n    return (\n      <PremierLeagueToolsView\n        activeItem={this.state.activeItem}\n        updateActiveItem={this.updateActiveItem}\n        graphicComponent={element}\n        setSelectedLeague={this.setSelectedLeague}\n        selectedLeague={this.state.selectedLeague}\n        leagues={mappedLeagues}\n      />\n    );\n  }\n}\nexport default GraphicsContainer;\n","import React, {Component} from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport FrontpageView from \"./Views/FrontpageView\";\nimport MainView from \"./Views/MainView\";\nimport RoundView from \"./Views/RoundView\";\nimport DangerzoneView from \"./Views/DangerzoneView\";\nimport FantasyView from \"./Views/FantasyView\";\nimport DetailedPlayerView from \"./Views/DetailedPlayerView\";\nimport GigSportsView from \"./Views/GigSportsView\";\nimport AdminView from \"./Views/AdminView\";\nimport NewUserView from \"./Views/NewUserView\";\nimport AboutView from \"./Views/AboutView\";\nimport FantasyStatsView from \"./Views/FantasyStatsView\";\nimport My404NotFound from \"./Views/My404NotFound\";\nimport FirebaseService from \"./services/FirebaseService\";\nimport GraphicsContainer from \"./Components/PremierLeagueTools/Containers/GraphicsContainer\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-58175708-2\");\n  ReactGA.pageview(\"/forside\");\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leagueName: \"\",\n      tournamentId: \"\",\n      seasonId: \"\",\n      leagues: [],\n      loading: true,\n      error: \"\"\n    };\n    initializeReactGA();\n    this.service = new FirebaseService();\n  }\n\n  componentDidMount() {\n    this.service.getLeagues(this.processLeagues);\n  }\n\n  processLeagues = leagues => this.setState({leagues, loading: false});\n\n  switchLeagueName = (leagueName, tournamentId, seasonId) => {\n    this.setState({leagueName, tournamentId, seasonId});\n  };\n\n  render() {\n    return (\n      <Container>\n        <HashRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={props => (\n                <FrontpageView\n                  switchLeagueName={this.switchLeagueName}\n                  leagueInfo={this.state}\n                  leagues={this.state.leagues}\n                  {...props}\n                  loading={this.state.loading}\n                  error={this.state.error}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/league/:leagueName/:tournamentId/:seasonId\"\n              component={props => <MainView {...props} />}\n            />\n            <Route\n              exact\n              path=\"/league/:tournamentId/:seasonId/:leagueName/round/:roundNumber/roundId/:roundId/nextRound/:nextRoundId\"\n              render={props => (\n                <RoundView\n                  tournamentId={this.state.tournamentId}\n                  seasonId={this.state.seasonId}\n                  leagueName={this.state.leagueName}\n                  switchLeagueName={this.switchLeagueName}\n                  {...props}\n                />\n              )}\n            />\n            <Route exact path=\"/dangerzone/\" component={DangerzoneView} />\n            <Route exact path=\"/fantasy/\" component={FantasyView} />\n            <Route exact path=\"/fantasy/stats\" component={FantasyStatsView} />\n            <Route\n              exact\n              path=\"/fantasy/player/:playerId\"\n              component={DetailedPlayerView}\n            />\n            <Route exact path=\"/gigsports/\" component={GigSportsView} />\n            <Route exact path=\"/premierleague/\" component={GraphicsContainer} />\n            <Route exact path=\"/admin/\" component={AdminView} />\n            <Route exact path=\"/newuser\" component={NewUserView} />\n            <Route exact path=\"/about/\" component={AboutView} />\n            <Route path=\"*\" exact component={My404NotFound} />\n          </Switch>\n        </HashRouter>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport default function register() {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available; please refresh.\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get(\"content-type\").indexOf(\"javascript\") ===\n\t\t\t\t\t-1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Raven from \"raven-js\";\n\nimport \"./index.css\";\nimport \"./print.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nif (process.env.NODE_ENV !== \"development\") {\n  Raven.config(\n    \"https://6804db3180e14d51a1da9c443b1a288c@sentry.io/1280627\",\n  ).install();\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}
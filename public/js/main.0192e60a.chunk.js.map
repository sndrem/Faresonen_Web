{"version":3,"sources":["Components/Menu/FaresoneMenu.js","Components/ProcedureSteps/FirstSteps.js","services/altOmFotballLeagueService.js","Components/LeagueChooser/LeagueChooser.js","Views/FrontpageView.js","Components/RoundButtons/RoundButtons.js","Components/RoundList/RoundList.js","Components/RoundList/Containers/RoundListContainer.js","Components/ProcedureSteps/Steps.js","Views/MainView.js","Tools/events.js","Components/LeagueProgress/LeagueProgress.js","Data/teamColors.js","Tools/tools.js","Components/NextMatches/NextMatchInfo.js","Components/NextMatches/NextMatches.js","Components/Matches/FinishedMatchElements.js","Components/Matches/FinishedMatches.js","Components/LeagueTable/LeagueTableItem.js","Components/LeagueTable/LeagueTable.js","Components/Topscorers/Topscorers.js","Components/Topscorers/Containers/TopscorersContainer.js","Components/ProcedureSteps/RoundSteps.js","Components/Dangerzone/Dangerzone.js","services/dangerzoneService.js","Components/Dangerzone/Containers/DangerzoneContainer.js","Components/Matches/MatchInfo.js","Components/Matches/Containers/MatchInfoContainer.js","Components/Matches/Matches.js","Components/Dangerzone/Containers/MatchesContainer.js","Views/RoundView.js","Components/Dangerzone/DangerzoneSearch.js","Components/Dangerzone/DangerZoneAccumulator.js","Components/Dangerzone/DangerzoneStatistics.js","services/playerLocalStorageService.js","Views/DangerzoneView.js","Components/FantasyPl/FantasyPlayerFilter.js","Components/FantasyPl/FantasyPlayerAnchor.js","Components/FantasyPl/FantasyPlayers.js","Components/FantasyPl/Containers/FantasyContainer.js","Views/FantasyView.js","Components/PlayerStats/PlayerProfile.js","Components/PlayerStats/Containers/PlayerStatsContainer.js","Views/DetailedPlayerView.js","Tools/Abbreviations.js","Components/Feeds/MatchFeed.js","Components/Filters/DateFilter.js","Views/GigSportsView.js","databaseConfig/firebaseConfig.js","Components/Admin/LogInAdmin.js","Components/Admin/Containers/AddLeaguesContainer.js","Components/Admin/Containers/RemoveLeaguesContainer.js","services/FirebaseService.js","Components/Admin/Containers/LeaguesContainer.js","Data/premierLeagueDefaultColors.js","Components/Admin/NewColorForm.js","Components/Admin/EditColors.js","Components/Admin/Containers/ColorContainer.js","Components/Admin/NewChannelForm.js","Components/Admin/EditChannels.js","Components/Admin/Containers/ChannelContainer.js","Components/Admin/LeagueAdmin.js","Components/Admin/Containers/AdminContainer.js","Views/AdminView.js","Components/NewUser/NewUserForm.js","Components/NewUser/Containers/NewUserContainer.js","Views/NewUserView.js","Components/Accordion/AboutAccordion.js","Views/AboutView.js","Components/FantasyStats/FantasyStatsList.js","services/FantasyStatsService.js","Components/FantasyStats/Containers/FantasyStatsContainer.js","Views/FantasyStatsView.js","Views/My404NotFound.js","Components/PremierLeagueTools/TypeOfGraphicSubMenu.js","Components/PremierLeagueTools/SelectLeague.js","Components/PremierLeagueTools/Containers/SelectLeagueContainer.js","Views/PremierLeagueToolsView.js","Data/kickOfTexts.js","Components/PremierLeagueTools/LiveTeaseGenerator.js","services/altOmFotballMatchService.js","Components/PremierLeagueTools/LiveTeasePreview.js","Components/PremierLeagueTools/Containers/ProgramTeaseGeneratorContainer.js","Data/badgePaths.js","Components/PremierLeagueTools/Containers/LiveTeaseGeneratorContainer.js","Components/PremierLeagueTools/Containers/GraphicsContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["FaresoneMenu","react_default","a","createElement","className","Menu","inverted","Item","as","href","name","Dropdown","item","text","position","FirstSteps","Step","Group","active","Icon","Content","Title","Description","disabled","altOmFotballLeagueService","getAllLeagues","axios","post","max","sportId","filterImportant","getLeagueData","id","Error","concat","get","getActiveSeasonData","url","getActiveSeasonNumber","match","error","LeagueChooser","props","leagues","map","league","activeSeason","activeseason","Grid","Column","key","Card","header","description","length","columns","Message","info","Header","FrontpageView","_ref","switchLeagueName","loading","Object","objectWithoutProperties","Menu_FaresoneMenu","ProcedureSteps_FirstSteps","Components_LeagueChooser_LeagueChooser","assign","RoundButtons","getNextRoundId","rounds","index","createRoundButtons","round","array","endDate","enddate","nextRoundId","_this","finished","now","button","createRoundButton","List","createUrl","roundInfo","tournamentId","seasonId","leagueName","roundNo","createFinishedButton","createNotFinishedButton","moment","startdate","format","arguments","undefined","this","Component","RoundList","Segment","Dimmer","Loader","Components_RoundButtons_RoundButtons","Date","toISOString","RoundListContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRounds","then","data","setState","catch","state","_this$props","nextProps","_this$props2","Components_RoundList_RoundList","Steps","completed","MainView","_props$match$params","params","ProcedureSteps_Steps","centered","Containers_RoundListContainer","parseInt","Tools_events","goalInPlay","penaltyGoal","ownGoal","postponed","ended","LeagueProgress","getMatchUris","r","matches","roundHasPostponedMatches","some","m","status","events","includes","roundHasFinishedMatches","_useState","useState","_useState2","slicedToArray","setFinished","_useState3","_useState4","total","setTotal","useEffect","calculateRounds","promises","Promise","resolve","reject","all","filteredMatches","reduce","obj","matchData","every","confirmed","left","err","removeFinishedRounds","_ref2","Progress","color","progress","value","teamColors","Arsenal","primaryColor","secondaryColor","Bournemouth","Brighton","Burnley","Chelsea","Crystal_Palace","Everton","Huddersfield","Leicester","Liverpool","Manchester_City","Manchester_United","Newcastle","Southampton","Stoke","Swansea","Tottenham","Watford","West_Bromwich","West_Ham","tools","getChannelAndStadium","channel","getChannel","stadium","getStadium","referee","getReferee","getDate","datetime","toLocaleDateString","getTime","toLocaleTimeString","getTableColors","leagueId","greens","reds","getTeamColors","teamName","underscoreName","replace","colors","getPersonData","personUrl","getMultiplePersonData","players","p","player","event","getMemberships","extractPersonId","res","exec","NextMatchInfo","matchInfo","nextRoundNumber","date","starttime","time","spread","Table","Row","Cell","NextMatches","NextMatches_NextMatchInfo","striped","HeaderCell","Body","FinishedMatchElements","_FinishedMatchElement","splitGameName","_FinishedMatchElement2","home","away","goalScorersHomeTeam","goalScorersAwayTeam","goalEvents","e","list","prevElementA","goalsTeamA","prevElementB","goalsTeamB","previousHomeScore","previousAwayScore","homeScore","awayScore","push","filter","eventType","eventtype","extendedEventType","extendedeventtype","goalWasGoalInPlay","goalWasPenalty","goalWasOwnGoal","uri","split","scorers","scorer","person1","firstname","lastname","eventTime","eventtime","forEach","s","groupedScorers","groupScorers","keys","formatIndividualGoalScorer","join","getNameOfPerson","getGoals","eventUri","_this2","filteredGoalEvents","filterGoalEvents","calculatedEvents","calculateHomeAndAwayEvents","extractPersonNames","_this$state","homeScorers","formatGoalScoreText","awayScorers","size","goalsTeamAEndtime","goalsTeamBEndtime","Divider","FinishedMatches","finishedMatchElements","Matches_FinishedMatchElements","roundNumber","LeagueTableItem","tableData","teamData","getTeamData","team","rowColor","wins","draws","losses","goalsFor","goalsAgainst","goalDifference","points","defaultProps","LeagueTable","tableColors","_ref$table","table","setLeagueName","setLoading","getLeagueName","tournament","tournamentUri","tableElements","t","LeagueTable_LeagueTableItem","createLeagueTableItems","Topscorers","negative","topscorers","ts","place","value1","value2","value3","TopscorersContainer","slice","Components_Topscorers_Topscorers","RoundSteps","Dangerzone","dangerzoneService","getPlayersWithYellowCards","sortTeams","sort","b","localeCompare","filterPlayers","yellowCards","groupPlayers","elem","groupPlayersArrayResponse","fromObjectToArray","objects","DangerzoneContainer","yellowCardResponse","playersGrouped","Components_Dangerzone_Dangerzone","MatchInfo","matchName","startDate","startTime","Meta","@uri","MatchInfoContainer","ref","trim","refUri","_this3","formatRefereeName","Matches_MatchInfo","Matches","nextMatches","Containers_MatchInfoContainer","padded","MatchesContainer","Components_Matches_Matches","RoundView","getRound","roundId","finishedMatches","_this$setState","_this$setState2","filterFinishedMatches","defineProperty","_this$setState3","_this$props$match$par","_this$props$match$par2","_this$props$match$par3","getTable","finishedMatchesElement","Matches_FinishedMatches","ProcedureSteps_RoundSteps","Components_LeagueProgress_LeagueProgress","Containers_MatchesContainer","Components_LeagueTable_LeagueTable","Components_NextMatches_NextMatches","Containers_TopscorersContainer","Containers_DangerzoneContainer","DangerzoneSearch","formatPlayers","createTeamElements","teams","content","handleSearch","search","target","eliteserien","obosligaen","_nextProps$players","filteredPlayers","filtered","toLowerCase","eliteserienSearchFilter","searchFilter","eliteserieElements","obosLigaenSearchFilter","obosligaElements","Form","Field","htmlFor","placeholder","onChange","DangerZoneAccumulator","getInfoMessage","onClick","showModal","icon","removeFeedEvent","removeEventFromState","removePlayer","removeEvent","findIndex","splice","prevState","sortEvents","realTime","elements","Feed","Event","Summary","User","fromNow","Like","Modal","trigger","DangerzoneStatistics","Statistic","widths","Value","Label","socketConnected","playerLocalStorageService","getFromLocalStorage","items","JSON","parse","localStorage","getItem","lastUpdated","localStoragePlayersIsEmpty","_playerLocalStorageSe","playersInLocalStorageExists","saveToLocalStorage","updatedPlayers","setItem","stringify","socket","openSocket","DangerzoneView","setupSocket","open","on","Array","isArray","_this$state$data","merged","personId","find","objectSpread","setDefaultState","getPlayers","overwrite","_data$data","hideModal","handleCancel","_JSON$parse","handleConfirm","_this$state$data2","found","indexOf","close","_this$state$data3","Confirm","cancelButton","confirmButton","onCancel","onConfirm","Dangerzone_DangerzoneStatistics","Dangerzone_DangerzoneSearch","Dangerzone_DangerZoneAccumulator","FantasyPlayerFilter","handleNameSearch","setNameFilter","handlePriceSearch","isNaN","setPriceFilter","parseFloat","handleDreamTeamFilter","setDreamTeamFilter","checked","type","step","Checkbox","label","FantasyPlayerAnchor","inDreamTeam","firstName","secondName","role","tabIndex","FantasyPlayers","handleOpen","values","first_name","Components_FantasyPl_FantasyPlayerAnchor","second_name","in_dreamteam","image","Image","wrapped","src","photo","now_cost","total_points","selected_by_percent","news","chancee_of_playing_next_round","FantasyContainer","getTeams","filters","nameFilter","priceFilter","onlyDreamTeam","filterTeams","teamCopy","mergeName","formatPrice","first","last","price","groupTeams","teamToFind","code","team_code","groupedTeams","teamA","teamB","warning","Components_FantasyPl_FantasyPlayerFilter","FantasyPl_FantasyPlayers","FantasyView","Containers_FantasyContainer","PlayerProfile","chanceOfPlayingNextRound","cost","selectedBy","PlayerStatsContainer","componentDidMount","playerId","getTeam","teamId","mapStats","goals_scored","assists","points_per_game","minutes","influence","creativity","form","bonus","PlayerStats_PlayerProfile","chance_of_playing_next_round","DetailedPlayerView","Containers_PlayerStatsContainer","Abbreviations","getAbbreviations","abbrev","eliteserieAbbr","obosligaAbbr","Kristiansund","Molde","Lillestrøm","Sandefjord","Sarpsborg 08","Stabæk","Strømsgodset","Haugesund","Tromsø","Brann","Rosenborg","Odd","Vålerenga","Start","Ranheim","Bodø/Glimt","Aalesund","Notodden","Tromsdalen","Åsane","Florø","Jerv","Mjøndalen","HamKam","Sogndal","Strømmen","Sandnes Ulf","Nest-Sotra","Ullensaker/Kisa","Viking","Levanger","Kongsvinger","MatchFeed","getBestBetColor","bet","createBetCell","bestBet","cssColor","width","formatPercent","betsNotReadyElement","matchId","homeTeamName","awayTeamName","start","createElements","bets","_m$bets$oddsMarkets$","oddsMarkets","homeValue","drawValue","awayValue","toFixed","formatFreeText","abbrevs","homeTeamAbbrev","awayTeamAbbrev","homeTeamBet","drawBet","awayTeamBet","freeText","TextArea","autoHeight","DateFilter","handleChange","preventDefault","updateDate","GigSportsView","extractLeague","competitions","addHours","hour","add","filterMatchesByDate","toDateString","connectGamesAndBets","foundBet","connectedMatch","fetchMatches","fetch","gigDomain","response","json","updateError","fetchBets","dateFilter","message","process","document","title","feed","eliteserieBets","obosligaBets","Filters_DateFilter","Components_Feeds_MatchFeed","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","LogInAdmin","email","setEmail","pwd","setPwd","_useState5","_useState6","setError","required","autoComplete","style","display","Button","firebaseConfig","auth","signInWithEmailAndPassword","AddLeaguesContainer","addLeagues","leagueData","d","setSelectedLeagues","saveLeagues","selectedLeagues","saveSelectedLeagues","altOmFotballLeagues","fluid","multiple","selection","options","RemoveLeaguesContainer","removeLeague","dataset","data-id","FirebaseService","getLeagues","cb","database","snapshot","mapLeaguesToList","val","updateLeague","set","console","warn","log","remove","getColors","addColor","removeFirebaseSpecializedCharacters","char","removeColor","addChannel","removeChannel","getChannels","LeaguesContainer","service","processLeagues","getAltOmFotballLeagues","bind","assertThisInitialized","Containers_AddLeaguesContainer","Admin_Containers_RemoveLeaguesContainer","premierLeagueDefaultColors","NewColorForm","constructColorObject","hex","number","saveColor","forms","colorForm","checkValidity","_this$props$color","colorObject","colorKey","valid","formIsValid","handleColorChange","_this$props$color2","onSubmit","Input","react_color_lib","presetColors","resetForm","EditColors","editColor","deleteColor","fontWeight","height","backgroundColor","border","borderRadius","flexDirection","ColorContainer","processColors","setColor","selectedColor","hexColor","Admin_NewColorForm","Admin_EditColors","NewChannelForm","_ref$selectedChannel","selectedChannel","handleChangeAndValidateForm","channelForm","min","EditChannels","channels","editChannel","deleteChannel","maxHeight","overflowY","ChannelContainer","processChannels","sortChannels","channelId","Admin_NewChannelForm","Admin_EditChannels","LeagueAdmin","getMenuComponent","component","menuComponents","logOut","signOut","handleItemClick","activeItem","ligaer","Containers_LeaguesContainer","farger","Containers_ColorContainer","kanaler","Containers_ChannelContainer","menuComponent","tabular","AdminContainer","user","authListener","onAuthStateChanged","Admin_LeagueAdmin","Admin_LogInAdmin","AdminView","Container","Containers_AdminContainer","FormErrors","errors","NewUserForm","formErrors","NewUserForm_FormErrors","NewUserContainer","password","confirmedPassword","createUserWithEmailAndPassword","_this$state2","NewUser_NewUserForm","React","NewUserView","Containers_NewUserContainer","AboutAccordion","activeIndex","setActiveIndex","handleClick","titleProps","newIndex","calculateNewIndex","Accordion","AboutView","Accordion_AboutAccordion","FantasyStatsList","FantasyStatsService","getMostSelectedPlayers","limit","selectedPlayers","selectA","selectB","getMostExpensivePlayer","FantasyStatsContainer","getMostExpensivePlayers","expensivePlayers","toConsumableArray","formatErrors","FantasyStats_FantasyStatsList","FantasyStatsView","Containers_FantasyStatsContainer","My404NotFound","TypeOfGraphicSubMenu","updateActiveItem","link","SelectLeague","setSelectedLeague","selectedLeague","SelectLeagueContainer","PremierLeagueTools_SelectLeague","PremierLeagueToolsView","graphicComponent","PremierLeagueTools_TypeOfGraphicSubMenu","Containers_SelectLeagueContainer","today","tomorrow","monday","tuesday","thursday","friday","sunday","kickOfTexts","LiveTeaseGenerator","createTimes","times","i","y","padTime","toString","mapMatches","tz","setDefault","from","mapChannels","defaultValue","defaultChannels","allChannels","AltOmFotballMatchService","getMatches","getOnlyNotDoneMatches","self","filterNotDoneMatches","splitNames","delimiter","getChannelName","channelFound","LiveTeasePreview","selectedMatch","matchTime","matchTimeText","homeColor","findColor","awayColor","script","altOmFotballMatchService","background","ProgramTeaseGeneratorContainer","createScript","_altOmFotballMatchSer","_altOmFotballMatchSer2","_selectedLeague$split","_selectedLeague$split2","season","Components_PremierLeagueTools_LiveTeaseGenerator","PremierLeagueTools_LiveTeasePreview","path","badges","LiveTeaseGeneratorContainer","getGenerator","colorAway","colorHome","getBadgePath","badgeFound","badge","ch","getScriptColor","formatChannels","formattingChannels","formattedChannels","tvChannels","homeTeam","formatName","awayTeam","homeBadge","awayBadge","c","leagueSelected","generator","GraphicsContainer","getTypeOfGraphicComponents","Containers_LiveTeaseGeneratorContainer","Containers_ProgramTeaseGeneratorContainer","mapLeagues","matchService","element","mappedLeagues","Views_PremierLeagueToolsView","App","ReactGA","initialize","pageview","es","exact","Views_FrontpageView","leagueInfo","Views_MainView","render","Views_RoundView","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Raven","config","install","ReactDOM","src_App","getElementById","URL","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0192e60a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Menu, Dropdown} from \"semantic-ui-react\";\n\nconst FaresoneMenu = () => (\n  <div className=\"no-print\">\n    <Menu inverted>\n      <Menu.Item as=\"a\" href=\"#/\" name=\"home\">\n        Hjem\n      </Menu.Item>\n      <Menu.Item as=\"a\" href=\"#/dangerzone\" name=\"dangerzone\">\n        Faresonen\n      </Menu.Item>\n      <Menu.Item as=\"a\" href=\"#/gigsports\" name=\"gigsports\">\n        GIG Sports\n      </Menu.Item>\n\n      <Menu.Item as=\"a\" href=\"#/fantasy\" name=\"fantasy\">\n        Fantasy PL\n      </Menu.Item>\n      <Menu.Item as=\"a\" href=\"#/fantasy/stats\" name=\"fantasystats\">\n        Statistikk\n      </Menu.Item>\n      <Menu.Item as=\"a\" href=\"#/premierleague\" name=\"premierleague\">\n        Premier League-verktøy\n      </Menu.Item>\n      <Dropdown item text=\"Admin\">\n        <Dropdown.Menu>\n          <Dropdown.Item text=\"Logg inn\" as=\"a\" href=\"#/admin\" name=\"admin\" />\n          <Dropdown.Item\n            text=\"Opprett ny bruker\"\n            as=\"a\"\n            href=\"#/newuser\"\n            name=\"newuser\"\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Menu.Item position=\"right\" as=\"a\" href=\"#/about\" name=\"about\">\n        Om\n      </Menu.Item>\n    </Menu>\n  </div>\n);\n\nexport default FaresoneMenu;\n","import React from \"react\";\nimport {Icon, Step} from \"semantic-ui-react\";\n\nconst FirstSteps = () => (\n  <Step.Group>\n    <Step active>\n      <Icon name=\"soccer\" />\n      <Step.Content>\n        <Step.Title>Velg liga</Step.Title>\n        <Step.Description>\n          Hvilken liga skal du generere lefse for?\n        </Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"numbered list\" />\n      <Step.Content>\n        <Step.Title>Velg runde</Step.Title>\n        <Step.Description>Hvilken runde gjelder lefsen for?</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"print\" />\n      <Step.Content>\n        <Step.Title>Print</Step.Title>\n        <Step.Description>Ctrl + P for å printe lefsen</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"cocktail\" />\n      <Step.Content>\n        <Step.Title>Bra jobbet</Step.Title>\n        <Step.Description>Ta deg en velfortjent pause!</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default FirstSteps;\n","// @flow\nimport axios from \"axios\";\n\nexport default {\n  getAllLeagues() {\n    return axios.post(\"/leagues/all\", {\n      max: 1500,\n      sportId: 1,\n      filterImportant: \"feed\",\n    });\n  },\n  getLeagueData(id: string) {\n    if (!id) {\n      throw new Error(\n        `You must provide an ID to get league data. ${id} provided is not valid`,\n      );\n    }\n    return axios.get(`http://api.tv2.no/sport/resources/tournaments/${id}`);\n  },\n  getActiveSeasonData(url: string) {\n    if (!url) throw new Error(\"You must specify a url to get the active season\");\n    return axios.get(url);\n  },\n  getActiveSeasonNumber(url: string) {\n    try {\n      return url.match(/\\d+/gm)[1];\n    } catch (error) {\n      throw new Error(`Could not get active season number from ${url}`);\n    }\n  },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Card, Message} from \"semantic-ui-react\";\nimport altOmFotballLeagueService from \"../../services/altOmFotballLeagueService\";\n\nconst LeagueChooser = (props) => {\n  const leagues = props.leagues.map((league) => {\n    const activeSeason = altOmFotballLeagueService.getActiveSeasonNumber(\n      league.activeseason[\"@uri\"],\n    );\n    return (\n      <Grid.Column key={league.id}>\n        <Card\n          href={`#/league/${league.name}/${league.id}/${activeSeason}/`}\n          header={league.name}\n          description={`TurneringsID: ${league.id} - SesongID: ${activeSeason}`}\n        />\n      </Grid.Column>\n    );\n  });\n  return leagues.length > 0 ? (\n    <Grid columns={3}>{leagues}</Grid>\n  ) : (\n    <Message info>\n      <Message.Header>Ingen ligaer tilgjengelig</Message.Header>\n      <p>\n        Det er ingen ligaer lagt til i databasen. Dersom du er administrator kan\n        du legge til kamper\n        {\" \"}\n        <a href=\"#/admin\">her</a>\n        {\" \"}\neller få en administrator\n        til å gjøre det for deg.\n      </p>\n    </Message>\n  );\n};\n\nLeagueChooser.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default LeagueChooser;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FirstSteps from \"../Components/ProcedureSteps/FirstSteps\";\nimport LeagueChooser from \"../Components/LeagueChooser/LeagueChooser\";\n\nconst FrontpageView = ({\n  switchLeagueName,\n  leagues,\n  error,\n  loading,\n  ...props\n}) => (\n  <div>\n    <FaresoneMenu switchLeagueName={switchLeagueName} />\n    <FirstSteps />\n    {loading ? (\n      <p>Henter ligaer...</p>\n    ) : (\n      <LeagueChooser\n        leagues={leagues}\n        switchLeagueName={switchLeagueName}\n        {...props} // eslint-disable-line\n      />\n    )}\n    {error ? <p>{error}</p> : \"\"}\n  </div>\n);\n\nFrontpageView.propTypes = {\n  switchLeagueName: PropTypes.func.isRequired,\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired\n      })\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nexport default FrontpageView;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {List} from \"semantic-ui-react\";\nimport \"./RoundButtons.css\";\n\nclass RoundButtons extends Component {\n  getNextRoundId = (rounds, index) =>\n    rounds[index + 1] ? rounds[index + 1].id : -1;\n\n  createRoundButtons = rounds =>\n    rounds.map((round, index, array) => {\n      const endDate = round.enddate;\n\n      // eslint-disable-next-line\n      round.nextRoundId = this.getNextRoundId(array, index);\n      const finished = endDate <= this.props.now;\n      const button = this.createRoundButton(round, finished);\n\n      return <List.Item key={round[\"@uri\"]}>{button}</List.Item>;\n    });\n\n  createUrl = roundInfo =>\n    `#/league/${this.props.tournamentId}/${this.props.seasonId}/${\n      this.props.leagueName\n    }/round/${roundInfo.roundNo}/roundId/${roundInfo.id}/nextRound/${\n      roundInfo.nextRoundId\n    }`;\n\n  createFinishedButton = roundInfo => (\n    <a href={this.createUrl(roundInfo)} className=\"round-buttons finished\">\n      {roundInfo.name}\n    </a>\n  );\n\n  createNotFinishedButton = roundInfo => (\n    <a href={this.createUrl(roundInfo)} className=\"round-buttons\">\n      {roundInfo.name}\n      <span className=\"startDate\">\n        Starter: \n        {\" \"}\n        {moment(roundInfo.startdate).format(\"DD.MM.YYYY\")}\n      </span>\n    </a>\n  );\n\n  createRoundButton = (roundInfo, finished = false) =>\n    finished\n      ? this.createFinishedButton(roundInfo)\n      : this.createNotFinishedButton(roundInfo);\n\n  render() {\n    if (!this.props.rounds) {\n      return (\n        <p>\n          Kan ikke hente runder for\n          {this.props.leagueName}\n        </p>\n      );\n    }\n    return <List>{this.createRoundButtons(this.props.rounds)}</List>;\n  }\n}\n\nRoundButtons.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  rounds: PropTypes.arrayOf(\n    PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nextRoundId: PropTypes.string,\n      roundNo: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  now: PropTypes.string.isRequired\n};\n\nexport default RoundButtons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Segment, Dimmer, Loader, Message,\n} from \"semantic-ui-react\";\nimport RoundButtons from \"../RoundButtons/RoundButtons\";\n\nconst RoundList = (props) => {\n  if (props.rounds.length === 0) {\n    return (\n      <Message info>\n        Klarte ikke å hente runder. Sjekk at du er koblet til internett\n      </Message>\n    );\n  }\n  return (\n    <Segment>\n      <Dimmer active={props.loading}>\n        <Loader>\nHenter runder for\n          {props.leagueName}\n        </Loader>\n      </Dimmer>\n      <RoundButtons\n        tournamentId={props.tournamentId}\n        seasonId={props.seasonId}\n        leagueName={props.leagueName}\n        finished={false}\n        rounds={props.rounds}\n        now={new Date().toISOString()}\n      />\n    </Segment>\n  );\n};\n\nRoundList.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  rounds: PropTypes.arrayOf(\n    PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nextRoundId: PropTypes.string,\n      roundNo: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default RoundList;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport RoundList from \"../RoundList\";\n\nclass RoundListContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        rounds: [],\n        leagueName: \"\"\n      },\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {tournamentId, seasonId} = this.props;\n    this.getRounds(tournamentId, seasonId);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {tournamentId, seasonId} = nextProps;\n    this.getRounds(tournamentId, seasonId);\n  }\n\n  getRounds = (tournamentId, seasonId) => {\n    axios\n      .get(`/rounds/${tournamentId}/${seasonId}`)\n      .then(data => {\n        this.setState({\n          data: {rounds: data.data.round || []},\n          loading: false\n        });\n      })\n      .catch(() =>\n        this.setState({\n          data: {\n            rounds: []\n          },\n          loading: false\n        })\n      );\n  };\n\n  render() {\n    const {rounds} = this.state.data;\n    const {tournamentId, seasonId, leagueName} = this.props;\n    return (\n      <RoundList\n        rounds={rounds}\n        leagueName={leagueName}\n        loading={this.state.loading}\n        tournamentId={tournamentId}\n        seasonId={seasonId}\n      />\n    );\n  }\n}\n\nRoundListContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired,\n  leagueName: PropTypes.string.isRequired\n};\n\nexport default RoundListContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon, Step} from \"semantic-ui-react\";\n\nconst Steps = props => (\n  <Step.Group className=\"no-print\">\n    <Step completed>\n      <Icon name=\"checkmark\" />\n      <Step.Content>\n        <Step.Title>Liga valgt</Step.Title>\n        <Step.Description>\nDu har valgt\n          {props.league}\n        </Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step active>\n      <Icon name=\"numbered list\" />\n      <Step.Content>\n        <Step.Title>Velg runde</Step.Title>\n        <Step.Description>Hvilken runde gjelder lefsen for?</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"print\" />\n      <Step.Content>\n        <Step.Title>Print</Step.Title>\n        <Step.Description>Ctrl + P for å printe lefsen</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step disabled>\n      <Icon name=\"cocktail\" />\n      <Step.Content>\n        <Step.Title>Bra jobbet</Step.Title>\n        <Step.Description>Ta deg en velfortjent pause!</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nSteps.propTypes = {\n  league: PropTypes.string.isRequired,\n};\n\nexport default Steps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid} from \"semantic-ui-react\";\nimport RoundListContainer from \"../Components/RoundList/Containers/RoundListContainer\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport Steps from \"../Components/ProcedureSteps/Steps\";\n\nconst MainView = (props) => {\n  const {leagueName, tournamentId, seasonId} = props.match.params;\n  return (\n    <div>\n      <FaresoneMenu />\n      <Steps className=\"no-print\" league={leagueName} />\n      <Grid columns=\"4\" centered>\n        <Grid.Column>\n          <h2>{leagueName}</h2>\n          <RoundListContainer\n            leagueName={leagueName}\n            tournamentId={parseInt(tournamentId, 10)}\n            seasonId={parseInt(seasonId, 10)}\n          />\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nMainView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default MainView;\n","export default {\n  goalInPlay: [\"http://api.tv2.no/sport/resources/eventtypes/3/\"],\n  penaltyGoal: [\n    \"http://api.tv2.no/sport/resources/extendedeventtypes/304/\",\n    \"http://api.tv2.no/sport/resources/extendedeventtypes/105/\",\n    \"http://api.tv2.no/sport/resources/eventtypes/6/\",\n  ],\n  ownGoal: [\"http://api.tv2.no/sport/resources/extendedeventtypes/220/\"],\n  postponed: [\"http://api.tv2.no/sport/resources/statuses/2/\"],\n  ended: [\"http://api.tv2.no/sport/resources/statuses/1/\"],\n};\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Progress} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport events from \"../../Tools/events\";\n\nconst LeagueProgress = ({tournamentId, seasonId, leagueName}) => {\n  const removeFinishedRounds = rounds => {\n    if (!rounds) throw new Error(\"Rounds cannot be undefined\");\n\n    const promises = getMatchUris(rounds);\n\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then(data => {\n          const filteredMatches = data.reduce(\n            (obj, match) => {\n              const {match: matchData} = match.data;\n              if (\n                matchData.every(\n                  m =>\n                    m.confirmed === \"true\" || roundHasFinishedMatches(matchData)\n                )\n              ) {\n                // eslint-disable-next-line\n                obj.finished += 1;\n              } else if (roundHasPostponedMatches(matchData)) {\n                // eslint-disable-next-line\n                obj.finished += 1;\n              } else {\n                // eslint-disable-next-line\n                obj.left += 1;\n              }\n              return obj;\n            },\n            {finished: 0, left: 0}\n          );\n          resolve(filteredMatches);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  };\n\n  const getMatchUris = rounds => {\n    return rounds.map(r => axios.get(r.matches[\"@uri\"]));\n  };\n\n  const roundHasPostponedMatches = matches => {\n    return matches.some(m => {\n      let status = null;\n      if (m.status) {\n        status = m.status[\"@uri\"];\n      }\n      return events.postponed.includes(status);\n    });\n  };\n\n  const roundHasFinishedMatches = matches => {\n    return matches.some(m => {\n      let status = null;\n      if (m.status) {\n        status = m.status[\"@uri\"];\n      }\n      return events.ended.includes(status);\n    });\n  };\n\n  const [finished, setFinished] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(\n    () => {\n      getRounds(tournamentId, seasonId);\n    },\n    [tournamentId, seasonId]\n  );\n\n  const getRounds = (tournamentId, seasonId) => {\n    axios.get(`/rounds/${tournamentId}/${seasonId}`).then(data => {\n      calculateRounds(data.data.round);\n    });\n  };\n\n  const calculateRounds = rounds => {\n    removeFinishedRounds(rounds).then(({finished, left}) => {\n      setFinished(finished);\n      setTotal(finished + left);\n    });\n  };\n\n  return (\n    <Progress\n      className=\"no-print\"\n      color=\"green\"\n      progress=\"ratio\"\n      total={total}\n      value={finished}\n    >\n      Progresjon for {leagueName}\n    </Progress>\n  );\n};\n\nLeagueProgress.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tournamentId: PropTypes.number.isRequired,\n  seasonId: PropTypes.number.isRequired\n};\n\nexport default LeagueProgress;\n","export default {\n  Arsenal: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Bournemouth: {\n    primaryColor: \"#ce2f2f\",\n    secondaryColor: \"#000\",\n  },\n  Brighton: {\n    primaryColor: \"#0d57c7\",\n    secondaryColor: \"#fff\",\n  },\n  Burnley: {\n    primaryColor: \"#830951\",\n    secondaryColor: \"#68b6ee\",\n  },\n  Chelsea: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Crystal_Palace: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#ec111d\",\n  },\n  Everton: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Huddersfield: {\n    primaryColor: \"#3891f8\",\n    secondaryColor: \"#fff\",\n  },\n  Leicester: {\n    primaryColor: \"#0453d8\",\n    secondaryColor: \"#fff\",\n  },\n  Liverpool: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Manchester_City: {\n    primaryColor: \"#6ca7ec\",\n    secondaryColor: \"#fff\",\n  },\n  Manchester_United: {\n    primaryColor: \"#cd040a\",\n    secondaryColor: \"#fff\",\n  },\n  Newcastle: {\n    primaryColor: \"#000\",\n    secondaryColor: \"#fff\",\n  },\n  Southampton: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Stoke: {\n    primaryColor: \"#f80e15\",\n    secondaryColor: \"#fff\",\n  },\n  Swansea: {\n    primaryColor: \"#fff\",\n    secondaryColor: \"#f5ce5d\",\n  },\n  Tottenham: {\n    primaryColor: \"#fff\",\n    secondaryColor: \"#1e0769\",\n  },\n  Watford: {\n    primaryColor: \"#e2e806\",\n    secondaryColor: \"#e8060c\",\n  },\n  West_Bromwich: {\n    primaryColor: \"#063973\",\n    secondaryColor: \"#fff\",\n  },\n  West_Ham: {\n    primaryColor: \"#830951\",\n    secondaryColor: \"#68b6ee\",\n  },\n};\n","import axios from \"axios\";\nimport teamColors from \"../Data/teamColors\";\n\nconst tools = {\n  getChannelAndStadium(match) {\n    return {\n      channel: this.getChannel(match),\n      stadium: this.getStadium(match),\n      referee: this.getReferee(match),\n    };\n  },\n\n  getChannel(match) {\n    if (match.channel) {\n      return axios.get(match.channel[\"@uri\"]);\n    }\n    return null;\n  },\n\n  getStadium(match) {\n    if (match.stadium) {\n      return axios.get(match.stadium[\"@uri\"]);\n    }\n    return null;\n  },\n\n  getDate(datetime) {\n    return new Date(datetime).toLocaleDateString(\"no-NO\");\n  },\n\n  getTime(datetime) {\n    return new Date(datetime).toLocaleTimeString(\"no-NB\");\n  },\n\n  getReferee(match) {\n    if (match.referee) {\n      return {referee: axios.get(match.referee[\"@uri\"])};\n    }\n    return {\n      referee: {info: \"Dommer ikke klar\"},\n    };\n  },\n\n  getTableColors(leagueId) {\n    const data = {\n      greens: [],\n      reds: [],\n    };\n\n    switch (leagueId) {\n      case 1:\n        data.greens = [0, 1, 2];\n        data.reds = [14, 15];\n        return data;\n      case 230:\n        data.greens = [0, 1, 2, 3];\n        data.reds = [17, 18, 19];\n        return data;\n      default:\n        return data;\n    }\n  },\n\n  getTeamColors(teamName) {\n    if (!teamName) throw new Error(\"You must provide a team name\");\n    const underscoreName = teamName.replace(/\\s/g, \"_\");\n    const colors = teamColors[underscoreName];\n    if (colors) return colors;\n\n    throw new Error(\n      `Could not find matching colors for ${teamName}. Update teamColors.js with the correct team name and colors`,\n    );\n  },\n\n  getPersonData(personUrl) {\n    return axios.get(personUrl);\n  },\n\n  getMultiplePersonData(promises, events) {\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then((data) => {\n          const players = data.map((p, index) => ({\n            player: p.data,\n            event: events[index],\n          }));\n          resolve(players);\n        })\n        .catch(err => reject(err));\n    });\n  },\n\n  getMemberships(promises) {\n    return new Promise((resolve, reject) => {\n      axios\n        .all(promises)\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n  },\n\n  extractPersonId(url) {\n    const regex = /people\\/(\\d+)\\//g;\n    const res = regex.exec(url);\n    if (res && res.length > 1) return parseInt(res[1], 10);\n\n    return -1;\n  },\n};\n\nexport default tools;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport tools from \"../../Tools/tools\";\n\nclass NextMatchInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchInfo: props.matchInfo,\n      nextRoundNumber: parseInt(props.nextRoundNumber, 10) + 1,\n      stadium: \"\",\n      channel: \"\",\n      date: tools.getDate(props.matchInfo.starttime),\n      time: tools.getTime(props.matchInfo.starttime),\n    };\n\n    axios.all([tools.getChannelAndStadium(props.matchInfo)]).then(\n      axios.spread((data) => {\n        if (data.channel) {\n          data.channel.then(channel => this.setState({channel: channel.data.name}));\n        } else {\n          this.setState({\n            channel: \"Kanal ikke klar\",\n          });\n        }\n\n        if (data.stadium) {\n          data.stadium.then(stadium => this.setState({stadium: stadium.data.name}));\n        } else {\n          this.setState({\n            stadium: \"Stadion klar\",\n          });\n        }\n      }),\n    );\n  }\n\n  render() {\n    return (\n      <Table.Row>\n        <Table.Cell>{this.state.date}</Table.Cell>\n        <Table.Cell>{this.state.time}</Table.Cell>\n        <Table.Cell>\n          {this.state.nextRoundNumber}\n. runde\n        </Table.Cell>\n        <Table.Cell>{this.state.matchInfo.name}</Table.Cell>\n        <Table.Cell>{this.state.stadium}</Table.Cell>\n        <Table.Cell>{this.state.channel}</Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nNextMatchInfo.propTypes = {\n  matchInfo: PropTypes.object.isRequired,\n  nextRoundNumber: PropTypes.number.isRequired,\n};\n\nexport default NextMatchInfo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table, Segment, Dimmer, Loader, Message,\n} from \"semantic-ui-react\";\nimport NextMatchInfo from \"./NextMatchInfo\";\n\nconst NextMatches = (props) => {\n  const matches = props.matches.map(m => (\n    <NextMatchInfo\n      key={m.id}\n      matchInfo={m}\n      nextRoundNumber={props.nextRoundNumber}\n    />\n  ));\n\n  if (props.matches.length <= 0 && !props.loading) {\n    return (\n      <Message className=\"no-print\" info>\n        Kamper for neste runde er ikke klar, eller så holder du på å lage lefsen\n        for sesongens siste runde.\n      </Message>\n    );\n  }\n\n  return (\n    <Segment>\n      <Dimmer active={props.loading}>\n        <Loader>Henter neste runde</Loader>\n      </Dimmer>\n      <h1>Neste runde</h1>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Dato</Table.HeaderCell>\n            <Table.HeaderCell>Kl.</Table.HeaderCell>\n            <Table.HeaderCell>Runde</Table.HeaderCell>\n            <Table.HeaderCell>Kamp</Table.HeaderCell>\n            <Table.HeaderCell>Arena</Table.HeaderCell>\n            <Table.HeaderCell>Kanal</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{matches}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nNextMatches.propTypes = {\n  matches: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  nextRoundNumber: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default NextMatches;\n","import React, {Component} from \"react\";\nimport {Divider, Message} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport goalEvents from \"../../Tools/events\";\n\nclass FinishedMatchElements extends Component {\n  static goalWasGoalInPlay(event) {\n    return goalEvents.goalInPlay.includes(event);\n  }\n\n  static goalWasPenalty(event) {\n    return goalEvents.penaltyGoal.includes(event);\n  }\n\n  static goalWasOwnGoal(event) {\n    return goalEvents.ownGoal.includes(event);\n  }\n\n  static calculateHomeAndAwayEvents(events) {\n    return events.reduce(\n      (obj, e, index, list) => {\n        const prevElementA =\n          list[index - 1] === undefined ? null : list[index - 1].goalsTeamA;\n        const prevElementB =\n          list[index - 1] === undefined ? null : list[index - 1].goalsTeamB;\n\n        const previousHomeScore =\n          prevElementA === null ? 0 : parseInt(prevElementA, 10);\n        const previousAwayScore =\n          prevElementB === null ? 0 : parseInt(prevElementB, 10);\n\n        const homeScore = parseInt(e.goalsTeamA, 10);\n        const awayScore = parseInt(e.goalsTeamB, 10);\n\n        if (homeScore > previousHomeScore) {\n          obj.home.push(e);\n        }\n\n        if (awayScore > previousAwayScore) {\n          obj.away.push(e);\n        }\n\n        return obj;\n      },\n      {home: [], away: []}\n    );\n  }\n\n  static filterGoalEvents(events) {\n    return events.filter(e => {\n      const eventType = e.eventtype[\"@uri\"];\n      const extendedEventType = e.extendedeventtype[\"@uri\"];\n      if (!eventType) return false;\n      if (!extendedEventType) return false;\n      return (\n        FinishedMatchElements.goalWasGoalInPlay(eventType) ||\n        FinishedMatchElements.goalWasPenalty(eventType) ||\n        FinishedMatchElements.goalWasPenalty(extendedEventType) ||\n        FinishedMatchElements.goalWasOwnGoal(extendedEventType)\n      );\n    });\n  }\n\n  static getNameOfPerson(uri) {\n    return axios.get(uri);\n  }\n\n  static splitGameName(name) {\n    if (name.includes(\"-\")) {\n      return name.split(\"-\");\n    }\n    if (name.includes(\",\")) {\n      return name.split(\",\");\n    }\n    if (name.includes(\";\")) {\n      return name.split(\";\");\n    }\n    return name;\n  }\n\n  static groupScorers(scorers) {\n    return scorers.reduce((obj, scorer) => {\n      if (!obj[scorer.person1[\"@uri\"]]) {\n        // eslint-disable-next-line no-param-reassign\n        obj[scorer.person1[\"@uri\"]] = [];\n        obj[scorer.person1[\"@uri\"]].push({\n          firstname: scorer.person1.firstname,\n          lastname: scorer.person1.lastname,\n          eventTime: scorer.eventtime,\n          eventType: scorer.eventtype[\"@uri\"],\n          extendedeventtype: scorer.extendedeventtype[\"@uri\"]\n        });\n      } else {\n        obj[scorer.person1[\"@uri\"]].push({\n          firstname: scorer.person1.firstname,\n          lastname: scorer.person1.lastname,\n          eventTime: scorer.eventtime,\n          eventType: scorer.eventtype[\"@uri\"],\n          extendedeventtype: scorer.extendedeventtype[\"@uri\"]\n        });\n      }\n      return obj;\n    }, {});\n  }\n\n  static formatIndividualGoalScorer(scorer) {\n    let text = `${scorer[0].lastname} (`;\n    scorer.forEach((s, index, list) => {\n      const extendedEventType = s.extendedeventtype;\n      const {eventType} = s;\n      if (\n        FinishedMatchElements.goalWasPenalty(extendedEventType) ||\n        FinishedMatchElements.goalWasPenalty(eventType)\n      ) {\n        text += \"str. \";\n      } else if (FinishedMatchElements.goalWasOwnGoal(extendedEventType)) {\n        text += \"sm. \";\n      }\n      text += index + 1 !== list.length ? `${s.eventTime}, ` : `${s.eventTime}`;\n    });\n    text += \")\";\n    return text;\n  }\n\n  static formatGoalScoreText(scorers) {\n    const groupedScorers = FinishedMatchElements.groupScorers(scorers);\n    return Object.keys(groupedScorers)\n      .map(key =>\n        FinishedMatchElements.formatIndividualGoalScorer(groupedScorers[key])\n      )\n      .join(\", \");\n  }\n\n  static extractPersonNames(events) {\n    return new Promise(resolve => {\n      const promises = [];\n      events.forEach(e => {\n        promises.push(FinishedMatchElements.getNameOfPerson(e.person1[\"@uri\"]));\n      });\n\n      axios.all(promises).then(data => {\n        events.forEach((e, index) => {\n          e.person1 = data[index].data;\n        });\n        resolve(events);\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    const [home, away] = FinishedMatchElements.splitGameName(\n      props.matchInfo.name\n    );\n    this.state = {\n      home,\n      away,\n      goalScorersHomeTeam: [],\n      goalScorersAwayTeam: []\n    };\n  }\n\n  componentDidMount() {\n    this.getGoals(this.props.matchInfo.events[\"@uri\"]);\n  }\n\n  getGoals(eventUri) {\n    axios.get(eventUri).then(data => {\n      const filteredGoalEvents = FinishedMatchElements.filterGoalEvents(\n        data.data.event\n      );\n      const calculatedEvents = FinishedMatchElements.calculateHomeAndAwayEvents(\n        filteredGoalEvents\n      );\n      FinishedMatchElements.extractPersonNames(calculatedEvents.home).then(\n        goalScorersHomeTeam => {\n          this.setState({\n            goalScorersHomeTeam\n          });\n        }\n      );\n      FinishedMatchElements.extractPersonNames(calculatedEvents.away).then(\n        goalScorersAwayTeam => {\n          this.setState({\n            goalScorersAwayTeam\n          });\n        }\n      );\n    });\n  }\n\n  render() {\n    const {home, away} = this.state;\n    const homeScorers = FinishedMatchElements.formatGoalScoreText(\n      this.state.goalScorersHomeTeam\n    );\n    const awayScorers = FinishedMatchElements.formatGoalScoreText(\n      this.state.goalScorersAwayTeam\n    );\n\n    return (\n      <div>\n        <Message size=\"small\">\n          <Message.Header>\n            {home} \n            {\" \"}\n            {this.props.matchInfo.goalsTeamAEndtime}\n            {\" \"}\n-\n            {\" \"}\n            {this.props.matchInfo.goalsTeamBEndtime} \n            {\" \"}\n            {away}\n          </Message.Header>\n          {this.props.matchInfo.goalsTeamAEndtime > 0 ? (\n            <p>\n              <b>\n                {home}\n:\n              </b> \n              {\" \"}\n              {homeScorers}\n            </p>\n          ) : (\n            \"\"\n          )}\n          {this.props.matchInfo.goalsTeamBEndtime > 0 ? (\n            <p>\n              <b>{away}</b>\n:\n              {awayScorers}\n            </p>\n          ) : (\n            \"\"\n          )}\n        </Message>\n        <Divider />\n      </div>\n    );\n  }\n}\n\nFinishedMatchElements.propTypes = {\n  matchInfo: PropTypes.shape({\n    goalsTeamAEndtime: PropTypes.string.isRequired,\n    goalsTeamBEndtime: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    events: PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired\n    })\n  }).isRequired\n};\n\nexport default FinishedMatchElements;\n","import React, {Component} from \"react\";\nimport {Segment, Dimmer, Loader} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport FinishedMatchElements from \"./FinishedMatchElements\";\n\nclass FinishedMatches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matches: this.props.matches\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const finishedMatchElements = this.state.matches.map(m => (\n      <FinishedMatchElements key={m.id} matchInfo={m} />\n    ));\n\n    return (\n      <Segment>\n        <Dimmer active={this.state.loading}>\n          <Loader>Henter kamper som er ferdig</Loader>\n        </Dimmer>\n        <h1>\n          Ferdig spilt i runde\n          {this.props.roundNumber}\n        </h1>\n        {finishedMatchElements}\n      </Segment>\n    );\n  }\n}\n\nFinishedMatches.propTypes = {\n  matches: PropTypes.array.isRequired,\n  roundNumber: PropTypes.number.isRequired\n};\n\nexport default FinishedMatches;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport \"./LeagueTable.css\";\n\nclass LeagueTableItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.tableData,\n      teamData: \"\",\n    };\n\n    this.getTeamData(props.tableData.team[\"@uri\"]);\n  }\n\n  getTeamData(url) {\n    axios.get(url).then((data) => {\n      this.setState({teamData: data.data});\n    });\n  }\n\n  render() {\n    return (\n      <Table.Row className={this.props.rowColor}>\n        <Table.Cell>\n          {this.state.data.position}\n.\n        </Table.Cell>\n        <Table.Cell>{this.state.teamData.name}</Table.Cell>\n        <Table.Cell>{this.state.data.matches}</Table.Cell>\n        <Table.Cell>{this.state.data.wins}</Table.Cell>\n        <Table.Cell>{this.state.data.draws}</Table.Cell>\n        <Table.Cell>{this.state.data.losses}</Table.Cell>\n        <Table.Cell>{this.state.data.goalsFor}</Table.Cell>\n        <Table.Cell>{this.state.data.goalsAgainst}</Table.Cell>\n        <Table.Cell>{this.state.data.goalDifference}</Table.Cell>\n        <Table.Cell>{this.state.data.points}</Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nLeagueTableItem.defaultProps = {\n  rowColor: \"\",\n};\n\nLeagueTableItem.propTypes = {\n  tableData: PropTypes.shape({\n    team: PropTypes.shape({\n      \"@uri\": PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  rowColor: PropTypes.string,\n};\n\nexport default LeagueTableItem;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Table, Segment, Dimmer, Loader} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport LeagueTableItem from \"./LeagueTableItem\";\n\nconst LeagueTable = ({tableColors, table = []}) => {\n  const [leagueName, setLeagueName] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(\n    () => {\n      if (table && table.length > 1) {\n        getLeagueName(table[0].tournament[\"@uri\"]);\n      }\n    },\n    [table]\n  );\n\n  const getLeagueName = tournamentUri => {\n    axios.get(tournamentUri).then(data => {\n      setLeagueName(data.data.name);\n      setLoading(false);\n    });\n  };\n\n  const createLeagueTableItems = (data, index) => {\n    if (tableColors.greens.includes(index)) {\n      return (\n        <LeagueTableItem\n          rowColor=\"green-table\"\n          key={data.id}\n          tableData={data}\n        />\n      );\n    }\n    if (tableColors.reds.includes(index)) {\n      return (\n        <LeagueTableItem rowColor=\"red-table\" key={data.id} tableData={data} />\n      );\n    }\n    return <LeagueTableItem key={data.id} tableData={data} />;\n  };\n\n  const tableElements = table.map((t, index) =>\n    createLeagueTableItems(t, index)\n  );\n\n  return (\n    <Segment className=\"print\">\n      <Dimmer active={loading}>\n        <Loader>Henter tabell</Loader>\n      </Dimmer>\n      <h1>\n        Tabell:\n        {leagueName}\n      </h1>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell>Lag</Table.HeaderCell>\n            <Table.HeaderCell>K</Table.HeaderCell>\n            <Table.HeaderCell>V</Table.HeaderCell>\n            <Table.HeaderCell>U</Table.HeaderCell>\n            <Table.HeaderCell>T</Table.HeaderCell>\n            <Table.HeaderCell>+</Table.HeaderCell>\n            <Table.HeaderCell>-</Table.HeaderCell>\n            <Table.HeaderCell>+/-</Table.HeaderCell>\n            <Table.HeaderCell>P</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{tableElements}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nLeagueTable.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  tableColors: PropTypes.shape({\n    greens: PropTypes.arrayOf(PropTypes.number),\n    reds: PropTypes.arrayOf(PropTypes.number)\n  }).isRequired,\n  table: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default LeagueTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table, Segment, Dimmer, Loader, Message,\n} from \"semantic-ui-react\";\n\nconst Topscorers = (props) => {\n  if (props.players.length <= 0 && props.loading === false) {\n    return (\n      <Message negative>\n        <Message.Header>Toppscorere ikke tilgjengelig</Message.Header>\n        <p>\n          Ingen toppscorere tilgjengelig for denne ligaen. Det kan være fordi\n          ligaen ikke har startet, mål ikke er registrert på Altomfotball eller\n          serveren er nede. Prøv igjen senere.\n        </p>\n      </Message>\n    );\n  }\n\n  const topscorers = props.players.map(ts => (\n    <Table.Row key={ts.name}>\n      <Table.Cell>{ts.place}</Table.Cell>\n      <Table.Cell>{ts.name}</Table.Cell>\n      <Table.Cell>{ts.team}</Table.Cell>\n      <Table.Cell>{ts.value1}</Table.Cell>\n      <Table.Cell>{ts.value2}</Table.Cell>\n      <Table.Cell>{ts.value3}</Table.Cell>\n    </Table.Row>\n  ));\n\n  return (\n    <Segment>\n      <Dimmer active={props.loading}>\n        <Loader>Henter toppscorere</Loader>\n      </Dimmer>\n      <h1>Toppscorere</h1>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Posisjon</Table.HeaderCell>\n            <Table.HeaderCell>Navn</Table.HeaderCell>\n            <Table.HeaderCell>Lag</Table.HeaderCell>\n            <Table.HeaderCell>Mål</Table.HeaderCell>\n            <Table.HeaderCell>Kamper</Table.HeaderCell>\n            <Table.HeaderCell>Snitt</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>{topscorers}</Table.Body>\n      </Table>\n    </Segment>\n  );\n};\n\nTopscorers.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      place: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      team: PropTypes.string.isRequired,\n      value1: PropTypes.number.isRequired,\n      value2: PropTypes.number.isRequired,\n      value3: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Topscorers;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Topscorers from \"../Topscorers\";\n\nclass TopscorersContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        players: []\n      },\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {tournamentId} = this.props;\n    axios\n      .get(`/statistics/topscorers/${tournamentId}`)\n      .then(data => {\n        this.setState({\n          data: {players: data.data.data.slice(0, 10)},\n          loading: false\n        });\n      })\n      .catch(() => this.setState({data: {players: []}}));\n  }\n\n  render() {\n    return (\n      <Topscorers\n        players={this.state.data.players}\n        loading={this.state.loading}\n      />\n    );\n  }\n}\nTopscorersContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired\n};\n\nexport default TopscorersContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon, Step} from \"semantic-ui-react\";\n\nfunction RoundSteps(props) {\n  return (\n    <Step.Group className=\"no-print\">\n      <Step completed>\n        <Icon name=\"checkmark\" />\n        <Step.Content>\n          <Step.Title>Liga valgt</Step.Title>\n          <Step.Description>\n\t\t\t\t\t\tDu har valgt\n            {\" \"}\n            {props.league}\n          </Step.Description>\n        </Step.Content>\n      </Step>\n\n      <Step completed>\n        <Icon name=\"checkmark\" />\n        <Step.Content>\n          <Step.Title>Runde valgt</Step.Title>\n          <Step.Description>\n\t\t\t\t\t\tDu har valgt runde\n            {\" \"}\n            {props.round}\n          </Step.Description>\n        </Step.Content>\n      </Step>\n\n      <Step>\n        <Icon name=\"print\" />\n        <Step.Content>\n          <Step.Title>Print</Step.Title>\n          <Step.Description>\n\t\t\t\t\t\tCtrl + P for å printe lefsen\n\n          </Step.Description>\n        </Step.Content>\n      </Step>\n\n      <Step>\n        <Icon name=\"cocktail\" />\n        <Step.Content>\n          <Step.Title>Bra jobbet</Step.Title>\n          <Step.Description>\n\t\t\t\t\t\tTa deg en velfortjent pause!\n\n          </Step.Description>\n        </Step.Content>\n      </Step>\n    </Step.Group>\n  );\n}\n\nRoundSteps.propTypes = {\n  round: PropTypes.number.isRequired,\n  league: PropTypes.string.isRequired,\n};\n\nexport default RoundSteps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Segment,\n  Dimmer,\n  Loader,\n  List,\n  Message\n} from \"semantic-ui-react\";\nimport \"./Dangerzone.css\";\n\nconst Dangerzone = props => {\n  if (props.players.length <= 0 && !props.loading) {\n    return (\n      <Message info className=\"no-print\">\n        <Message.Header>Faresonen ikke tilgjengelig</Message.Header>\n        <p>\n          Det er ingen spillere i Faresonen for\n          {props.leagueName}\n.\n        </p>\n      </Message>\n    );\n  }\n\n  return (\n    <Segment>\n      <Dimmer active={props.loading}>\n        <Loader>Henter spillere i faresonen</Loader>\n      </Dimmer>\n      <h1>\nFaresonen i\n        {props.leagueName}\n      </h1>\n      <Grid columns={4}>\n        {props.players.map(team => (\n          <Grid.Column key={team.name}>\n            <List className=\"similar-height\">\n              <List.Item>\n                <List.Content>\n                  <List.Header>{team.name}</List.Header>\n                  <List.Description>\n                    {team.players.length}\n                    {\" \"}\nspillere\n                  </List.Description>\n                  <List.List>\n                    {team.players.map(player => (\n                      <List.Item key={player.name}>\n                        <List.Icon name=\"user\" />\n                        <List.Content>\n                          <List.Header>{player.name}</List.Header>\n                          <List.Description>\n                            {player.value1}\n                            {\" \"}\n                            {player.value1 > 1 ? \"gule kort\" : \"gult kort\"}\n                            {\", \"}\n                            {team.name}\n                          </List.Description>\n                        </List.Content>\n                      </List.Item>\n                    ))}\n                  </List.List>\n                </List.Content>\n              </List.Item>\n            </List>\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Segment>\n  );\n};\n\nDangerzone.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      players: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          place: PropTypes.number.isRequired,\n          team: PropTypes.string.isRequired,\n          value1: PropTypes.number.isRequired\n        })\n      ).isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Dangerzone;\n","import axios from \"axios\";\n\nconst dangerzoneService = {\n  getPlayersWithYellowCards(tournamentId) {\n    if (!tournamentId) {\n      throw new Error(\n        \"TournamentID is not defined. Please provide a tournamentId\"\n      );\n    }\n    return new Promise((resolve, reject) => {\n      axios\n        .get(`/statistics/yellowcards/${tournamentId}`)\n        .then(data => {\n          resolve({data: data.data});\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n\n  sortTeams(players) {\n    return players.sort((a, b) => a.name.localeCompare(b.name));\n  },\n\n  filterPlayers(players) {\n    return Object.keys(players)\n      .map(team => ({\n        name: team,\n        players: players[team].players.filter(player => {\n          const yellowCards = player.value1;\n          if (yellowCards === 3 || (yellowCards % 2 !== 0 && yellowCards > 2)) {\n            return true;\n          }\n          return false;\n        })\n      }))\n      .filter(team => team.players.length > 0);\n  },\n\n  groupPlayers(players) {\n    return players.reduce((obj, elem) => {\n      if (!obj[elem.team]) {\n        // eslint-disable-next-line no-param-reassign\n        obj[elem.team] = {\n          players: []\n        };\n      }\n\n      if (obj[elem.team]) {\n        obj[elem.team].players.push(elem);\n      }\n      return obj;\n    }, {});\n  },\n\n  groupPlayersArrayResponse(players) {\n    return this.fromObjectToArray(this.groupPlayers(players));\n  },\n\n  fromObjectToArray(objects) {\n    const list = [];\n    Object.keys(objects).forEach(key => {\n      list.push({team: key, players: objects[key].players});\n    });\n    return list;\n  }\n};\n\nexport default dangerzoneService;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dangerzone from \"../Dangerzone\";\nimport dangerzoneService from \"../../../services/dangerzoneService\";\n\nclass DangerzoneContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getPlayersWithYellowCards(this.props.tournamentId);\n  }\n\n  getPlayersWithYellowCards(tournamentId) {\n    dangerzoneService.getPlayersWithYellowCards(tournamentId).then(data => {\n      const {data: yellowCardResponse} = data.data;\n      if (data.length <= 0) {\n        this.setState({\n          players: [],\n          loading: false\n        });\n        return;\n      }\n      let playersGrouped = dangerzoneService.groupPlayers(yellowCardResponse);\n      playersGrouped = dangerzoneService.filterPlayers(playersGrouped);\n      playersGrouped = dangerzoneService.sortTeams(playersGrouped);\n      this.setState({\n        players: playersGrouped,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {players, loading} = this.state;\n    return (\n      <Dangerzone\n        players={players}\n        leagueName={this.props.leagueName}\n        loading={loading}\n      />\n    );\n  }\n}\n\nDangerzoneContainer.propTypes = {\n  tournamentId: PropTypes.number.isRequired,\n  leagueName: PropTypes.string.isRequired\n};\n\nexport default DangerzoneContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"semantic-ui-react\";\nimport \"moment/locale/nb\";\nimport events from \"../../Tools/events\";\n\nconst MatchInfo = ({\n  status,\n  matchName,\n  stadium,\n  startDate,\n  startTime,\n  channel,\n  referee\n}) => {\n  let header = \"\";\n  if (status && events.postponed.includes(status[\"@uri\"])) {\n    header = (\n      <Item.Header>\n        UTSATT: {matchName}, {stadium}\n      </Item.Header>\n    );\n  } else {\n    header = (\n      <Item.Header>\n        {matchName}, {stadium}\n      </Item.Header>\n    );\n  }\n  return (\n    <Item>\n      <Item.Content>\n        {header}\n        <Item.Meta>\n          {startDate} - Avspark kl.\n          {startTime} på {channel}\n        </Item.Meta>\n        {referee && (\n          <Item.Meta className=\"float-right\">\n            Dommer:\n            {referee}\n          </Item.Meta>\n        )}\n      </Item.Content>\n    </Item>\n  );\n};\n\nMatchInfo.propTypes = {\n  status: PropTypes.shape({\n    \"@uri\": PropTypes.string\n  }),\n  matchName: PropTypes.string.isRequired,\n  stadium: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  channel: PropTypes.string.isRequired,\n  referee: PropTypes.string.isRequired\n};\n\nMatchInfo.defaultProps = {\n  status: {\n    \"@uri\": \"\"\n  }\n};\n\nexport default MatchInfo;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport MatchInfo from \"../MatchInfo\";\nimport tools from \"../../../Tools/tools\";\n\nclass MatchInfoContainer extends Component {\n  static formatRefereeName(ref) {\n    if (ref.firstname && ref.lastname) {\n      return `${ref.firstname} ${ref.lastname}`.trim();\n    }\n    if (ref.firstname) {\n      return `${ref.firstname}`.trim();\n    }\n    if (ref.lastname) {\n      return `${ref.lastname}`.trim();\n    }\n    throw new Error(\"Referee must have either firstname or lastname property\");\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchName: props.match.name,\n      channel: \"\",\n      stadium: \"\",\n      startDate: moment(props.match.starttime, \"YYYY-MM-DDTHH:mm:ssZZ\").format(\n        \"DD/MM YYYY\"\n      ),\n      startTime: tools.getTime(props.match.starttime),\n      referee: \"\",\n      status: props.match.status\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.referee) {\n      this.getReferee(this.props.match.referee[\"@uri\"]);\n    }\n    axios.all([tools.getChannelAndStadium(this.props.match)]).then(\n      axios.spread(data => {\n        if (data.channel) {\n          data.channel.then(channel =>\n            this.setState({channel: channel.data.name})\n          );\n        } else {\n          this.setState({\n            channel: \"Kanal ikke klar\"\n          });\n        }\n\n        if (data.stadium) {\n          data.stadium.then(stadium =>\n            this.setState({stadium: stadium.data.name})\n          );\n        } else {\n          this.setState({\n            stadium: \"Stadion ikke klar\"\n          });\n        }\n      })\n    );\n  }\n\n  getReferee(refUri) {\n    axios.get(refUri).then(data => {\n      this.setState({\n        referee: MatchInfoContainer.formatRefereeName(data.data)\n      });\n    });\n  }\n\n  render() {\n    return (\n      <MatchInfo\n        status={this.state.status}\n        matchName={this.state.matchName}\n        channel={this.state.channel}\n        stadium={this.state.stadium}\n        startDate={this.state.startDate}\n        startTime={this.state.startTime}\n        referee={this.state.referee}\n      />\n    );\n  }\n}\n\nMatchInfoContainer.propTypes = {\n  match: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    starttime: PropTypes.string.isRequired,\n    referee: PropTypes.shape({\"@uri\": PropTypes.string.isRequired}),\n    status: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n  }).isRequired\n};\nexport default MatchInfoContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Divider, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport MatchInfoContainer from \"./Containers/MatchInfoContainer\";\nimport events from \"../../Tools/events\";\nimport \"./Matches.css\";\n\nconst Matches = ({ matches, loading, leagueName, roundNumber }) => {\n  const sorted = matches.sort(\n    (a, b) => new Date(a.starttime) - new Date(b.starttime)\n  );\n  const nextMatches = sorted.map(m => {\n    let className = \"\";\n\n    if (m.status && events.postponed.includes(m.status[\"@uri\"])) {\n      className = \"postponed no-print\";\n    } else if (!!m.confirmed === true) {\n      className = \"finished no-print\";\n    }\n    return (\n      <List.Item className={className} key={m.id}>\n        <MatchInfoContainer match={m} />\n        <Divider />\n      </List.Item>\n    );\n  });\n  return (\n    <Segment className=\"print\" padded=\"very\">\n      <Dimmer size=\"medium\" active={loading}>\n        <Loader>Henter kamper</Loader>\n      </Dimmer>\n      <h1>\n        {leagueName} -{roundNumber}. Runde\n      </h1>\n      <List>{nextMatches}</List>\n    </Segment>\n  );\n};\n\nMatches.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  roundNumber: PropTypes.number.isRequired,\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      hometeam: PropTypes.shape({ \"@uri\": PropTypes.string.isRequired })\n        .isRequired,\n      awayteam: PropTypes.shape({ \"@uri\": PropTypes.string.isRequired })\n        .isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Matches;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Matches from \"../../Matches/Matches\";\n\nconst MatchesContainer = ({leagueName, roundNumber, matches, loading}) => (\n  <Matches\n    className=\"print\"\n    leagueName={leagueName}\n    roundNumber={roundNumber}\n    matches={matches}\n    loading={loading}\n  />\n);\n\nMatchesContainer.propTypes = {\n  leagueName: PropTypes.string.isRequired,\n  roundNumber: PropTypes.number.isRequired,\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      hometeam: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n        .isRequired,\n      awayteam: PropTypes.shape({\"@uri\": PropTypes.string.isRequired})\n        .isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default MatchesContainer;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Message} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport LeagueProgress from \"../Components/LeagueProgress/LeagueProgress\";\nimport NextMatches from \"../Components/NextMatches/NextMatches\";\nimport FinishedMatches from \"../Components/Matches/FinishedMatches\";\nimport LeagueTable from \"../Components/LeagueTable/LeagueTable\";\nimport TopscorersContainer from \"../Components/Topscorers/Containers/TopscorersContainer\";\nimport RoundSteps from \"../Components/ProcedureSteps/RoundSteps\";\nimport DangerzoneContainer from \"../Components/Dangerzone/Containers/DangerzoneContainer\";\nimport tools from \"../Tools/tools\";\nimport \"../print.css\";\nimport MatchesContainer from \"../Components/Dangerzone/Containers/MatchesContainer\";\n\nclass RoundView extends Component {\n  static filterFinishedMatches(matches) {\n    return matches\n      .filter(m => !!m.confirmed === true)\n      .sort((a, b) => a.starttime >= b.starttime);\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params: {leagueName, roundNumber, tournamentId, seasonId}\n      }\n    } = this.props;\n    this.state = {\n      leagueName,\n      roundNumber: parseInt(roundNumber, 10),\n      tournamentId: parseInt(tournamentId, 10),\n      seasonId: parseInt(seasonId, 10),\n      matches: [],\n      nextMatches: [],\n      finishedMatches: [],\n      table: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    let {\n      match: {\n        params: {roundId, nextRoundId}\n      }\n    } = this.props;\n    const {\n      match: {\n        params: {tournamentId, seasonId}\n      }\n    } = this.props;\n    roundId = parseInt(roundId, 10);\n    nextRoundId = parseInt(nextRoundId, 10);\n    this.getRound(roundId, \"matches\");\n    this.getTable(tournamentId, seasonId);\n    if (nextRoundId > 0) {\n      this.getRound(nextRoundId, \"nextMatches\");\n    }\n  }\n\n  getTable(tournamentId, seasonId) {\n    axios\n      .get(`/table/${tournamentId}/${seasonId}`)\n      .then(data => {\n        this.setState({table: data.data.item});\n      })\n      .catch(() => this.setState({table: []}));\n  }\n\n  getRound = (roundId, key) => {\n    axios\n      .get(`/rounds/${roundId}`)\n      .then(data => {\n        let matches = [];\n        matches = data.data.match.sort((a, b) => a.starttime >= b.starttime);\n\n        let finishedMatches = [];\n        finishedMatches = RoundView.filterFinishedMatches(matches);\n        if (key === \"matches\") {\n          this.setState({\n            [key]: matches,\n            finishedMatches,\n            loading: false\n          });\n        } else {\n          this.setState({\n            [key]: matches,\n            loading: false\n          });\n        }\n      })\n      .catch(() =>\n        this.setState({\n          [key]: [],\n          finishedMatches: [],\n          loading: false\n        })\n      );\n  };\n\n  render() {\n    let finishedMatchesElement = null;\n    const {\n      finishedMatches,\n      loading,\n      roundNumber,\n      leagueName,\n      tournamentId,\n      seasonId,\n      matches,\n      nextMatches,\n      table\n    } = this.state;\n    const {switchLeagueName} = this.props;\n    if (finishedMatches.length > 0 && !loading) {\n      finishedMatchesElement = (\n        <FinishedMatches\n          className=\"print\"\n          matches={finishedMatches}\n          roundNumber={roundNumber}\n        />\n      );\n    } else {\n      finishedMatchesElement = (\n        <Message className=\"no-print\" info>\n          <Message.Header>Ferdig spilte kamper</Message.Header>\n          Det er ikke spilt noen kamper denne runden\n        </Message>\n      );\n    }\n\n    return (\n      <div>\n        <FaresoneMenu switchLeagueName={switchLeagueName} />\n\n        <RoundSteps\n          className=\"no-print\"\n          round={roundNumber}\n          league={leagueName}\n        />\n\n        <LeagueProgress\n          leagueName={leagueName}\n          tournamentId={tournamentId}\n          seasonId={seasonId}\n        />\n\n        <MatchesContainer\n          className=\"print\"\n          leagueName={leagueName}\n          roundNumber={roundNumber}\n          matches={matches}\n          loading={loading}\n        />\n\n        {finishedMatchesElement}\n\n        <LeagueTable\n          className=\"print\"\n          leagueName={leagueName}\n          table={table}\n          tableColors={tools.getTableColors(tournamentId)}\n        />\n\n        <NextMatches\n          className=\"print\"\n          matches={nextMatches}\n          nextRoundNumber={roundNumber}\n          loading={loading}\n        />\n\n        <TopscorersContainer className=\"print\" tournamentId={tournamentId} />\n\n        <DangerzoneContainer\n          className=\"print\"\n          leagueName={leagueName}\n          tournamentId={parseInt(tournamentId, 10)}\n        />\n      </div>\n    );\n  }\n}\n\nRoundView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }).isRequired,\n  switchLeagueName: PropTypes.func.isRequired\n};\n\nexport default RoundView;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Form, List, Message} from \"semantic-ui-react\";\n\nclass DangerzoneSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: []\n      },\n      search: \"\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {eliteserien, obosligaen} = nextProps.players;\n    this.setState({\n      data: {\n        eliteserien,\n        obosligaen\n      }\n    });\n  }\n\n  formatPlayers = players => (\n    <List.List>\n      <List.Item>\n        {players.map(p => (\n          <List.Content key={p.name}>\n            <List.Description>\n              {p.name} -{p.value1} gule kort\n            </List.Description>\n          </List.Content>\n        ))}\n      </List.Item>\n    </List.List>\n  );\n\n  createTeamElements = teams => {\n    if (teams.length <= 0) {\n      return (\n        <Message\n          info\n          header=\"Ingen spillere i faresonen\"\n          content=\"Ingen spillere i faresonen. Spillere i faresonen har partall gule kort.\"\n        />\n      );\n    }\n    return teams.map(team => {\n      if (team.players.length === 0) {\n        return \"\";\n      }\n      return (\n        <List.Item key={team.team}>\n          <List.Header>{team.team}</List.Header>\n          <List.Description>\n            {team.players.length >= 2\n              ? `${team.players.length} spillere`\n              : `${team.players.length} spiller`}\n          </List.Description>\n          {this.formatPlayers(team.players)}\n        </List.Item>\n      );\n    });\n  };\n\n  handleSearch = event => {\n    const {value: search} = event.target;\n    this.setState({search});\n  };\n\n  searchFilter(search, leagueId) {\n    if (this.state.data[leagueId] === undefined) {\n      throw new Error(\n        `Wrong leagueId for ${leagueId}. Valid id's are ${Object.keys(\n          this.state.data\n        ).join(\",\")}`\n      );\n    }\n    const filteredPlayers = [];\n    this.state.data[leagueId].forEach(team => {\n      const filtered = team.players.filter(p =>\n        p.name.toLowerCase().includes(search.toLowerCase())\n      );\n      filteredPlayers.push({team: team.team, players: filtered});\n    });\n    return filteredPlayers;\n  }\n\n  render() {\n    const eliteserienSearchFilter = this.searchFilter(\n      this.state.search,\n      \"eliteserien\"\n    );\n    const eliteserieElements = this.createTeamElements(eliteserienSearchFilter);\n\n    const obosLigaenSearchFilter = this.searchFilter(\n      this.state.search,\n      \"obosligaen\"\n    );\n    const obosligaElements = this.createTeamElements(obosLigaenSearchFilter);\n\n    return (\n      <div>\n        <Grid columns={1}>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"playerSearch\">Søk etter spiller</label>\n              <input\n                id=\"playerSearch\"\n                placeholder=\"Fornavn/etternavn\"\n                onChange={this.handleSearch}\n              />\n            </Form.Field>\n          </Form>\n        </Grid>\n        <Grid columns={2}>\n          <Grid.Column>\n            <h1>Eliteserien</h1>\n            <List>{eliteserieElements}</List>\n          </Grid.Column>\n          <Grid.Column>\n            <h1>OBOSligaen</h1>\n            <List>{obosligaElements}</List>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nDangerzoneSearch.propTypes = {\n  players: PropTypes.shape({\n    eliteserien: PropTypes.arrayOf(\n      PropTypes.shape({\n        team: PropTypes.string.isRequired,\n        players: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            value1: PropTypes.number.isRequired\n          })\n        ).isRequired\n      })\n    ).isRequired,\n    obosligaen: PropTypes.arrayOf(\n      PropTypes.shape({\n        team: PropTypes.string.isRequired,\n        players: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            value1: PropTypes.number.isRequired\n          })\n        ).isRequired\n      })\n    )\n  }).isRequired\n};\n\nexport default DangerzoneSearch;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {Feed, Icon, Message, Modal, Header} from \"semantic-ui-react\";\nimport tools from \"../../Tools/tools\";\nimport \"./DangerzoneAccumulator.css\";\n\nclass DangerZoneAccumulator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        events: []\n      }\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const players = [];\n    nextProps.events.forEach(p => {\n      const uri = p.person1[\"@uri\"];\n      players.push(tools.getPersonData(uri));\n    });\n    tools.getMultiplePersonData(players, nextProps.events).then(data => {\n      this.setState({\n        data: {\n          events: data\n        }\n      });\n    });\n  }\n\n  getInfoMessage = () => (\n    <Message\n      info\n      onClick={this.showModal}\n      icon=\"info\"\n      header=\"Informasjon\"\n      content=\"Trykk her for mer informasjon om hvordan denne tjenesten virker.\"\n    />\n  );\n\n  removeFeedEvent = event => {\n    this.removeEventFromState(event);\n    this.props.removePlayer(event.player, \"eliteserien\");\n    this.props.removePlayer(event.player, \"obosligaen\");\n    this.props.removeEvent(event);\n  };\n\n  removeEventFromState = event => {\n    if (!event.player) {\n      throw new Error(\n        \"Event does not have player and player id information. Cannot remove element from state\"\n      );\n    }\n    const index = this.state.data.events.findIndex(\n      e => e.player.id === event.player.id\n    );\n    if (index < 0) return false;\n    this.state.data.events.splice(index, 1);\n    this.setState(prevState => ({\n      data: {\n        events: prevState.data.events\n      }\n    }));\n    return null;\n  };\n\n  sortEvents = events =>\n    events.sort((a, b) => a.event.realTime <= b.event.realTime);\n\n  render() {\n    let {events} = this.state.data;\n    events = this.sortEvents(events);\n\n    let elements = null;\n    if (events.length === 0) {\n      elements = (\n        <Message\n          info\n          header=\"Ingen gule kort registrert\"\n          content=\"Det er ikke registrert noen gule kort. Når de blir registrert dukker de opp her, dersom den registrerte finnes i faresonen fra før.\"\n        />\n      );\n    } else {\n      elements = events.map(p => (\n        <Feed.Event\n          className=\"event-hover fadeInLeft\"\n          onClick={() => this.removeFeedEvent(p)}\n          key={p.player.id}\n        >\n          <Feed.Content>\n            <Feed.Summary>\n              <Feed.User>\n                {p.player.firstname} {p.player.lastname}\n              </Feed.User>{\" \"}\n              må stå over neste kamp\n              <Feed.Date>{moment(p.event.realTime).fromNow()}</Feed.Date>\n            </Feed.Summary>\n            <Feed.Meta>\n              <Feed.Like>\n                <Icon name=\"clock\" />\n                Registrert:{\" \"}\n                {moment(p.event.realTime).format(\"DD-MM-YYYY HH:mm\")}\n              </Feed.Like>\n            </Feed.Meta>\n          </Feed.Content>\n        </Feed.Event>\n      ));\n    }\n    return (\n      <div>\n        <Modal trigger={this.getInfoMessage()}>\n          <Modal.Header>Informasjon om Faresonen</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Header>Hvordan virker det?</Header>\n              <p>\n                Når du åpner siden du er på nå opprettes det en kobling til\n                AltomFotball. Hvert 5 sekund sjekker serveren om det har kommet\n                gule kort. Hvis det har kommet gule kort og spilleren som har\n                fått gult kort allerede er i faresonen dukker han opp i listen\n                under. Ved å klikke på navnet i listen blir spilleren markert\n                som ferdig og dukker ikke opp i listen igjen.\n              </p>\n            </Modal.Description>\n          </Modal.Content>\n        </Modal>\n        <Feed>{elements}</Feed>\n      </div>\n    );\n  }\n}\nDangerZoneAccumulator.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      person1: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired\n      })\n    })\n  ).isRequired,\n  removeEvent: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired\n};\n\nexport default DangerZoneAccumulator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Statistic} from \"semantic-ui-react\";\n\nconst socketConnected = (connected = false) => {\n  if (connected) {\n    return (\n      <Statistic>\n        <Statistic.Value>\n          <i className=\"green server icon\" />\n        </Statistic.Value>\n        <Statistic.Label>Tilkoblet server</Statistic.Label>\n      </Statistic>\n    );\n  }\n  return (\n    <Statistic>\n      <Statistic.Value>\n        <i className=\"red server icon\" />\n      </Statistic.Value>\n      <Statistic.Label>Frakoblet server</Statistic.Label>\n    </Statistic>\n  );\n};\n\nconst DangerzoneStatistics = props => (\n  <Statistic.Group widths=\"three\">\n    {socketConnected(props.socketConnected)}\n    <Statistic>\n      <Statistic.Value>{props.eliteserien}</Statistic.Value>\n      <Statistic.Label>Eliteserie-spillere</Statistic.Label>\n    </Statistic>\n    <Statistic>\n      <Statistic.Value>{props.obosligaen}</Statistic.Value>\n      <Statistic.Label>OBOSliga-spillere</Statistic.Label>\n    </Statistic>\n  </Statistic.Group>\n);\n\nDangerzoneStatistics.propTypes = {\n  socketConnected: PropTypes.bool.isRequired,\n  eliteserien: PropTypes.number.isRequired,\n  obosligaen: PropTypes.number.isRequired,\n};\nexport default DangerzoneStatistics;\n","const playerLocalStorageService = {\n  getFromLocalStorage(key) {\n    const items = JSON.parse(localStorage.getItem(key));\n    if (items) return items;\n\n    return {\n      eliteserien: [],\n      obosligaen: [],\n      lastUpdated: new Date(),\n    };\n  },\n\n  localStoragePlayersIsEmpty() {\n    const {\n      eliteserien,\n      obosligaen,\n    } = playerLocalStorageService.getFromLocalStorage(\"players\");\n    return eliteserien.length <= 0 && obosligaen.length <= 0;\n  },\n\n  playersInLocalStorageExists() {\n    return localStorage.getItem(\"players\") !== null;\n  },\n\n  saveToLocalStorage(players) {\n    const updatedPlayers = players;\n    updatedPlayers.lastUpdated = new Date();\n    localStorage.setItem(\"players\", JSON.stringify(updatedPlayers));\n  },\n};\n\nexport default playerLocalStorageService;\n","import React, {Component} from \"react\";\nimport {\n  Message,\n  Grid,\n  Dimmer,\n  Loader,\n  Segment,\n  Confirm\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport openSocket from \"socket.io-client\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport DangerzoneSearch from \"../Components/Dangerzone/DangerzoneSearch\";\nimport DangerZoneAccumulator from \"../Components/Dangerzone/DangerZoneAccumulator\";\nimport dangerzoneService from \"../services/dangerzoneService\";\nimport DangerzoneStatistics from \"../Components/Dangerzone/DangerzoneStatistics\";\nimport playerLocalStorageService from \"../services/playerLocalStorageService\";\nimport tools from \"../Tools/tools\";\nimport \"./DangerzoneView.css\";\n\nconst socket = openSocket();\n\nclass DangerzoneView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: [],\n        events: []\n      },\n      loading: true,\n      open: false,\n      socketConnected: false,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n    if (\n      !playerLocalStorageService.playersInLocalStorageExists() ||\n      playerLocalStorageService.localStoragePlayersIsEmpty()\n    ) {\n      this.getPlayers(true);\n    } else {\n      this.showModal();\n    }\n  }\n\n  componentWillUnmount() {\n    socket.close();\n  }\n\n  setupSocket = () => {\n    socket.open();\n    socket.on(\"connect\", () => {\n      this.setState({socketConnected: true});\n    });\n\n    socket.on(\"disconnect\", () => {\n      this.setState({socketConnected: false});\n    });\n\n    socket.on(\"data\", data => {\n      this.setState({socketConnected: true});\n      if (!data.events) return;\n      if (!Array.isArray(data.events)) {\n        data.events = [data.events]; // eslint-disable-line\n      }\n      const {eliteserien, obosligaen} = this.state.data;\n      const merged = eliteserien.concat(obosligaen);\n\n      const events = data.events.filter(event => {\n        if (event && event.person1) {\n          const personId = tools.extractPersonId(event.person1[\"@uri\"]);\n          if (personId > -1) {\n            const found = merged.find(p => p.id === personId);\n            if (found) {\n              return true;\n            }\n          }\n        }\n        return false;\n      });\n      this.setState(prevState => ({\n        data: {\n          ...prevState.data,\n          events\n        }\n      }));\n    });\n  };\n\n  setDefaultState = (eliteserien, obosligaen) => {\n    this.setState({\n      loading: false,\n      data: {\n        eliteserien,\n        obosligaen,\n        events: []\n      }\n    });\n  };\n\n  getPlayers = (overwrite = false) =>\n    axios\n      .get(\"/statistics/allDangerzonePlayers\")\n      .then(data => {\n        const {eliteserien, obosligaen} = data.data;\n        if (overwrite) {\n          playerLocalStorageService.saveToLocalStorage({\n            eliteserien,\n            obosligaen\n          });\n          this.setDefaultState(eliteserien, obosligaen);\n        }\n        this.setDefaultState(eliteserien, obosligaen);\n      })\n      .catch(() => {\n        const {data} = this.state;\n        this.setState({\n          data: {\n            ...data\n          },\n          loading: false,\n          error:\n            \"Kunne ikke hente spillere i faresonen. Er du koblet til internett?\"\n        });\n      });\n\n  showModal = () => {\n    this.setState({open: true});\n  };\n\n  hideModal = () => {\n    this.setState({open: false});\n  };\n\n  handleCancel = () => {\n    const {eliteserien, obosligaen} = JSON.parse(\n      localStorage.getItem(\"players\")\n    );\n    this.setState({\n      data: {\n        eliteserien,\n        obosligaen,\n        events: []\n      },\n      loading: false\n    });\n    this.hideModal();\n  };\n\n  handleConfirm = () => {\n    this.getPlayers(true);\n    this.hideModal();\n  };\n\n  formatPlayers = () => {\n    const {eliteserien, obosligaen} = this.state.data;\n    return {\n      eliteserien: dangerzoneService.groupPlayersArrayResponse(eliteserien),\n      obosligaen: dangerzoneService.groupPlayersArrayResponse(obosligaen)\n    };\n  };\n\n  removePlayer = (player, leagueId) => {\n    const {eliteserien} = this.state.data;\n    const found = eliteserien.find(p => p.id === parseInt(player.id, 10));\n    if (found) {\n      const {data} = this.state;\n      const index = data[leagueId].indexOf(found);\n      data[leagueId].splice(index, 1);\n      playerLocalStorageService.saveToLocalStorage(data);\n    }\n  };\n\n  removeEvent = event => {\n    const {data} = this.state;\n    const index = data.events.indexOf(event.event);\n    data.events.splice(index, 1);\n    this.setState({\n      data: {\n        events: data.events,\n        ...data\n      }\n    });\n  };\n\n  render() {\n    const {eliteserien, obosligaen, events} = this.state.data;\n    const {lastUpdated} = playerLocalStorageService.getFromLocalStorage(\n      \"players\"\n    );\n    const players = this.formatPlayers();\n    const {socketConnected, error, open, loading} = this.state;\n\n    return (\n      <div>\n        <FaresoneMenu />\n        <Grid columns={1}>\n          <Grid.Column>\n            <Segment>\n              <Dimmer active={loading}>\n                <Loader>Henter spiller for Eliteserien og OBOS-ligaen</Loader>\n              </Dimmer>\n              <Confirm\n                open={open}\n                header={`Sist oppdatert: ${moment(lastUpdated).fromNow()}`}\n                content=\"Det er allerede lastet ned spillere for faresonen. Ønsker du å laste ned oppdaterte spillere?\"\n                cancelButton=\"Nææh, dropp det\"\n                confirmButton=\"Ja, kjør på!\"\n                onCancel={this.handleCancel}\n                onConfirm={this.handleConfirm}\n              />\n              {error ? (\n                <Message info>{error}</Message>\n              ) : (\n                <DangerzoneStatistics\n                  eliteserien={eliteserien.length}\n                  obosligaen={obosligaen.length}\n                  socketConnected={socketConnected}\n                />\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid>\n        <Grid centered columns={2}>\n          <Grid.Column>\n            <DangerzoneSearch players={players} getPlayers={this.getPlayers} />\n          </Grid.Column>\n          <Grid.Column>\n            <DangerZoneAccumulator\n              events={events}\n              removePlayer={this.removePlayer}\n              removeEvent={this.removeEvent}\n            />\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DangerzoneView;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Segment, Form, Checkbox} from \"semantic-ui-react\";\nimport \"./FantasyPlayerFilter.css\";\n\nclass FantasyPlayerFilter extends Component {\n  handleNameSearch = search =>\n    this.props.setNameFilter(search.target.value.trim().toLowerCase());\n\n  handlePriceSearch = search => {\n    const {value} = search.target;\n    if (isNaN(value) || !value) this.props.setPriceFilter(-1);\n    else {\n      this.props.setPriceFilter(parseFloat(value, 10));\n    }\n  };\n\n  handleDreamTeamFilter = (event, data) => {\n    this.props.setDreamTeamFilter(data.checked);\n  };\n\n  render() {\n    return (\n      <Segment>\n        <p className=\"special\">\n          Her kan du filtrere spillere ved å søke etter fornavn/etternavn eller\n          filtrere på pris.\n        </p>\n        <Form>\n          <Form.Field>\n            <label htmlFor=\"freetext\">Søk fritekst</label>\n            <input\n              id=\"freetext\"\n              placeholder=\"Søk etter navn\"\n              onChange={this.handleNameSearch}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"priceFilter\">Filtrer på pris i pund (£)</label>\n            <input\n              id=\"priceFilter\"\n              type=\"number\"\n              step={0.1}\n              onChange={this.handlePriceSearch}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox\n              label=\"Vis kun Dream Team\"\n              onChange={this.handleDreamTeamFilter}\n            />\n          </Form.Field>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nFantasyPlayerFilter.propTypes = {\n  setPriceFilter: PropTypes.func.isRequired,\n  setNameFilter: PropTypes.func.isRequired,\n  setDreamTeamFilter: PropTypes.func.isRequired\n};\n\nexport default FantasyPlayerFilter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon} from \"semantic-ui-react\";\nimport \"./FantasyPlayerAnchor.css\";\n\nconst FantasyPlayerAnchor = ({\n  inDreamTeam,\n  firstName,\n  secondName,\n  onClick\n}) => (\n  <a className=\"playerAnchor\" role=\"button\" onClick={onClick} tabIndex={0}>\n    {inDreamTeam ? <Icon name=\"star\" color=\"yellow\" /> : \"\"}\n    {firstName} \n    {\" \"}\n    {secondName}\n    {\" \"}\n-\n    {\" \"}\n  </a>\n);\n\nFantasyPlayerAnchor.propTypes = {\n  inDreamTeam: PropTypes.bool.isRequired,\n  firstName: PropTypes.string.isRequired,\n  secondName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default FantasyPlayerAnchor;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Header,\n  Segment,\n  Dimmer,\n  Loader,\n  Modal,\n  Image,\n  Icon,\n} from \"semantic-ui-react\";\nimport FantasyPlayerAnchor from \"./FantasyPlayerAnchor\";\n\nclass FantasyPlayers extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  handleOpen = () => {\n  };\n\n  render() {\n    const {loading, teams} = this.props;\n    return (\n      <Segment>\n        <Dimmer active={loading}>\n          <Loader>Henter Fantasy-spillere</Loader>\n        </Dimmer>\n\n        <Header as=\"h1\">Fantasy PL</Header>\n        <Grid columns={4}>\n          {Object.keys(teams).map((key) => {\n            if (teams[key].players.length === 0) {\n              return \"\";\n            }\n            return (\n              <Grid.Column key={key}>\n                <Header as=\"h3\">{teams[key].name}</Header>\n                {Object.values(teams[key].players)\n                  .sort((a, b) => a.first_name.localeCompare(b.first_name))\n                  .map(player => (\n                    <div key={player.id}>\n                      <Modal\n                        trigger={(\n                          <FantasyPlayerAnchor\n                            onClick={this.handleOpen}\n                            firstName={player.first_name}\n                            secondName={player.second_name}\n                            inDreamTeam={player.in_dreamteam}\n                          />\n)}\n                      >\n                        <Modal.Header>\n                          {player.first_name}\n                          {\" \"}\n                          {player.second_name}\n                          {\" \"}\n                          {player.in_dreamteam ? (\n                            <Icon name=\"star\" color=\"yellow\" />\n                          ) : (\n                            \"\"\n                          )}\n                        </Modal.Header>\n                        <Modal.Content image>\n                          <Image\n                            wrapped\n                            size=\"medium\"\n                            src={`http://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p${player.photo.replace(\n                              \"jpg\",\n                              \"png\",\n                            )}`}\n                          />\n                          <Modal.Description>\n                            <div>\n                              <p>\n                                <b>Pris: </b>\n£\n                                {player.now_cost / 10}\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Poeng: </b>\n                                {player.total_points}\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Valgt av: </b>\n                                {player.selected_by_percent}\n%\n                              </p>\n                              <p>\n                                {\" \"}\n                                <b>Skader: </b>\n                                {player.news\n                                  ? `${player.news}`\n                                  : \"Ingen skader.\"}\n                              </p>\n                              {player.chancee_of_playing_next_round ? (\n                                <p>\n                                  <b>Sjanse for å spille neste runde:</b>\n                                  {\" \"}\n                                  {player.chancee_of_playing_next_round}\n%\n                                </p>\n                              ) : (\n                                \"\"\n                              )}\n                              <a href={`#/fantasy/player/${player.id}`}>\n                                Mer info\n                              </a>\n                            </div>\n                          </Modal.Description>\n                        </Modal.Content>\n                      </Modal>\n\n                      <span>\n£\n                        {player.now_cost / 10}\n                      </span>\n                    </div>\n                  ))}\n              </Grid.Column>\n            );\n          })}\n        </Grid>\n      </Segment>\n    );\n  }\n}\nFantasyPlayers.propTypes = {\n  teams: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      players: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          first_name: PropTypes.string.isRequired,\n          second_name: PropTypes.string.isRequired,\n          now_cost: PropTypes.number.isRequired,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default FantasyPlayers;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {Segment, Message} from \"semantic-ui-react\";\nimport FantasyPlayerFilter from \"../FantasyPlayerFilter\";\nimport FantasyPlayers from \"../FantasyPlayers\";\n\nclass FantasyContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        teams: []\n      },\n      filters: {\n        priceFilter: -1,\n        nameFilter: \"\",\n        onlyDreamTeam: false\n      },\n      loading: true,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .all([this.getPlayers(), this.getTeams()])\n      .then(data => {\n        const players = data[0].data;\n        const teams = data[1].data;\n        let groupedTeams = this.groupTeams(players, teams);\n        groupedTeams = Object.values(groupedTeams)\n          .map(team => team)\n          .sort((teamA, teamB) => teamA.name.localeCompare(teamB.name));\n        this.setState({\n          data: {\n            teams: groupedTeams\n          },\n          loading: false,\n          error: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error:\n            \"Det oppsto dessverre et problem ved henting av spillere. Det kan være fordi PL-Fantasy oppdateres eller fordi du ikke er koblet til internett.\",\n          loading: false\n        });\n      });\n  }\n\n  getPlayers = () => axios.get(\"/fantasy/players\");\n\n  getTeams = () => axios.get(\"/fantasy/teams\");\n\n  setNameFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        nameFilter: filter\n      }\n    }));\n  };\n\n  setPriceFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        priceFilter: filter\n      }\n    }));\n  };\n\n  setDreamTeamFilter = filter => {\n    this.setState(prevState => ({\n      filters: {\n        ...prevState.filters,\n        onlyDreamTeam: filter\n      }\n    }));\n  };\n\n  filterTeams = (teams, filters) => {\n    if (\n      !filters.nameFilter &&\n      filters.priceFilter < 0 &&\n      !filters.onlyDreamTeam\n    )\n      return teams;\n    // Dette er kanskje en veldig rar løsning på filtreringen, men jeg er bakfull og gidder ikke se mer på det nå. Det\n    // virker enn så lenge... 08.04.18\n    const filtered = teams.map(team => {\n      const teamCopy = Object.assign({}, team);\n      const filteredPlayers = teamCopy.players.filter(player => {\n        if (filters.onlyDreamTeam) {\n          return player.in_dreamteam;\n        }\n        if (filters.priceFilter <= 0) {\n          return this.mergeName(player.first_name, player.second_name)\n            .toLowerCase()\n            .includes(filters.nameFilter);\n        }\n        if (filters.priceFilter > 0 && !filters.nameFilter) {\n          return this.formatPrice(player.now_cost) >= filters.priceFilter;\n        }\n        if (filters.onlyDreamTeam) {\n          return player.in_dreamteam;\n        }\n        return (\n          this.mergeName(player.first_name, player.second_name)\n            .toLowerCase()\n            .includes(filters.nameFilter) &&\n          this.formatPrice(player.now_cost) >= filters.priceFilter\n        );\n      });\n      teamCopy.players = filteredPlayers;\n      return teamCopy;\n    });\n    return filtered;\n  };\n\n  mergeName = (first, last) => `${first} ${last}`;\n\n  formatPrice = price => price / 10;\n\n  groupTeams = (players, teams) =>\n    players.reduce((obj, player) => {\n      const team = teams.find(\n        teamToFind => teamToFind.code === player.team_code\n      );\n      if (obj[player.team_code]) {\n        // eslint-disable-next-line\n        player.team = team;\n        obj[player.team_code].players.push(player);\n      } else {\n        // eslint-disable-next-line\n        obj[player.team_code] = {\n          name: team.name,\n          players: []\n        };\n      }\n      return obj;\n    }, {});\n\n  render() {\n    const teams = this.filterTeams(this.state.data.teams, this.state.filters);\n    return (\n      <div>\n        {this.state.error ? (\n          <Segment>\n            <Message warning>{this.state.error}</Message>\n          </Segment>\n        ) : (\n          \"\"\n        )}\n        <FantasyPlayerFilter\n          setNameFilter={this.setNameFilter}\n          setPriceFilter={this.setPriceFilter}\n          setDreamTeamFilter={this.setDreamTeamFilter}\n        />\n        <FantasyPlayers teams={teams} loading={this.state.loading} />\n      </div>\n    );\n  }\n}\nexport default FantasyContainer;\n","import React from \"react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FantasyContainer from \"../Components/FantasyPl/Containers/FantasyContainer\";\n\nconst FantasyView = () => (\n  <div>\n    <FaresoneMenu />\n    <FantasyContainer />\n  </div>\n);\nexport default FantasyView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Card, Image, Icon} from \"semantic-ui-react\";\n\nconst PlayerProfile = ({\n  name,\n  news,\n  photo,\n  chanceOfPlayingNextRound,\n  inDreamTeam,\n  cost,\n  selectedBy,\n  points,\n  teamName,\n}) => (\n  <div>\n    <Card>\n      <Image\n        src={\n            photo\n              ? `http://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p${photo.replace(\n                \"jpg\",\n                \"png\",\n              )}`\n              : \"\"\n          }\n      />\n      <Card.Content>\n        <Card.Header>\n          {name}\n,\n          {teamName}\n          {\" \"}\n          {inDreamTeam ? <Icon name=\"star\" color=\"yellow\" /> : \"\"}\n        </Card.Header>\n        <div>\n          <Card.Description>\n            <b>Pris: </b>\n£\n            {cost / 10}\n          </Card.Description>\n          <Card.Description>\n            <b>Poeng: </b>\n            {points}\n          </Card.Description>\n          <Card.Description>\n            <b>Valgt av: </b>\n            {selectedBy}\n%\n          </Card.Description>\n          <Card.Description>\n            <b>Skader: </b>\n            {news ? `${news}` : \"Ingen skader.\"}\n          </Card.Description>\n          {chanceOfPlayingNextRound ? (\n            <Card.Description>\n              <b>Sjanse for å spille neste runde:</b>\n              {\" \"}\n              {chanceOfPlayingNextRound}\n%\n            </Card.Description>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Card.Content>\n    </Card>\n  </div>\n);\nPlayerProfile.propTypes = {\n  name: PropTypes.string,\n  teamName: PropTypes.string,\n  news: PropTypes.string,\n  photo: PropTypes.string,\n  chanceOfPlayingNextRound: PropTypes.number,\n  inDreamTeam: PropTypes.bool,\n  cost: PropTypes.number,\n  selectedBy: PropTypes.string,\n  points: PropTypes.number,\n};\n\nPlayerProfile.defaultProps = {\n  name: \"\",\n  news: \"\",\n  photo: \"\",\n  chanceOfPlayingNextRound: -1,\n  inDreamTeam: false,\n  cost: -1,\n  selectedBy: \"\",\n  points: -1,\n  teamName: \"\",\n};\nexport default PlayerProfile;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport {Grid, Statistic, Segment} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../../Menu/FaresoneMenu\";\nimport PlayerProfile from \"../PlayerProfile\";\n\nclass PlayerStatsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        player: {},\n        team: {}\n      }\n    };\n  }\n\n  componentDidMount = () => {\n    const {playerId} = this.props;\n    axios.get(`/fantasy/player/${playerId}`).then(data => {\n      const player = data.data;\n      if (player.team_code) {\n        this.getTeam(player.team_code);\n      }\n      this.setState(prevState => ({\n        data: {\n          ...prevState.data,\n          player: data.data\n        }\n      }));\n    });\n  };\n\n  // TODO Fetch team based on team code\n  getTeam = teamId => {\n    axios.get(`/fantasy/team/${teamId}`).then(data => {\n      this.setState(prevState => ({\n        data: {\n          ...prevState.data,\n          team: data.data\n        }\n      }));\n    });\n  };\n\n  mapStats = player => [\n    {key: \"goals\", label: \"Mål\", value: player.goals_scored},\n    {key: \"assists\", label: \"Assists\", value: player.assists},\n    {\n      key: \"pointsPerGame\",\n      label: \"Poeng per kamp\",\n      value: player.points_per_game\n    },\n    {key: \"minPlayed\", label: \"Min. spilt\", value: player.minutes},\n    {key: \"influence\", label: \"Påvirkning\", value: player.influence},\n    {key: \"creativity\", label: \"Kreativitet\", value: player.creativity},\n    {key: \"form\", label: \"Form\", value: player.form},\n    {key: \"bonus\", label: \"Bonus\", value: player.bonus}\n  ];\n\n  render() {\n    const {player, team} = this.state.data;\n\n    const items = this.mapStats(player);\n    return (\n      <div>\n        <FaresoneMenu />\n        <Grid columns={2}>\n          <Grid.Column>\n            <PlayerProfile\n              name={`${player.first_name} ${player.second_name}`}\n              teamName={team.name}\n              news={player.news}\n              photo={player.photo}\n              chanceOfPlayingNextRound={player.chance_of_playing_next_round}\n              inDreamTeam={player.in_dreamteam}\n              points={player.total_points}\n              selectedBy={player.selected_by_percent}\n              cost={player.now_cost}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>\n              <Statistic.Group widths={2} items={items} />\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nPlayerStatsContainer.propTypes = {\n  playerId: PropTypes.string.isRequired\n};\n\nexport default PlayerStatsContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlayerStatsContainer from \"../Components/PlayerStats/Containers/PlayerStatsContainer\";\n\nconst DetailedPlayerView = ({\n  match: {\n    params: {playerId}\n  }\n}) => <PlayerStatsContainer playerId={playerId} />;\n\nDetailedPlayerView.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      playerId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default DetailedPlayerView;\n","class Abbreviations {\n  constructor() {\n    this.eliteserieAbbr = {\n      Kristiansund: \"KBK\",\n      Molde: \"MFK\",\n      Lillestrøm: \"LSK\",\n      Sandefjord: \"SAN\",\n      \"Sarpsborg 08\": \"S08\",\n      Stabæk: \"STB\",\n      Strømsgodset: \"SIF\",\n      Haugesund: \"FKH\",\n      Tromsø: \"TIL\",\n      Brann: \"BRA\",\n      Rosenborg: \"RBK\",\n      Odd: \"ODD\",\n      Vålerenga: \"VIF\",\n      Start: \"STA\",\n      Ranheim: \"RAN\",\n      \"Bodø/Glimt\": \"B/G\",\n    };\n\n    this.obosligaAbbr = {\n      Aalesund: \"AaFK\",\n      Notodden: \"NOT\",\n      Tromsdalen: \"TRO\",\n      Åsane: \"ÅSA\",\n      Florø: \"FLO\",\n      Jerv: \"JER\",\n      Mjøndalen: \"MJØ\",\n      HamKam: \"HAM\",\n      Sogndal: \"SOG\",\n      Strømmen: \"STR\",\n      \"Sandnes Ulf\": \"ULF\",\n      \"Nest-Sotra\": \"NEST\",\n      \"Ullensaker/Kisa\": \"UKI\",\n      Viking: \"VIK\",\n      Levanger: \"LEV\",\n      Kongsvinger: \"KON\",\n    };\n  }\n\n  getAbbreviations = (name, league) => {\n    if (league.toLowerCase() === \"eliteserien\") {\n      const abbrev = this.eliteserieAbbr[name];\n      if (abbrev) return abbrev;\n\n      throw new Error(`Could not find abbreviation for ${name}`);\n    } else if (league.toLowerCase() === \"obosligaen\") {\n      const abbrev = this.obosligaAbbr[name];\n      if (abbrev) return abbrev;\n\n      throw new Error(`Could not find abbreviation for ${name}`);\n    }\n\n    throw new Error(\n      `${league} is an invalid league. Use Eliteserien or Obosligaen`,\n    );\n  };\n}\n\nexport default Abbreviations;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Header,\n  Table,\n  Segment,\n  Dimmer,\n  Loader,\n  TextArea,\n  Grid\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport \"moment/locale/nb\";\nimport Abbreviations from \"../../Tools/Abbreviations\";\nimport \"./MatchFeed.css\";\n\nclass MatchFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        matches: [],\n        freeText: \"\"\n      },\n      loading: true\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState(\n      {\n        data: {\n          matches: nextProps.matches\n        },\n        loading: false\n      },\n      () => {\n        this.formatFreeText(this.props.league);\n      }\n    );\n  }\n\n  getBestBetColor = bet => {\n    if (bet === null) {\n      return \"\";\n    }\n    return bet ? \"green\" : \"red\";\n  };\n\n  createBetCell = (bet, bestBet = null) => {\n    const cssColor = this.getBestBetColor(bestBet);\n    if (bet) {\n      return (\n        <Table.Cell className={cssColor} width={3}>\n          {this.formatPercent(bet)}\n        </Table.Cell>\n      );\n    }\n    return <Table.Cell>-</Table.Cell>;\n  };\n\n  betsNotReadyElement = match => (\n    <Table.Row key={match.matchId}>\n      <Table.Cell>\n        {match.homeTeamName} -{match.awayTeamName}\n      </Table.Cell>\n      <Table.Cell width={5}>\n        {moment(match.start).format(\"dddd DD. MMMM HH:mm\")}\n      </Table.Cell>\n      {this.createBetCell()}\n      {this.createBetCell()}\n      {this.createBetCell()}\n    </Table.Row>\n  );\n\n  createElements = matches => {\n    if (!matches) return [];\n\n    return matches.map(m => {\n      if (!m.bets) return this.betsNotReadyElement(m);\n\n      const {homeValue, drawValue, awayValue} = m.bets.oddsMarkets[0];\n      return (\n        <Table.Row key={m.matchId}>\n          <Table.Cell>\n            {m.homeTeamName} -{m.awayTeamName}\n          </Table.Cell>\n          <Table.Cell width={5}>\n            {moment(m.start).format(\"dddd DD. MMMM HH:mm\")}\n          </Table.Cell>\n          {this.createBetCell(homeValue, homeValue > awayValue)}\n          {this.createBetCell(drawValue)}\n          {this.createBetCell(awayValue, awayValue > homeValue)}\n        </Table.Row>\n      );\n    });\n  };\n\n  formatPercent = value => `${(value * 100).toFixed(1)} %`;\n\n  formatFreeText = league => {\n    if (this.state.data.matches.length > 0) {\n      const abbrevs = new Abbreviations();\n      const text = this.state.data.matches\n        .map(m => {\n          if (!m.bets) return \"\";\n\n          const homeTeamAbbrev = abbrevs.getAbbreviations(\n            m.homeTeamName,\n            league\n          );\n          const awayTeamAbbrev = abbrevs.getAbbreviations(\n            m.awayTeamName,\n            league\n          );\n\n          const homeTeamBet = this.formatPercent(\n            m.bets.oddsMarkets[0].homeValue\n          );\n\n          const drawBet = this.formatPercent(m.bets.oddsMarkets[0].drawValue);\n\n          const awayTeamBet = this.formatPercent(\n            m.bets.oddsMarkets[0].awayValue\n          );\n\n          return `${homeTeamAbbrev} - ${awayTeamAbbrev}\\nH: ${homeTeamBet} U: ${drawBet} B: ${awayTeamBet}`;\n        })\n        .join(\"\\n\\n\");\n      this.setState(prevState => ({\n        data: {\n          freeText: text,\n          matches: prevState.data.matches\n        }\n      }));\n    } else {\n      this.setState(prevState => ({\n        data: {\n          freeText: \"\",\n          matches: prevState.data.matches\n        }\n      }));\n    }\n  };\n\n  render() {\n    const elements = this.createElements(this.state.data.matches);\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Segment>\n            <Dimmer active={this.state.loading}>\n              <Loader>\n                Henter kamper for\n                {this.props.league}\n              </Loader>\n            </Dimmer>\n\n            <Header as=\"h3\">{this.props.league}</Header>\n\n            <Table striped>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Kamp</Table.HeaderCell>\n                  <Table.HeaderCell>Dato/Kl.</Table.HeaderCell>\n                  <Table.HeaderCell>Hjemme</Table.HeaderCell>\n                  <Table.HeaderCell>Uavgjort</Table.HeaderCell>\n                  <Table.HeaderCell>Borte</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>{elements}</Table.Body>\n            </Table>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Fritekst til stolpe</Header>\n          <span>Her dukker bare kamper som begynner kl. 18.00 opp.</span>\n          <TextArea\n            className=\"wide-text\"\n            autoHeight\n            value={this.state.data.freeText}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nMatchFeed.propTypes = {\n  league: PropTypes.string.isRequired,\n  matches: PropTypes.array.isRequired\n};\nexport default MatchFeed;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass DateFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        date: moment(new Date()).format(\"YYYY-MM-DD\")\n      }\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.updateDate(new Date(event.target.value));\n    this.setState({data: {date: event.target.value}});\n  };\n\n  render() {\n    return (\n      <div>\n        <p>\n          <label htmlFor=\"date\">Velg dato</label>\n        </p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"datefilter\"\n          value={this.state.data.date}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\nDateFilter.propTypes = {\n  updateDate: PropTypes.func.isRequired\n};\nexport default DateFilter;\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\nimport {\n  Header,\n  Segment,\n  Loader,\n  Dimmer,\n  Divider,\n  Message\n} from \"semantic-ui-react\";\nimport MatchFeed from \"../Components/Feeds/MatchFeed\";\nimport DateFilter from \"../Components/Filters/DateFilter\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\n\nclass GigSportsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        eliteserien: [],\n        obosligaen: []\n      },\n      dateFilter: new Date(),\n      loading: true,\n      error: \"\"\n    };\n    this.gigDomain = process.env.REACT_APP_GIG_SPORTS_DOMAIN;\n  }\n\n  componentDidMount() {\n    document.title = \"Odds\";\n    Promise.all([this.fetchMatches(), this.fetchBets()])\n      .then(values => {\n        const eliteserien = this.extractLeague(values, 0);\n        const obosligaen = this.addHours(this.extractLeague(values, 1), 2);\n\n        const bets = values[1].feed;\n        const eliteserieBets = this.connectGamesAndBets(eliteserien, bets);\n        const obosligaBets = this.connectGamesAndBets(obosligaen, bets);\n        this.setState({\n          data: {\n            eliteserien: eliteserieBets,\n            obosligaen: obosligaBets\n          },\n          loading: false\n        });\n      })\n      .catch(() => {\n        this.updateError(\"Kunne ikke hente odds. Er du koblet til internett?\");\n      });\n  }\n\n  extractLeague = (values, index) => {\n    try {\n      return values[0].competitions[index].matches;\n    } catch (err) {\n      this.setState({\n        error:\n          \"Det var problemer med henting av data. Mest sannsynlig finnes det ikke kamper fra Gigsports.\"\n      });\n      return [];\n    }\n  };\n\n  addHours = (matches, hour) => {\n    if (matches) {\n      return matches.map(match => ({\n        ...match,\n        start: moment(match.start)\n          .add(hour, \"hours\")\n          .format()\n      }));\n    }\n    return [];\n  };\n\n  filterMatchesByDate = (matches, date = new Date()) =>\n    matches.filter(match => {\n      const matchDay = new Date(match.start).toDateString();\n      return matchDay === date.toDateString();\n    });\n\n  connectGamesAndBets = (matches, bets) => {\n    if (!matches) return [];\n    return matches.map(match => {\n      const foundBet = bets.find(bet => bet.matchId === match.matchId);\n      const connectedMatch = {\n        bets: null\n      };\n      connectedMatch.bets = foundBet;\n      return connectedMatch;\n    });\n  };\n\n  fetchMatches = () =>\n    fetch(\n      `${\n        this.gigDomain\n      }Customers/TV2/MatchFeed?apiKey=a1476rz9nz3wh0x5denb8ij54cxo47yr`\n    )\n      .then(response => response.json())\n      .catch(() =>\n        this.updateError(\n          \"Kunne ikke hente kamper fra GIG Sports. Er du koblet til internett?\"\n        )\n      );\n\n  fetchBets = () =>\n    fetch(\n      `${\n        this.gigDomain\n      }Customers/Tv2/OddsFeed/Pregame?apiKey=a1476rz9nz3wh0x5denb8ij54cxo47yr`\n    )\n      .then(response => response.json())\n      .catch(() =>\n        this.updateError(\n          \"Kunne ikke hente odds fra GIG Sports. Er du koblet til internett?\"\n        )\n      );\n\n  updateDate = date => this.setState({dateFilter: date});\n\n  updateError = message =>\n    this.setState(prevState => ({\n      ...prevState,\n      error: message,\n      loading: false\n    }));\n\n  render() {\n    let {eliteserien, obosligaen} = this.state.data;\n    eliteserien = this.filterMatchesByDate(eliteserien, this.state.dateFilter);\n    obosligaen = this.filterMatchesByDate(obosligaen, this.state.dateFilter);\n    return (\n      <div>\n        <FaresoneMenu />\n        <Segment>\n          <Dimmer active={this.state.loading}>\n            <Loader>Henter kamper</Loader>\n          </Dimmer>\n          {this.state.error ? (\n            <Message info>{this.state.error}</Message>\n          ) : (\n            <Header as=\"h1\">Odds</Header>\n          )}\n          <DateFilter updateDate={this.updateDate} />\n          <Divider />\n          <MatchFeed matches={eliteserien} league=\"Eliteserien\" />\n          <MatchFeed matches={obosligaen} league=\"Obosligaen\" />\n        </Segment>\n      </div>\n    );\n  }\n}\nexport default GigSportsView;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, {useState} from \"react\";\nimport {Form, Button} from \"semantic-ui-react\";\nimport firebaseConfig from \"../../databaseConfig/firebaseConfig\";\n\nconst LogInAdmin = () => {\n  const [email, setEmail] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleEmailChange = e => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const handlePwdChange = e => {\n    e.preventDefault();\n    setPwd(e.target.value);\n  };\n\n  const signIn = e => {\n    e.preventDefault();\n    firebaseConfig\n      .auth()\n      .signInWithEmailAndPassword(email, pwd)\n      .catch(() => {\n        setError(\"Brukernavn eller passord er feil.\");\n      });\n  };\n\n  return (\n    <Form>\n      <Form.Field>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          required\n          onChange={handleEmailChange}\n          autoComplete=\"email\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"pwd\">Passord</label>\n        <input\n          placeholder=\"Passord\"\n          type=\"password\"\n          name=\"pwd\"\n          value={pwd}\n          onChange={handlePwdChange}\n          autoComplete=\"password\"\n        />\n      </Form.Field>\n      {error ? <span style={{display: \"block\"}}>{error}</span> : \"\"}\n      <Button onClick={signIn} type=\"submit\">\n        Logg inn\n      </Button>\n    </Form>\n  );\n};\nexport default LogInAdmin;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button, Segment, Header, Dropdown,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\n\nclass AddLeaguesContainer extends Component {\n  addLeagues = (e, {value: values}) => {\n    // Get values and return promises for each\n    const promises = values.map(value => altOmFotballLeagueService.getLeagueData(value));\n    // Fetch data about each league\n    axios.all(promises).then((data) => {\n      const leagueData = data.map(d => d.data);\n      this.props.setSelectedLeagues(leagueData);\n    });\n  };\n\n  saveLeagues = () => {\n    const leagues = {};\n    this.props.selectedLeagues.forEach((league) => {\n      leagues[league.id] = league;\n    });\n\n    this.props.saveSelectedLeagues(leagues);\n  };\n\n  render() {\n    const {selectedLeagues, altOmFotballLeagues} = this.props;\n    return (\n      <Segment>\n        <Header as=\"h2\">Legg til ligaer</Header>\n        <Dropdown\n          placeholder=\"Velg ligaer\"\n          fluid\n          multiple\n          search\n          selection\n          onChange={this.addLeagues}\n          options={altOmFotballLeagues.map(league => ({\n            name: league.name,\n            text: league.name,\n            value: parseFloat(league.id),\n          }))}\n        />\n        <Button\n          disabled={selectedLeagues.length === 0}\n          onClick={this.saveLeagues}\n        >\n          Lagre kamper til database\n        </Button>\n      </Segment>\n    );\n  }\n}\nAddLeaguesContainer.propTypes = {\n  selectedLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  altOmFotballLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setSelectedLeagues: PropTypes.func.isRequired,\n  saveSelectedLeagues: PropTypes.func.isRequired,\n};\nexport default AddLeaguesContainer;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Segment, Header, Card, Dimmer, Loader,\n} from \"semantic-ui-react\";\nimport \"./RemoveLeaguesContainer.css\";\n\nclass RemoveLeaguesContainer extends Component {\n  removeLeague = (event) => {\n    const {id} = event.target.dataset;\n    this.props.removeLeague(id);\n  };\n\n  render() {\n    const {leagues, loading} = this.props;\n    if (leagues.length === 0) {\n      return \"\";\n    }\n    return (\n      <Segment>\n        <Dimmer active={loading}>\n          <Loader>Henter ligaer</Loader>\n        </Dimmer>\n        <Header as=\"h2\">Fjern ligaer</Header>\n        <Card.Group>\n          {leagues.map(league => (\n            <Card key={league.id}>\n              <Card.Content>\n                <Card.Header>{league.name}</Card.Header>\n                <Card.Meta>\nID:\n                  {league.id}\n                </Card.Meta>\n                <Card.Meta>\n                  Aktiv sesong:\n                  {\" \"}\n                  <a href={league.activeseason[\"@uri\"]}>\n                    {league.activeseason[\"@uri\"]}\n                  </a>\n                </Card.Meta>\n                <Card.Description\n                  className=\"remove-league\"\n                  data-id={league.id}\n                  onClick={this.removeLeague}\n                >\n                  Klikk her for å fjerne ligaen\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      </Segment>\n    );\n  }\n}\nRemoveLeaguesContainer.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      activeseason: PropTypes.shape({\n        \"@uri\": PropTypes.string.isRequired,\n      }).isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  removeLeague: PropTypes.func.isRequired,\n};\nexport default RemoveLeaguesContainer;\n","import firebaseConfig from \"../databaseConfig/firebaseConfig\";\n\nclass FirebaseService {\n  constructor() {\n    this.database = firebaseConfig.database();\n  }\n\n  getLeagues = cb => {\n    const leagueRef = this.database.ref(\"leagues\");\n    leagueRef.on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  updateLeague = ({name, seasonId, tournamentId}) => {\n    const leagueName = name.toLowerCase();\n    this.database.ref(`leagues/${leagueName}`).set({\n      name,\n      active: true,\n      seasonId,\n      tournamentId\n    });\n  };\n\n  saveLeagues = leagues => {\n    Object.keys(leagues).forEach(key => {\n      this.database.ref(`leagues/${key}`).set(leagues[key], error => {\n        if (!error) {\n          console.log(\"League savings went okay\"); // eslint-disable-line\n        } else {\n          console.warn(\"There was an error saving the leagues to the database\"); // eslint-disable-line\n          console.warn(error); // eslint-disable-line\n        }\n      });\n    });\n  };\n\n  removeLeague = id => {\n    this.database.ref(`leagues/${id}`).remove();\n  };\n\n  getColors = cb => {\n    const colorRef = this.database.ref(\"colors\");\n    colorRef.on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  addColor = (id, color) =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`colors/${this.removeFirebaseSpecializedCharacters(id, \"#\")}`)\n        .set(color, error => {\n          if (!error) {\n            resolve({message: `${color.text} lagret til databasen`});\n          } else {\n            reject(\n              new Error({\n                message: `${color.text} kunne ikke bli lagret i databasen.`,\n                error\n              })\n            );\n          }\n        });\n    });\n\n  removeFirebaseSpecializedCharacters = (ref, char) => ref.replace(char, \"\");\n\n  removeColor = key =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`colors/${this.removeFirebaseSpecializedCharacters(key, \"#\")}`)\n        .remove()\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n\n  addChannel = channel =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`channels/${channel.value}`)\n        .set(channel)\n        .then(() => resolve({message: \"Kanal lagret i database\"}))\n        .catch(error =>\n          reject(\n            new Error({message: \"Kanal kunne ikke lagres i databasen\", error})\n          )\n        );\n    });\n\n  removeChannel = key =>\n    new Promise((resolve, reject) => {\n      this.database\n        .ref(`channels/${key}`)\n        .remove()\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    });\n\n  getChannels = cb => {\n    this.database.ref(\"channels\").on(\"value\", snapshot => {\n      cb(this.mapLeaguesToList(snapshot.val()));\n    });\n  };\n\n  mapLeaguesToList = data => {\n    if (!data) return [];\n    return Object.keys(data).map(key => data[key]);\n  };\n}\n\nexport default FirebaseService;\n","import React, {Component} from \"react\";\nimport AddLeaguesContainer from \"./AddLeaguesContainer\";\nimport RemoveLeaguesContainer from \"./RemoveLeaguesContainer\";\nimport FirebaseService from \"../../../services/FirebaseService\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\n\nclass LeaguesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      altOmFotballLeagues: [],\n      leagues: [],\n      selectedLeagues: [],\n      loading: true,\n    };\n    this.service = new FirebaseService();\n    this.getAltOmFotballLeagues = this.getAltOmFotballLeagues.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAltOmFotballLeagues();\n    this.getLeagues();\n  }\n\n  getLeagues = () => {\n    this.service.getLeagues(this.processLeagues);\n  };\n\n  getAltOmFotballLeagues = () => {\n    altOmFotballLeagueService.getAllLeagues().then((data) => {\n      this.setState({altOmFotballLeagues: data.data.tournament});\n    });\n  };\n\n  setSelectedLeagues = selectedLeagues => this.setState({selectedLeagues});\n\n  saveSelectedLeagues = (selectedLeagues) => {\n    this.service.saveLeagues(selectedLeagues);\n  };\n\n  removeLeague = id => this.service.removeLeague(id);\n\n  processLeagues = (leagues) => {\n    this.setState({leagues, loading: false});\n  };\n\n  render() {\n    const {\n      leagues,\n      selectedLeagues,\n      altOmFotballLeagues,\n      loading,\n    } = this.state;\n    return (\n      <div>\n        <AddLeaguesContainer\n          altOmFotballLeagues={altOmFotballLeagues}\n          selectedLeagues={selectedLeagues}\n          setSelectedLeagues={this.setSelectedLeagues}\n          saveSelectedLeagues={this.saveSelectedLeagues}\n        />\n        <RemoveLeaguesContainer\n          leagues={leagues}\n          loading={loading}\n          removeLeague={this.removeLeague}\n        />\n      </div>\n    );\n  }\n}\nexport default LeaguesContainer;\n","export default [\"#e90052\", \"#38003c\", \"#00FF87\", \"#eaff04\", \"#04f5ff\", \"#fff\"];\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form, Button, Message} from \"semantic-ui-react\";\nimport {SketchPicker} from \"react-color\";\n\nimport premierLeagueDefaultColors from \"../../Data/premierLeagueDefaultColors\";\n\nclass NewColorForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveColor = this.saveColor.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  constructColorObject = (name, hex, number) => ({\n    color: name,\n    key: name,\n    text: name,\n    value: number,\n    hex\n  });\n\n  saveColor = e => {\n    e.preventDefault();\n    const form = document.forms.colorForm;\n    if (form.checkValidity()) {\n      const {\n        color: {key, hex, value}\n      } = this.props;\n      const colorObject = this.constructColorObject(key, hex, value);\n      const colorKey = hex.replace(\"#\", \"\");\n      this.props.saveColor(colorKey, colorObject);\n    }\n  };\n\n  handleChange = (e, {name, value}) => {\n    const valid = this.formIsValid();\n    this.props.handleChange(name, value, valid);\n  };\n\n  handleColorChange = color => {\n    const valid = this.formIsValid();\n    this.props.handleColorChange(color.hex, valid);\n  };\n\n  formIsValid = () => document.forms.colorForm.checkValidity();\n\n  render() {\n    const {\n      color: {key, value, hex},\n      error,\n      valid\n    } = this.props;\n\n    return (\n      <div>\n        {error ? (\n          <Message warning>\n            <Message.Header>Lagring av farge feilet</Message.Header>\n            <p>{error.message}</p>\n          </Message>\n        ) : (\n          \"\"\n        )}\n        <Form name=\"colorForm\" onSubmit={this.saveColor}>\n          <Form.Field>\n            <label htmlFor=\"key\">Navn på farge</label>\n            <Form.Input\n              placeholder=\"Navn på farge\"\n              required\n              name=\"key\"\n              onChange={this.handleChange}\n              value={key}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"value\">Numerisk verdi (mappet mot grafikk)</label>\n            <Form.Input\n              type=\"number\"\n              required\n              name=\"value\"\n              value={value}\n              onChange={this.handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"hex\">Farge</label>\n            <SketchPicker\n              presetColors={premierLeagueDefaultColors}\n              onChange={this.handleColorChange}\n              color={hex}\n            />\n          </Form.Field>\n          <Button color=\"green\" disabled={!valid} type=\"submit\">\n            Lagre farge\n          </Button>\n          <Button color=\"teal\" onClick={this.props.resetForm}>\n            Resett form\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\nNewColorForm.propTypes = {\n  saveColor: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    hex: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string.isRequired\n  }),\n  valid: PropTypes.bool.isRequired,\n  resetForm: PropTypes.func.isRequired\n};\n\nNewColorForm.defaultProps = {\n  error: undefined\n};\nexport default NewColorForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Icon} from \"semantic-ui-react\";\n\nconst EditColors = ({\n  colors, loading, editColor, deleteColor,\n}) => {\n  if (loading) {\n    return <p>Henter kanaler...</p>;\n  }\n  return (\n    <Grid columns={2}>\n      {colors\n        .sort((a, b) => parseInt(a.value, 10) >= parseInt(b.value, 10))\n        .map(color => (\n          <Grid.Column key={color.hex}>\n            <p style={{fontWeight: \"bold\"}}>{color.text}</p>\n            <div\n              style={{\n                width: \"50px\",\n                height: \"50px\",\n                backgroundColor: `${color.hex}`,\n                border: \"1px solid lightgray\",\n                borderRadius: \"5px\",\n              }}\n            />\n            <p>\n              {color.hex}\n              <br />\n                ID:\n              {\" \"}\n              {color.value}\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <span\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => {\n                  editColor(color);\n                }}\n              >\n                <Icon name=\"edit\" />\nRediger\n              </span>\n              <span\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => deleteColor(color.hex)}\n              >\n                <Icon name=\"delete\" />\nFjern\n              </span>\n            </div>\n          </Grid.Column>\n        ))}\n    </Grid>\n  );\n};\n\nEditColors.propTypes = {\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  editColor: PropTypes.func.isRequired,\n  deleteColor: PropTypes.func.isRequired,\n};\nexport default EditColors;\n","import React, {Component} from \"react\";\nimport {Grid, Header} from \"semantic-ui-react\";\nimport NewColorForm from \"../NewColorForm\";\nimport EditColors from \"../EditColors\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ColorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      selectedColor: {\n        key: \"\",\n        value: \"0\",\n        hex: \"FFFFFF\"\n      },\n      loading: true,\n      valid: false\n    };\n    this.service = new FirebaseService();\n    this.saveColor = this.saveColor.bind(this);\n  }\n\n  componentDidMount() {\n    this.getColors();\n  }\n\n  getColors = () => {\n    this.service.getColors(this.processColors);\n  };\n\n  setColor = color => this.setState({selectedColor: color});\n\n  saveColor = (key, color) => {\n    if (!key) throw new Error(\"Cannot save color without a key\");\n    if (!color) throw new Error(\"Cant save an empty color object\");\n    return new Promise((resolve, reject) => {\n      this.service\n        .addColor(key, color)\n        .then(data => {\n          resolve(data);\n          this.resetForm();\n        })\n        .catch(error => reject(error));\n    });\n  };\n\n  deleteColor = key => {\n    if (!key) throw new Error(\"Cannot delete color without a key\");\n    return new Promise((resolve, reject) => {\n      this.service\n        .removeColor(key)\n        .then(data => {\n          resolve(data);\n          this.resetForm();\n        })\n        .catch(error => reject(error));\n    });\n  };\n\n  resetForm = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      selectedColor: {\n        key: \"\",\n        value: \"0\",\n        hex: \"FFFFFF\"\n      }\n    }));\n  };\n\n  editColor = color => {\n    this.setState({selectedColor: color});\n  };\n\n  processColors = colors => this.setState({colors, loading: false});\n\n  handleChange = (name, value, valid) => {\n    this.setState(prevState => ({\n      ...prevState,\n      valid,\n      selectedColor: {\n        ...prevState.selectedColor,\n        [name]: value\n      }\n    }));\n  };\n\n  handleColorChange = (hexColor, valid) => {\n    this.setState(prevState => ({\n      ...prevState,\n      valid,\n      selectedColor: {\n        ...prevState.selectedColor,\n        hex: hexColor\n      }\n    }));\n  };\n\n  render() {\n    const {colors, selectedColor, loading, valid} = this.state;\n\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Header as=\"h3\">Legg til ny farge</Header>\n          <NewColorForm\n            handleChange={this.handleChange}\n            handleColorChange={this.handleColorChange}\n            color={selectedColor}\n            saveColor={this.saveColor}\n            valid={valid}\n            resetForm={this.resetForm}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Rediger farger</Header>\n          <EditColors\n            colors={colors}\n            loading={loading}\n            editColor={this.editColor}\n            deleteColor={this.deleteColor}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nexport default ColorContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form, Button, Message} from \"semantic-ui-react\";\n\nconst NewChannelForm = ({\n  selectedChannel: {name, value},\n  valid,\n  message,\n  addChannel,\n  handleChange\n}) => {\n  const handleChangeAndValidateForm = (e, {name, value}) => {\n    const valid = document.forms.channelForm.checkValidity();\n    handleChange(name, value, valid);\n  };\n\n  return (\n    <div>\n      {message ? (\n        <Message info>\n          <Message.Header>Lagring av kanal</Message.Header>\n          <p>{message}</p>\n        </Message>\n      ) : (\n        \"\"\n      )}\n      <Form name=\"channelForm\" onSubmit={addChannel}>\n        <Form.Field>\n          <label htmlFor=\"name\">Kanalnavn</label>\n          <Form.Input\n            placeholder=\"TV 2\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeAndValidateForm}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"value\">Numerisk verdi</label>\n          <Form.Input\n            type=\"number\"\n            min=\"1\"\n            required\n            name=\"value\"\n            value={value}\n            onChange={handleChangeAndValidateForm}\n          />\n        </Form.Field>\n\n        <Button color=\"green\" disabled={!valid} type=\"submit\">\n          Lagre/endre kanal\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nNewChannelForm.propTypes = {\n  selectedChannel: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  addChannel: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired\n};\n\nexport default NewChannelForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Grid, Icon} from \"semantic-ui-react\";\n\nconst EditChannels = ({\n  channels, loading, editChannel, deleteChannel,\n}) => (loading ? (\n  <p>Henter kanaler...</p>\n) : (\n  <Grid\n    style={{\n      maxHeight: \"400px\",\n      overflowY: \"scroll\",\n    }}\n    columns={2}\n  >\n    {channels.map(channel => (\n      <Grid.Column key={channel.value}>\n        <p>\n          <b>{channel.name}</b>\n          {\" \"}\n(\n          {channel.value}\n)\n        </p>\n        <div>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              editChannel(channel);\n            }}\n          >\n            <Icon name=\"edit\" />\n                Rediger\n          </span>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => deleteChannel(channel.value)}\n          >\n            <Icon name=\"delete\" />\n                Fjern\n          </span>\n        </div>\n      </Grid.Column>\n    ))}\n  </Grid>\n));\n\nEditChannels.propTypes = {\n  channels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  editChannel: PropTypes.func.isRequired,\n  deleteChannel: PropTypes.func.isRequired,\n};\nexport default EditChannels;\n","import React, {Component} from \"react\";\nimport {Grid, Header} from \"semantic-ui-react\";\nimport NewChannelForm from \"../NewChannelForm\";\nimport EditChannels from \"../EditChannels\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ChannelContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: [],\n      selectedChannel: {\n        name: \"\",\n        value: \"1\"\n      },\n      valid: false,\n      loading: true,\n      message: \"\"\n    };\n    this.service = new FirebaseService();\n\n    this.addChannel = this.addChannel.bind(this);\n    this.deleteChannel = this.deleteChannel.bind(this);\n    this.editChannel = this.editChannel.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getChannels();\n  }\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  processChannels = channels =>\n    this.setState(prevState => ({\n      ...prevState,\n      channels: this.sortChannels(channels),\n      loading: false\n    }));\n\n  sortChannels = channels =>\n    channels.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  addChannel = () => {\n    this.service.addChannel(this.state.selectedChannel).then(data => {\n      this.setState({message: data.message});\n      this.resetForm();\n    });\n  };\n\n  handleChange = (name, value, valid) =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel: {\n        ...prevState.selectedChannel,\n        [name]: value\n      },\n      valid\n    }));\n\n  resetForm = () =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel: {\n        name: \"\",\n        value: \"1\"\n      },\n      valid: false\n    }));\n\n  editChannel = selectedChannel =>\n    this.setState(prevState => ({\n      ...prevState,\n      selectedChannel,\n      valid: true\n    }));\n\n  deleteChannel = channelId => {\n    if (!channelId) throw new Error(\"Cannot delete a channel without a key\");\n    this.service.removeChannel(channelId);\n  };\n\n  render() {\n    const {selectedChannel, valid, message, channels, loading} = this.state;\n    return (\n      <Grid columns={2}>\n        <Grid.Column>\n          <Header as=\"h3\">Legg til kanal</Header>\n          <NewChannelForm\n            selectedChannel={selectedChannel}\n            handleChange={this.handleChange}\n            addChannel={this.addChannel}\n            resetForm={this.resetForm}\n            valid={valid}\n            message={message}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">Rediger kanaler</Header>\n          <EditChannels\n            channels={channels}\n            editChannel={this.editChannel}\n            deleteChannel={this.deleteChannel}\n            loading={loading}\n          />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\nexport default ChannelContainer;\n","import React, {Component} from \"react\";\nimport {Button, Segment, Divider, Menu} from \"semantic-ui-react\";\nimport firebaseConfig from \"../../databaseConfig/firebaseConfig\";\nimport LeaguesContainer from \"./Containers/LeaguesContainer\";\nimport ColorContainer from \"./Containers/ColorContainer\";\nimport ChannelContainer from \"./Containers/ChannelContainer\";\n\nclass LeagueAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"ligaer\",\n      menuComponents: {\n        ligaer: <LeaguesContainer />,\n        farger: <ColorContainer />,\n        kanaler: <ChannelContainer />\n      }\n    };\n    this.logOut = this.logOut.bind(this);\n  }\n\n  getMenuComponent = name => {\n    const component = this.state.menuComponents[name];\n    if (!component) throw new Error(`Menu component not found for id: ${name}`);\n    return component;\n  };\n\n  logOut = e => {\n    e.preventDefault();\n    firebaseConfig.auth().signOut();\n  };\n\n  handleItemClick = (e, {name}) => this.setState({activeItem: name});\n\n  render() {\n    const {activeItem} = this.state;\n    const menuComponent = this.getMenuComponent(activeItem);\n    return (\n      <Segment>\n        <p>Dette er admin-sidene til Faresonen.</p>\n        <Menu tabular>\n          <Menu.Item\n            name=\"ligaer\"\n            active={activeItem === \"ligaer\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"farger\"\n            active={activeItem === \"farger\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"kanaler\"\n            active={activeItem === \"kanaler\"}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n        <Button onClick={this.logOut}>Logg ut</Button>\n        <Divider />\n        {menuComponent}\n      </Segment>\n    );\n  }\n}\nexport default LeagueAdmin;\n","import React, {Component} from \"react\";\nimport firebaseConfig from \"../../../databaseConfig/firebaseConfig\";\nimport LogInAdmin from \"../LogInAdmin\";\nimport LeagueAdmin from \"../LeagueAdmin\";\n\nclass AdminContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  // Authentication listener\n  authListener() {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({user});\n      } else {\n        this.setState({user: null});\n      }\n    });\n  }\n\n  render() {\n    return !this.state.user ? <LogInAdmin /> : <LeagueAdmin />;\n  }\n}\nexport default AdminContainer;\n","import React from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport AdminContainer from \"../Components/Admin/Containers/AdminContainer\";\n\nconst AdminView = () => (\n  <Container>\n    <FaresoneMenu />\n    <h1>Admin</h1>\n    <AdminContainer />\n  </Container>\n);\nexport default AdminView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Header, Form, Button} from \"semantic-ui-react\";\n\nconst FormErrors = ({errors}) => (\n  <ul>\n    {errors.map((error, index) => (\n      <li key={index}>{error}</li> // eslint-disable-line\n    ))}\n  </ul>\n);\nFormErrors.propTypes = {\n  errors: PropTypes.array.isRequired\n};\n\nconst NewUserForm = ({onChange, onSubmit, formErrors}) => (\n  <div>\n    <Header as=\"h3\">Opprett en ny bruker her</Header>\n\n    <Form onSubmit={onSubmit}>\n      <Form.Field>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          required\n          type=\"email\"\n          name=\"email\"\n          onChange={onChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"password\">Passord</label>\n        <input\n          id=\"password\"\n          required\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label htmlFor=\"confirmPassword\">Bekreft passord</label>\n        <input\n          id=\"confirmPassword\"\n          required\n          type=\"password\"\n          name=\"confirmedPassword\"\n          onChange={onChange}\n        />\n      </Form.Field>\n\n      <Button type=\"submit\">Opprett bruker</Button>\n      {formErrors.length > 0 ? <FormErrors errors={formErrors} /> : \"\"}\n    </Form>\n  </div>\n);\n\nNewUserForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.array.isRequired\n};\n\nexport default NewUserForm;\n","import React from \"react\";\nimport {Message} from \"semantic-ui-react\";\nimport NewUserForm from \"../NewUserForm\";\nimport firebaseConfig from \"../../../databaseConfig/firebaseConfig\";\n\nclass NewUserContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmedPassword: \"\",\n      formErrors: [],\n      info: \"\"\n    };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const {email, password, confirmedPassword} = this.state;\n    const errors = [];\n    if (password !== confirmedPassword) {\n      errors.push(\"Passordene matcher ikke\");\n    } else {\n      firebaseConfig\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(() => {})\n        .catch(error => {\n          const {message} = error;\n          errors.push(message);\n        });\n      this.setState({formErrors: errors});\n    }\n  };\n\n  onChange = event => {\n    event.preventDefault();\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  render() {\n    const {formErrors, info} = this.state;\n    return (\n      <div>\n        {info !== \"\" ? (\n          <Message>\n            <Message.Header>Informasjon</Message.Header>\n            <p>{info}</p>\n          </Message>\n        ) : (\n          \"\"\n        )}\n        <NewUserForm\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          formErrors={formErrors}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NewUserContainer;\n","import React from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport NewUserContainer from \"../Components/NewUser/Containers/NewUserContainer\";\n\nconst NewUserView = () => (\n  <Container>\n    <FaresoneMenu />\n    <NewUserContainer />\n  </Container>\n);\n\nexport default NewUserView;\n","import React, {useState} from \"react\";\nimport {Accordion, Icon} from \"semantic-ui-react\";\n\nconst AboutAccordion = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleClick = (e, titleProps) => {\n    const {index} = titleProps;\n    const newIndex = calculateNewIndex(index, activeIndex);\n\n    setActiveIndex(newIndex);\n  };\n\n  const calculateNewIndex = (index, activeIndex) =>\n    activeIndex === index ? -1 : index;\n\n  return (\n    <Accordion>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Motivasjon\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        <p>\n          Motivasjonen til denne applikasjonen var å bli kvitt repeterende og\n          kjedelig arbeid i forbindelse med forberedelser til FotballXtra.\n        </p>\n        <p>\n          Ideen bak har hele tiden vært og få generert lefsen til FotballXtra\n          med færrest mulige klikk. Fra første versjon av faresone-generatoren\n          så dagens lys som Java-applikasjon i 2014 er dagens versjon oppdatert\n          til å være web-basert. Det betyr at ny funksjonalitet kan komme ut\n          fortere og alt man trenger er en nettleser for tilgang.\n        </p>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Kan det legges til flere ligaer?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        <p>\n          Ja, det kan legges til flere ligaer. Alt man trenger er liga-id og\n          sesong-id fra \n          {\" \"}\n          <a href=\"http://www.altomfotball.no\">altomfotball.no</a>\n          . Foreløpig må det gjøres via Sindre Moldeklev, men i fremtiden kan\n          det være det kan bli gjort av deg som bruker.\n        </p>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Hvordan fungerer det?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        <p>\n          Dataene hentes direkte fra samme kilde som Homla og andre systemer i\n          TV 2. Vi kan dermed være sikre på at det vi bruker på luft også er det\n          vi ser på sidene her.\n        </p>\n\n        <p>\n          For Faresone-komponenten for bruk på sending så hentes de spillerne\n          som er i faresonen ned og lagret i nettleseren. Dermed får man besjed\n          dersom\n        </p>\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default AboutAccordion;\n","import React from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport AboutAccordion from \"../Components/Accordion/AboutAccordion\";\n\nconst AboutView = () => (\n  <div>\n    <FaresoneMenu />\n    <Header as=\"h1\">Om</Header>\n    <AboutAccordion />\n  </div>\n);\n\nexport default AboutView;\n","import React from \"react\";\nimport {Header, List} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst FantasyStatsList = props => (\n  <div>\n    <Header as=\"h2\">{props.header}</Header>\n    <List items={props.players} />\n  </div>\n);\n\nFantasyStatsList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.string).isRequired,\n  header: PropTypes.string.isRequired,\n};\n\nexport default FantasyStatsList;\n","import axios from \"axios\";\n\nconst FantasyStatsService = {\n  getMostSelectedPlayers(limit) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/fantasy/players\")\n        .then(data => {\n          const selectedPlayers = data.data\n            .sort((a, b) => {\n              const selectA = parseFloat(a.selected_by_percent);\n              const selectB = parseFloat(b.selected_by_percent);\n              if (selectA > selectB) return -1;\n              if (selectA === selectB) return 0;\n              if (selectA < selectB) return 1;\n              throw new Error(\n                \"Could not compute sorting order for most selected players\"\n              );\n            })\n            .filter(player => player.selected_by_percent !== \"0.0\")\n            .slice(0, limit);\n          resolve(selectedPlayers);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n\n  getMostExpensivePlayer(limit) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/fantasy/players\")\n        .then(data => {\n          const selectedPlayers = data.data\n            .sort((a, b) => {\n              if (a.now_cost > b.now_cost) return -1;\n              if (a.now_cost === b.now_cost) return 0;\n              if (a.now_cost < b.now_cost) return 1;\n              throw new Error(\n                \"Could not compute sorting order for most expensive players\"\n              );\n            })\n            .slice(0, limit);\n          resolve(selectedPlayers);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n};\n\nexport default FantasyStatsService;\n","import React, {Component} from \"react\";\nimport {Message, Segment, Grid} from \"semantic-ui-react\";\nimport FantasyStatsList from \"../FantasyStatsList\";\nimport FantasyStatsService from \"../../../services/FantasyStatsService\";\n\nclass FantasyStatsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        selectedPlayers: [],\n        expensivePlayers: []\n      },\n      errors: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMostSelectedPlayers(10);\n    this.getMostExpensivePlayers(10);\n  }\n\n  getMostExpensivePlayers = limit => {\n    FantasyStatsService.getMostExpensivePlayer(limit)\n      .then(data =>\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            expensivePlayers: data\n          }\n        }))\n      )\n      .catch(() => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            expensivePlayers: []\n          },\n          loading: false,\n          errors: [\n            ...prevState.errors,\n            \"Kunne ikke hente de dyreste spillerne. Er du koblet til internett?\"\n          ]\n        }));\n      });\n  };\n\n  getMostSelectedPlayers = limit => {\n    FantasyStatsService.getMostSelectedPlayers(limit)\n      .then(data => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            selectedPlayers: data\n          }\n        }));\n      })\n      .catch(() => {\n        this.setState(prevState => ({\n          data: {\n            ...prevState.data,\n            selectedPlayers: []\n          },\n          loading: false,\n          errors: [\n            ...prevState.errors,\n            \"Kunne ikke hente de mest valgte spillerne. Er du koblet til internett?\"\n          ]\n        }));\n      });\n  };\n\n  formatErrors = errors => (\n    <Message info>\n      <ul>\n        {errors.map(error => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </Message>\n  );\n\n  render() {\n    const {\n      data: {selectedPlayers, expensivePlayers},\n      errors\n    } = this.state;\n    if (errors.length > 0) {\n      return this.formatErrors(errors);\n    }\n\n    return (\n      <Segment>\n        <Grid columns={4}>\n          <Grid.Column>\n            <FantasyStatsList\n              players={selectedPlayers.map(\n                player =>\n                  `${player.selected_by_percent}% - ${player.first_name} ${\n                    player.second_name\n                  }`\n              )}\n              header=\"Mest valgte spillere\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <FantasyStatsList\n              players={expensivePlayers.map(\n                player =>\n                  `£${(player.now_cost / 10).toFixed(1)} mill. - ${\n                    player.first_name\n                  } ${player.second_name}`\n              )}\n              header=\"Dyreste spillere\"\n            />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    );\n  }\n}\nexport default FantasyStatsContainer;\n","import React from \"react\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport FantasyStatsContainer from \"../Components/FantasyStats/Containers/FantasyStatsContainer\";\n\nconst FantasyStatsView = () => (\n  <div>\n    <FaresoneMenu />\n    <FantasyStatsContainer />\n  </div>\n);\nexport default FantasyStatsView;\n","import React from \"react\";\n\nconst My404NotFound = () => <p>Siden finnes ikke</p>;\nexport default My404NotFound;\n","import React, {Component} from \"react\";\nimport {Menu} from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nclass TypeOfGraphicSubMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  handleItemClick = (event, props) => {\n    this.props.updateActiveItem(props.name);\n  };\n\n  render() {\n    const {activeItem} = this.props;\n    return (\n      <Menu>\n        <Menu.Item\n          name=\"liveinfo\"\n          active={activeItem === \"liveinfo\"}\n          onClick={this.handleItemClick}\n          link\n        >\n          Liveinfo\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"S18Teasesuper\"\n          active={activeItem === \"S18Teasesuper\"}\n          onClick={this.handleItemClick}\n          link\n        >\n          S18 - Teasesuper\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nTypeOfGraphicSubMenu.propTypes = {\n  activeItem: PropTypes.string.isRequired,\n  updateActiveItem: PropTypes.func.isRequired,\n};\n\nexport default TypeOfGraphicSubMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Dropdown} from \"semantic-ui-react\";\n\nconst SelectLeague = ({leagues, setSelectedLeague, selectedLeague}) => (\n  <Dropdown\n    fluid\n    search\n    selection\n    options={leagues}\n    onChange={(e, {value}) => setSelectedLeague(value)}\n    placeholder=\"Velg liga/turnering\"\n    value={selectedLeague}\n  />\n);\n\nSelectLeague.propTypes = {\n  leagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default SelectLeague;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectLeague from \"../SelectLeague\";\n\nconst SelectLeagueContainer = ({\n  setSelectedLeague,\n  selectedLeague,\n  leagues\n}) => (\n  <SelectLeague\n    leagues={leagues}\n    setSelectedLeague={setSelectedLeague}\n    selectedLeague={selectedLeague}\n  />\n);\nSelectLeagueContainer.propTypes = {\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired,\n  leagues: PropTypes.array.isRequired\n};\nexport default SelectLeagueContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FaresoneMenu from \"../Components/Menu/FaresoneMenu\";\nimport TypeOfGraphicSubMenu from \"../Components/PremierLeagueTools/TypeOfGraphicSubMenu\";\nimport SelectLeagueContainer from \"../Components/PremierLeagueTools/Containers/SelectLeagueContainer\";\n\nconst PremierLeagueToolsView = ({\n  leagues,\n  updateActiveItem,\n  activeItem,\n  setSelectedLeague,\n  selectedLeague,\n  graphicComponent\n}) => (\n  <div>\n    <FaresoneMenu />\n    <TypeOfGraphicSubMenu\n      updateActiveItem={updateActiveItem}\n      activeItem={activeItem}\n    />\n    <SelectLeagueContainer\n      leagues={leagues}\n      setSelectedLeague={setSelectedLeague}\n      selectedLeague={selectedLeague}\n    />\n    {graphicComponent}\n  </div>\n);\nPremierLeagueToolsView.propTypes = {\n  activeItem: PropTypes.string.isRequired,\n  updateActiveItem: PropTypes.func.isRequired,\n  graphicComponent: PropTypes.node.isRequired,\n  leagues: PropTypes.array.isRequired,\n  setSelectedLeague: PropTypes.func.isRequired,\n  selectedLeague: PropTypes.string.isRequired\n};\nexport default PremierLeagueToolsView;\n","const today = \"Avspark kl. \";\nconst tomorrow = \"I morgen fra kl. \";\nconst monday = \"Mandag fra kl. \";\nconst tuesday = \"Tirsdag fra kl. \";\nconst wednesday = \"Onsdag fra kl. \";\nconst thursday = \"Torsdag fra kl. \";\nconst friday = \"Fredag fra kl. \";\nconst saturday = \"Lørdag fra kl. \";\nconst sunday = \"Søndag fra kl. \";\nexport default [\n  {\n    key: today,\n    value: today,\n    text: today,\n  },\n  {\n    key: tomorrow,\n    value: tomorrow,\n    text: tomorrow,\n  },\n\n  {\n    key: monday,\n    value: monday,\n    text: monday,\n  },\n  {\n    key: tuesday,\n    value: tuesday,\n    text: tuesday,\n  },\n  {\n    key: wednesday,\n    value: wednesday,\n    text: wednesday,\n  },\n  {\n    key: thursday,\n    value: thursday,\n    text: thursday,\n  },\n  {\n    key: friday,\n    value: friday,\n    text: friday,\n  },\n  {\n    key: saturday,\n    value: saturday,\n    text: saturday,\n  },\n  {\n    key: sunday,\n    value: sunday,\n    text: sunday,\n  },\n];\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Message, Dropdown} from \"semantic-ui-react\";\nimport moment from \"moment-timezone\";\nimport kickOfTexts from \"../../Data/kickOfTexts\";\nimport \"./LiveTeaseGenerator.css\";\n\nclass LiveTeaseGenerator extends Component {\n  componentDidMount() {\n    this.createTimes();\n  }\n\n  handleChange = (event, props) => this.props.handleChange(props);\n\n  createTimes = () => {\n    const hours = 24;\n    const minutes = 15;\n    const times = [];\n    // eslint-disable-next-line\n    for (let i = 0; i < hours; i++) {\n      for (let y = 0; y < 60; y += minutes) {\n        const time = `${this.padTime(i)}.${this.padTime(y)}`;\n        times.push({\n          key: time,\n          value: time,\n          text: time\n        });\n      }\n    }\n    return times;\n  };\n\n  padTime = time => (time < 10 ? `0${time}` : time.toString());\n\n  mapMatches = matches => {\n    moment.tz.setDefault(\"Europe/Oslo\");\n\n    return matches.map(match => ({\n      key: match[\"@uri\"],\n      value: match.name,\n      text: `${match.name} - ${moment(match.starttime).from(\n        moment()\n      )} - ${moment(match.starttime).format(\"DD.MM.YYYY [Kl.] HH:mm\")}`\n    }));\n  };\n\n  mapChannels = channels =>\n    channels.map(channel => ({\n      key: channel.value,\n      value: parseInt(channel.value, 10),\n      text: channel.name\n    }));\n\n  render() {\n    return (\n      <div>\n        <Message info>\n          Obs obs, pass på og alltid dobbeltsjekke scriptet før du bruker det på\n          sending\n        </Message>\n        <Dropdown\n          className=\"dropdown\"\n          placeholder=\"Velg kamp\"\n          fluid\n          search\n          selection\n          loading={this.props.loading}\n          options={this.mapMatches(this.props.matches)}\n          onChange={this.handleChange}\n          name=\"selectedMatch\"\n        />\n        <Dropdown\n          className=\"dropdown\"\n          placeholder=\"Velg avsparkstekst\"\n          search\n          selection\n          options={kickOfTexts}\n          onChange={this.handleChange}\n          name=\"matchTimeText\"\n        />\n        <Dropdown\n          className=\"dropdown\"\n          placeholder=\"Velg klokkeslett\"\n          search\n          selection\n          options={this.createTimes()}\n          onChange={this.handleChange}\n          name=\"matchTime\"\n        />\n        {this.props.colors.length > 0 ? (\n          <div>\n            <Dropdown\n              className=\"dropdown\"\n              placeholder=\"Velg farge hjemmelag\"\n              search\n              selection\n              options={this.props.colors}\n              onChange={this.handleChange}\n              name=\"colorHome\"\n            />\n\n            <Dropdown\n              className=\"dropdown\"\n              placeholder=\"Velg farge bortelag\"\n              search\n              options={this.props.colors}\n              selection\n              onChange={this.handleChange}\n              name=\"colorAway\"\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n        <Dropdown\n          className=\"dropdown\"\n          placeholder=\"Velg kanal\"\n          fluid\n          search\n          selection\n          multiple\n          defaultValue={this.props.defaultChannels}\n          onChange={this.handleChange}\n          options={this.mapChannels(this.props.allChannels)}\n          name=\"channels\"\n        />\n      </div>\n    );\n  }\n}\n\nLiveTeaseGenerator.propTypes = {\n  matches: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      starttime: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  defaultChannels: PropTypes.arrayOf(PropTypes.number).isRequired,\n  allChannels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      hex: PropTypes.string.isRequired,\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  )\n};\n\nLiveTeaseGenerator.defaultProps = {\n  colors: []\n};\n\nexport default LiveTeaseGenerator;\n","// @flow\nimport axios from \"axios\";\n\nconst AltOmFotballMatchService = {\n  getMatches: (tournamentId, seasonId) =>\n    new Promise((resolve, reject) => {\n      axios\n        .get(`/matches/${tournamentId}/${seasonId}`)\n        .then(data => resolve(data))\n        .catch(err => reject(err));\n    }),\n\n  getOnlyNotDoneMatches: (tournamentId, seasonId) => {\n    const self = this.a; // eslint-disable-line\n    return new Promise((resolve, reject) => {\n      axios\n        .get(`/matches/${tournamentId}/${seasonId}`)\n        .then(data => {\n          if (data.data.match) {\n            const filtered = self.filterNotDoneMatches(data.data.match);\n            resolve(filtered);\n          } else {\n            resolve([]);\n          }\n        })\n        .catch(err => reject(err));\n    });\n  },\n\n  filterNotDoneMatches: matches =>\n    matches.filter(match => match.confirmed !== \"true\"),\n\n  splitNames: (name, delimiter) => {\n    if (name) return name.split(delimiter);\n    return name;\n  },\n\n  getChannelName: (allChannels, channelId) => {\n    if (!allChannels) throw new Error(\"Please provide a list of channels\");\n    if (allChannels.length === 0) return \"Laster... \";\n    if (!channelId) throw new Error(\"Please provide a channelId\");\n\n    const channelFound = allChannels.find(\n      channel => parseInt(channel.value, 10) === channelId\n    );\n    if (!channelFound)\n      return `Kanal for ID: ${channelId} ble ikke funnet. Du kan legge til en kanal med den ID'en i admin-menyen`;\n\n    return channelFound.name;\n  }\n};\n\nexport default AltOmFotballMatchService;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {TextArea, Grid, Header, Segment} from \"semantic-ui-react\";\nimport altOmFotballMatchService from \"../../services/altOmFotballMatchService\";\n\nconst LiveTeasePreview = ({\n  allChannels,\n  selectedMatch,\n  matchTime,\n  matchTimeText,\n  channels,\n  homeColor,\n  findColor,\n  awayColor,\n  script\n}) => (\n  <Segment>\n    <Header as=\"h3\">Preview</Header>\n    <Grid columns={2}>\n      <Grid.Column>\n        {selectedMatch ? (\n          <p>\n            Kamp valgt:\n            {selectedMatch}\n          </p>\n        ) : (\n          \"\"\n        )}\n        {matchTimeText && matchTime ? (\n          <p>\n            Fritekst: \n            {\" \"}\n            {matchTimeText} \n            {\" \"}\n            {matchTime}\n          </p>\n        ) : (\n          \"\"\n        )}\n        {channels && channels.length > 0 ? (\n          <p>\n            Kanal(er):\n            {\" \"}\n            {channels\n              .map(channel =>\n                altOmFotballMatchService.getChannelName(allChannels, channel)\n              )\n              .join(\",\")}\n          </p>\n        ) : (\n          \"\"\n        )}\n        {homeColor && (\n          <p>\n            Farge hjemmelag:\n            {\" \"}\n            <span style={{background: findColor(homeColor).hex}}>\n              {findColor(homeColor).text}\n            </span>\n          </p>\n        )}\n\n        {awayColor && (\n          <p>\n            Farge bortelag:\n            {\" \"}\n            <span style={{background: findColor(awayColor).hex}}>\n              {findColor(awayColor).text}\n            </span>\n          </p>\n        )}\n      </Grid.Column>\n      <Grid.Column>\n        <TextArea\n          style={{width: \"100%\", color: \"#298aef\"}}\n          autoHeight\n          value={script}\n        />\n      </Grid.Column>\n    </Grid>\n  </Segment>\n);\n\nLiveTeasePreview.propTypes = {\n  selectedMatch: PropTypes.string.isRequired,\n  matchTimeText: PropTypes.string.isRequired,\n  matchTime: PropTypes.string.isRequired,\n  channels: PropTypes.arrayOf(PropTypes.number).isRequired,\n  findColor: PropTypes.func,\n  allChannels: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  script: PropTypes.string.isRequired,\n  awayColor: PropTypes.string,\n  homeColor: PropTypes.string\n};\n\nLiveTeasePreview.defaultProps = {\n  awayColor: null,\n  homeColor: null,\n  findColor: () => {}\n};\n\nexport default LiveTeasePreview;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Segment, Message} from \"semantic-ui-react\";\nimport LiveTeaseGenerator from \"../LiveTeaseGenerator\";\nimport altOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\nimport LiveTeasePreview from \"../LiveTeasePreview\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass ProgramTeaseGeneratorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        matches: [],\n        channels: [5],\n        allChannels: [],\n        matchTimeText: \"\",\n        matchTime: \"\",\n        selectedMatch: \"\"\n      },\n      loading: false\n    };\n    this.service = new FirebaseService();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMatches();\n    this.getChannels();\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const {selectedLeague} = props;\n    if (selectedLeague) {\n      const [id, season] = selectedLeague.split(\"-\");\n      this.getMatches(id, season);\n    }\n  }\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  getMatches = (tournamentId, seasonId) => {\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data\n      },\n      loading: true\n    }));\n    if (!tournamentId || !seasonId) {\n      return;\n    }\n    altOmFotballMatchService\n      .getOnlyNotDoneMatches(tournamentId, seasonId)\n      .then(data => {\n        this.setState(prevState => ({\n          ...prevState,\n          data: {\n            ...prevState.data,\n            matches: data\n          },\n          loading: false\n        }));\n      })\n      .catch(() => {\n        this.setState(prevState => ({\n          ...prevState,\n          error: \"Kunne ikke hente kamper fra AltomFotball\",\n          loading: false\n        }));\n      });\n  };\n\n  createScript = () => {\n    const {data} = this.state;\n    const [home, away] = altOmFotballMatchService.splitNames(\n      data.selectedMatch,\n      \"-\"\n    );\n    const channel = data.channels[0] ? data.channels[0] : \"INGEN KANAL VALGT\";\n    return `Super S18 ${channel}\n${data.matchTimeText || \"Tekst ikke valgt\"}\n${data.matchTime || \"Tid ikke valgt\"}\nPremier League\n${home || \"Hjemmelag ikke valgt\"} - ${away ||\n      \"Bortelag ikke valgt\"}<00:01-00:15`;\n  };\n\n  handleChange = ({value, name}) =>\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data,\n        [name]: value\n      }\n    }));\n\n  processChannels = allChannels =>\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data,\n        allChannels\n      }\n    }));\n\n  render() {\n    const script = this.createScript();\n    const {\n      matches,\n      channels,\n      selectedMatch,\n      matchTimeText,\n      matchTime,\n      allChannels\n    } = this.state.data;\n    if (this.state.loading) {\n      return <p>Henter kamper...</p>;\n    }\n    if (matches.length === 0 && !this.state.loading) {\n      return (\n        <Message info>\n          <Message.Header>Info</Message.Header>\n          Ingen kamper tilgjengelig\n        </Message>\n      );\n    }\n    return (\n      <Segment>\n        <LiveTeaseGenerator\n          matches={matches}\n          defaultChannels={channels}\n          allChannels={allChannels}\n          handleChange={this.handleChange}\n          loading={this.state.loading}\n        />\n        <LiveTeasePreview\n          selectedMatch={selectedMatch}\n          matchTimeText={matchTimeText}\n          matchTime={matchTime}\n          channels={channels}\n          allChannels={allChannels}\n          script={script}\n        />\n      </Segment>\n    );\n  }\n}\n\nProgramTeaseGeneratorContainer.propTypes = {\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default ProgramTeaseGeneratorContainer;\n","const path = \"IMAGE*Onair/Sport/Fotball/Premier_League/2016/Badges/Highres/\";\nconst badges = [\n  {\n    team: \"ARSENAL\",\n    path: `${path}ARSENAL`,\n  },\n\n  {\n    team: \"BOURNEMOUTH\",\n    path: `${path}BOURNEMOUTH`,\n  },\n\n  {\n    team: \"BRIGHTON\",\n    path: `${path}Brighton`,\n  },\n\n  {\n    team: \"BURNLEY\",\n    path: `${path}BURNLEY`,\n  },\n\n  {\n    team: \"CHELSEA\",\n    path: `${path}CHELSEA`,\n  },\n\n  {\n    team: \"CRYSTAL PALACE\",\n    path: `${path}CRYSTAL_PALACE`,\n  },\n\n  {\n    team: \"EVERTON\",\n    path: `${path}EVERTON`,\n  },\n\n  {\n    team: \"Huddersfield\",\n    path: `${path}Huddersfield`,\n  },\n\n  {\n    team: \"HULL\",\n    path: `${path}HULL`,\n  },\n\n  {\n    team: \"LEICESTER\",\n    path: `${path}LEICESTER`,\n  },\n\n  {\n    team: \"LIVERPOOL\",\n    path: `${path}LIVERPOOL`,\n  },\n\n  {\n    team: \"MANCHESTER CITY\",\n    path: `${path}MAN_CITY`,\n  },\n\n  {\n    team: \"MANCHESTER UNITED\",\n    path: `${path}MAN_UTD`,\n  },\n\n  {\n    team: \"MIDDLESBROUGH\",\n    path: `${path}MIDDLESBROUGH`,\n  },\n\n  {\n    team: \"Newcastle\",\n    path: `${path}Newcastle`,\n  },\n\n  {\n    team: \"SOUTHAMPTON\",\n    path: `${path}SOUTHAMPTON`,\n  },\n\n  {\n    team: \"STOKE\",\n    path: `${path}STOKE`,\n  },\n\n  {\n    team: \"SUNDERLAND\",\n    path: `${path}SUNDERLAND`,\n  },\n\n  {\n    team: \"SWANSEA\",\n    path: `${path}SWANSEA`,\n  },\n\n  {\n    team: \"TOTTENHAM\",\n    path: `${path}TOTTENHAM`,\n  },\n\n  {\n    team: \"WATFORD\",\n    path: `${path}WATFORD`,\n  },\n\n  {\n    team: \"WEST BROMWICH\",\n    path: `${path}WEST_BROM`,\n  },\n  {\n    team: \"WOLVERHAMPTON\",\n    path: `${path}WOLVERHAMPTON`,\n  },\n  {\n    team: \"FULHAM\",\n    path: `${path}FULHAM`,\n  },\n  {\n    team: \"CARDIFF\",\n    path: `${path}CARDIFF`,\n  },\n\n  {\n    team: \"WEST HAM\",\n    path: `${path}WEST_HAM`,\n  },\n];\n\nexport default badges;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Message, Segment} from \"semantic-ui-react\";\nimport LiveTeaseGenerator from \"../LiveTeaseGenerator\";\nimport LiveTeasePreview from \"../LiveTeasePreview\";\nimport badges from \"../../../Data/badgePaths\";\nimport altOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nclass LiveTeaseGeneratorContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {match: []},\n      selectedMatch: \"\",\n      matchTimeText: \"\",\n      matchTime: \"\",\n      channels: [5, 10],\n      allChannels: [],\n      colorHome: \"\",\n      colorAway: \"\",\n      colors: [],\n      script: \"\",\n      loading: false,\n      error: \"\",\n      leagueSelected: {\n        tournamentId: \"\",\n        seasonId: \"\"\n      }\n    };\n    this.service = new FirebaseService();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLeagues();\n    this.getChannels();\n    this.getColors();\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const {selectedLeague} = props;\n    if (selectedLeague) {\n      const [id, season] = selectedLeague.split(\"-\");\n      this.getLeagues(id, season);\n    }\n  }\n\n  getColors = () => {\n    this.service.getColors(colors => {\n      this.setState({colors});\n    });\n  };\n\n  getLeagues = (tournamentId, seasonId) => {\n    if (!tournamentId || !seasonId) {\n      return;\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      data: {\n        ...prevState.data\n      },\n      loading: true\n    }));\n    this.getMatches(tournamentId, seasonId);\n  };\n\n  getChannels = () => {\n    this.service.getChannels(this.processChannels);\n  };\n\n  getMatches = (tournamentId, seasonId) => {\n    altOmFotballMatchService\n      .getOnlyNotDoneMatches(tournamentId, seasonId)\n      .then(data => {\n        this.setState({\n          data: {match: data},\n          loading: false,\n          error: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          data: {},\n          loading: false,\n          error:\n            \"Det var et problem ved henting av kamper. Sjekk at du er koblet til internett\"\n        });\n      });\n  };\n\n  getGenerator = (matches, script) => (\n    <Segment>\n      <LiveTeaseGenerator\n        matches={matches}\n        handleChange={this.handleChange}\n        defaultChannels={this.state.channels}\n        loading={this.state.loading}\n        colors={this.state.colors}\n        allChannels={this.state.allChannels}\n      />\n      <LiveTeasePreview\n        selectedMatch={this.state.selectedMatch}\n        matchTimeText={this.state.matchTimeText}\n        matchTime={this.state.matchTime}\n        channels={this.state.channels}\n        allChannels={this.state.allChannels}\n        script={script}\n        awayColor={this.state.colorAway}\n        homeColor={this.state.colorHome}\n        findColor={this.findColor}\n      />\n    </Segment>\n  );\n\n  getBadgePath = team => {\n    const badgeFound = badges.find(\n      badge => badge.team.toLowerCase() === team.toLowerCase()\n    );\n    if (badgeFound) return badgeFound;\n    return {path: \"IKKE RIKTIG BADGE\"};\n    // throw new Error(`Could not find badge for ${team}`);\n  };\n\n  getChannelName = channel => {\n    const found = this.state.allChannels.find(ch => ch.value === channel);\n    if (found) return found.name;\n    throw new Error(`Could not find a channel number for ${channel}`);\n  };\n\n  getScriptColor = colorKey => this.findColor(this.state[colorKey]).value;\n\n  formatChannels = (formattingChannels, text) => {\n    let formattedChannels = [...formattingChannels];\n    if (formattingChannels.length === 0) return \"INGEN KANALER VALGT\";\n    // If only one channel is chosen, add a 0 to end of channel list because of how iNews script works\n    if (formattedChannels.length === 1) formattedChannels.push(0);\n\n    // If text is not equal to {avspark kl.} then remove all channels, except first, and add 0 to end of channel list\n    if (!text.includes(\"Avspark kl.\")) {\n      formattedChannels = [formattingChannels[0], 0];\n    }\n    return formattedChannels.join(\"\\n\");\n  };\n\n  createScript = () => {\n    const {\n      selectedMatch: match,\n      matchTimeText: text,\n      matchTime: time,\n      channels: tvChannels\n    } = this.state;\n    if (!match) return \"\";\n\n    // TODO Refactor this check for if we can split the match string in two pieces\n    if (match.split(\"-\").length < 2) return match;\n    const teams = match.split(\"-\");\n    const homeTeam = this.formatName(teams[0]);\n    const awayTeam = this.formatName(teams[1]);\n    const homeBadge = this.getBadgePath(homeTeam);\n    const awayBadge = this.getBadgePath(awayTeam);\n\n    return `*SUPER Kamp_Promo_v2 ${homeTeam}\n${homeBadge.path}\n${this.getScriptColor(\"colorHome\")}\n${awayTeam}\n${awayBadge.path}\n${this.getScriptColor(\"colorAway\")}\n${text.trim()} ${time.trim()}\n${this.formatChannels(tvChannels, text.trim())}\nPREMIER LEAGUE <00:02-00:15`;\n  };\n\n  formatName = name => name.replace(\"_\", \"\");\n\n  findColor = value => {\n    const color = this.state.colors.find(c => c.value === value);\n    if (color) return color;\n    return {text: \"FARGE IKKE FUNNET\", hex: \"\", value: \"FARGE IKKE FUNNET\"};\n  };\n\n  handleChange = ({name, value}) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  processChannels = allChannels => this.setState({allChannels});\n\n  render() {\n    if (this.state.loading) {\n      return <p>Henter kamper...</p>;\n    }\n    if (this.state.data.match.length === 0 && !this.state.loading) {\n      return (\n        <Message info>\n          <Message.Header>Info</Message.Header>\n          Ingen kamper tilgjengelig\n        </Message>\n      );\n    }\n    if (this.state.error) {\n      return <Message warning>{this.state.error}</Message>;\n    }\n\n    let {match: matches} = this.state.data;\n    if (!matches) {\n      matches = [];\n    }\n\n    const script = this.createScript();\n    const generator = this.getGenerator(matches, script);\n    return <Segment>{generator}</Segment>;\n  }\n}\nLiveTeaseGeneratorContainer.propTypes = {\n  selectedLeague: PropTypes.string.isRequired\n};\n\nexport default LiveTeaseGeneratorContainer;\n","import React, {Component} from \"react\";\nimport PremierLeagueToolsView from \"../../../Views/PremierLeagueToolsView\";\nimport ProgramTeaseGeneratorContainer from \"./ProgramTeaseGeneratorContainer\";\nimport LiveTeaseGeneratorContainer from \"./LiveTeaseGeneratorContainer\";\nimport altOmFotballLeagueService from \"../../../services/altOmFotballLeagueService\";\nimport AltOmFotballMatchService from \"../../../services/altOmFotballMatchService\";\n\nclass GraphicsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeItem: \"liveinfo\",\n      selectedLeague: \"\",\n      leagues: []\n    };\n    this.getTypeOfGraphicComponents = this.getTypeOfGraphicComponents.bind(\n      this\n    );\n    this.service = altOmFotballLeagueService;\n    this.matchService = AltOmFotballMatchService;\n    this.mapLeagues = this.mapLeagues.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLeagues();\n  }\n\n  getTypeOfGraphicComponents = type => {\n    switch (type.toLowerCase()) {\n      case \"liveinfo\":\n        return (\n          <LiveTeaseGeneratorContainer\n            selectedLeague={this.state.selectedLeague}\n          />\n        );\n      case \"s18teasesuper\":\n        return (\n          <ProgramTeaseGeneratorContainer\n            selectedLeague={this.state.selectedLeague}\n          />\n        );\n      default:\n        return <p>Lol</p>;\n    }\n  };\n\n  setSelectedLeague = selectedLeague => {\n    this.setState({selectedLeague});\n  };\n\n  getLeagues() {\n    this.service.getAllLeagues().then(data => {\n      this.setState({leagues: data.data.tournament});\n    });\n  }\n\n  updateActiveItem = item => {\n    this.setState({activeItem: item});\n  };\n\n  mapLeagues = leagues =>\n    leagues.map(league => ({\n      key: league.id + league.name,\n      value: `${league.id}-${this.service.getActiveSeasonNumber(\n        league.activeseason[\"@uri\"]\n      )}`,\n      text: league.name\n    }));\n\n  render() {\n    const element = this.getTypeOfGraphicComponents(this.state.activeItem);\n    const mappedLeagues = this.mapLeagues(this.state.leagues);\n    return (\n      <PremierLeagueToolsView\n        activeItem={this.state.activeItem}\n        updateActiveItem={this.updateActiveItem}\n        graphicComponent={element}\n        setSelectedLeague={this.setSelectedLeague}\n        selectedLeague={this.state.selectedLeague}\n        leagues={mappedLeagues}\n      />\n    );\n  }\n}\nexport default GraphicsContainer;\n","import React, {Component} from \"react\";\nimport {Container} from \"semantic-ui-react\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport FrontpageView from \"./Views/FrontpageView\";\nimport MainView from \"./Views/MainView\";\nimport RoundView from \"./Views/RoundView\";\nimport DangerzoneView from \"./Views/DangerzoneView\";\nimport FantasyView from \"./Views/FantasyView\";\nimport DetailedPlayerView from \"./Views/DetailedPlayerView\";\nimport GigSportsView from \"./Views/GigSportsView\";\nimport AdminView from \"./Views/AdminView\";\nimport NewUserView from \"./Views/NewUserView\";\nimport AboutView from \"./Views/AboutView\";\nimport FantasyStatsView from \"./Views/FantasyStatsView\";\nimport My404NotFound from \"./Views/My404NotFound\";\nimport FirebaseService from \"./services/FirebaseService\";\nimport GraphicsContainer from \"./Components/PremierLeagueTools/Containers/GraphicsContainer\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-58175708-2\");\n  ReactGA.pageview(\"/forside\");\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leagueName: \"\",\n      tournamentId: \"\",\n      seasonId: \"\",\n      leagues: [],\n      loading: true,\n      error: \"\"\n    };\n    initializeReactGA();\n    this.service = new FirebaseService();\n  }\n\n  componentDidMount() {\n    this.service.getLeagues(this.processLeagues);\n  }\n\n  processLeagues = leagues => this.setState({leagues, loading: false});\n\n  switchLeagueName = (leagueName, tournamentId, seasonId) => {\n    this.setState({leagueName, tournamentId, seasonId});\n  };\n\n  render() {\n    return (\n      <Container>\n        <HashRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={props => (\n                <FrontpageView\n                  switchLeagueName={this.switchLeagueName}\n                  leagueInfo={this.state}\n                  leagues={this.state.leagues}\n                  {...props}\n                  loading={this.state.loading}\n                  error={this.state.error}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/league/:leagueName/:tournamentId/:seasonId\"\n              component={props => <MainView {...props} />}\n            />\n            <Route\n              exact\n              path=\"/league/:tournamentId/:seasonId/:leagueName/round/:roundNumber/roundId/:roundId/nextRound/:nextRoundId\"\n              render={props => (\n                <RoundView\n                  tournamentId={this.state.tournamentId}\n                  seasonId={this.state.seasonId}\n                  leagueName={this.state.leagueName}\n                  switchLeagueName={this.switchLeagueName}\n                  {...props}\n                />\n              )}\n            />\n            <Route exact path=\"/dangerzone/\" component={DangerzoneView} />\n            <Route exact path=\"/fantasy/\" component={FantasyView} />\n            <Route exact path=\"/fantasy/stats\" component={FantasyStatsView} />\n            <Route\n              exact\n              path=\"/fantasy/player/:playerId\"\n              component={DetailedPlayerView}\n            />\n            <Route exact path=\"/gigsports/\" component={GigSportsView} />\n            <Route exact path=\"/premierleague/\" component={GraphicsContainer} />\n            <Route exact path=\"/admin/\" component={AdminView} />\n            <Route exact path=\"/newuser\" component={NewUserView} />\n            <Route exact path=\"/about/\" component={AboutView} />\n            <Route path=\"*\" exact component={My404NotFound} />\n          </Switch>\n        </HashRouter>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport default function register() {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available; please refresh.\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get(\"content-type\").indexOf(\"javascript\") ===\n\t\t\t\t\t-1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Raven from \"raven-js\";\n\nimport \"./index.css\";\nimport \"./print.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nif (process.env.NODE_ENV !== \"development\") {\n  Raven.config(\n    \"https://6804db3180e14d51a1da9c443b1a288c@sentry.io/1280627\",\n  ).install();\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}
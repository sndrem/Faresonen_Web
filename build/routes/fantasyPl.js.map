{"version":3,"sources":["../../src/routes/fantasyPl.js"],"names":["express","require","fplapi","fantasyPlRouter","Router","get","req","res","status","json","text","getElements","then","data","catch","err","getTeams","playerId","params","playerData","find","player","id","parseInt","teamId","team","t","code","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASD,QAAQ,cAAR,CAAf;;AAEA,IAAME,kBAAkBH,QAAQI,MAAR,EAAxB;;AAEA;AACAD,gBAAgBE,GAAhB,CAAoB,GAApB,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,OAAR,EAArB;AACD,CAFD;;AAIAP,gBAAgBE,GAAhB,CAAoB,UAApB,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5CL,SACGS,WADH,GAEGC,IAFH,CAEQ,gBAAQ;AACZL,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,IAArB;AACD,GAJH,EAKGC,KALH,CAKS;AAAA,WAAOP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,GAArB,CAAP;AAAA,GALT;AAMD,CAPD;;AASAZ,gBAAgBE,GAAhB,CAAoB,QAApB,EAA8B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1CL,SACGc,QADH,GAEGJ,IAFH,CAEQ,gBAAQ;AACZL,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,IAArB;AACD,GAJH,EAKGC,KALH,CAKS;AAAA,WAAOP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,GAArB,CAAP;AAAA,GALT;AAMD,CAPD;;AASAZ,gBAAgBE,GAAhB,CAAoB,mBAApB,EAAyC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MAC7CU,QAD6C,GAChCX,IAAIY,MAD4B,CAC7CD,QAD6C;;;AAGrDf,SAAOS,WAAP,GAAqBC,IAArB,CAA0B,gBAAQ;AAChC,QAAMO,aAAaN,KAAKO,IAAL,CACjB;AAAA,aAAUC,OAAOC,EAAP,KAAcC,SAASN,QAAT,EAAmB,EAAnB,CAAxB;AAAA,KADiB,CAAnB;AAGA,QAAIE,UAAJ,EAAgB;AACdZ,UAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,UAArB;AACD,KAFD,MAEOZ,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACR,GAPD;AAQD,CAXD;;AAaAN,gBAAgBE,GAAhB,CAAoB,eAApB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MACzCiB,MADyC,GAC9BlB,IAAIY,MAD0B,CACzCM,MADyC;;AAEjDtB,SAAOc,QAAP,GAAkBJ,IAAlB,CAAuB,gBAAQ;AAC7B,QAAMa,OAAOZ,KAAKO,IAAL,CAAU,aAAK;AAC1B,aAAOM,EAAEC,IAAF,KAAWJ,SAASC,MAAT,EAAiB,EAAjB,CAAlB;AACD,KAFY,CAAb;AAGA,QAAI,CAACC,IAAL,EAAW;AACTlB,UAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACD,KAFD,MAEOF,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,IAArB;AACR,GAPD;AAQD,CAVD;;AAYAG,OAAOC,OAAP,GAAiB1B,eAAjB","file":"fantasyPl.js","sourcesContent":["const express = require(\"express\");\nconst fplapi = require(\"fpl-api-node\");\n\nconst fantasyPlRouter = express.Router();\n\n/* GET home page. */\nfantasyPlRouter.get(\"/\", (req, res) => {\n  res.status(200).json({ text: \"Hello\" });\n});\n\nfantasyPlRouter.get(\"/players\", (req, res) => {\n  fplapi\n    .getElements()\n    .then(data => {\n      res.status(200).json(data);\n    })\n    .catch(err => res.status(400).json(err));\n});\n\nfantasyPlRouter.get(\"/teams\", (req, res) => {\n  fplapi\n    .getTeams()\n    .then(data => {\n      res.status(200).json(data);\n    })\n    .catch(err => res.status(400).json(err));\n});\n\nfantasyPlRouter.get(\"/player/:playerId\", (req, res) => {\n  const { playerId } = req.params;\n\n  fplapi.getElements().then(data => {\n    const playerData = data.find(\n      player => player.id === parseInt(playerId, 10)\n    );\n    if (playerData) {\n      res.status(200).json(playerData);\n    } else res.status(400).json({});\n  });\n});\n\nfantasyPlRouter.get(\"/team/:teamId\", (req, res) => {\n  const { teamId } = req.params;\n  fplapi.getTeams().then(data => {\n    const team = data.find(t => {\n      return t.code === parseInt(teamId, 10);\n    });\n    if (!team) {\n      res.status(400).json({});\n    } else res.status(200).json(team);\n  });\n});\n\nmodule.exports = fantasyPlRouter;\n"]}